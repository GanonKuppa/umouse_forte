   1                             		.file	"main.cpp"
   2                             		.section P,"ax"
   3                             	.Ltext0:
   4                             		.section	.text._ZN9Icm20608GD2Ev,"axG",@progbits,_ZN9Icm20608GD5Ev,comdat
   5                             		.weak	__ZN9Icm20608GD2Ev
   7                             	__ZN9Icm20608GD2Ev:
   8                             	.LFB736:
   9                             		.file 1 "C:\\Users\\ryota\\e2_studio\\workspace\\umouse\\src\\umouse_object/imu.hpp"
   1:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\imu.hpp **** #ifndef IMU_H
   2:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\imu.hpp **** #define IMU_H
   3:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\imu.hpp **** 
   4:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\imu.hpp **** #include <stdint.h>
   5:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\imu.hpp **** 
   6:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\imu.hpp **** class Icm20608G{
   7:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\imu.hpp **** 
   8:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\imu.hpp **** public:
   9:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\imu.hpp **** 	volatile int16_t omega_raw[3];
  10:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\imu.hpp **** 	volatile int16_t acc_raw[3];
  11:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\imu.hpp **** 	volatile int16_t temp_raw;
  12:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\imu.hpp **** 
  13:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\imu.hpp **** 	volatile int16_t omega_ref[3];
  14:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\imu.hpp **** 	volatile int16_t acc_ref[3];
  15:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\imu.hpp **** 
  16:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\imu.hpp **** 	volatile int16_t omega_c[3];
  17:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\imu.hpp **** 	volatile int16_t acc_c[3];
  18:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\imu.hpp **** 	volatile int16_t mag_c[3];
  19:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\imu.hpp **** 
  20:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\imu.hpp **** 	volatile float omega_f[3];
  21:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\imu.hpp **** 	volatile float acc_f[3];
  22:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\imu.hpp **** 	volatile float mag_f[3];
  23:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\imu.hpp **** 	volatile float temp_f;
  24:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\imu.hpp **** 
  25:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\imu.hpp **** 	static Icm20608G& getInstance(){
  26:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\imu.hpp **** 		static Icm20608G instance;
  27:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\imu.hpp **** 		return instance;
  28:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\imu.hpp **** 	}
  29:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\imu.hpp **** 
  30:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\imu.hpp **** 
  31:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\imu.hpp **** 	uint8_t whoAmI(void);
  32:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\imu.hpp **** 	void init();
  33:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\imu.hpp ****     void update();
  34:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\imu.hpp **** 	void calibOmegaOffset();
  35:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\imu.hpp ****     void writeReg(uint8_t adress, uint8_t data);
  36:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\imu.hpp ****     uint8_t readReg(uint8_t adress);
  37:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\imu.hpp **** 
  38:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\imu.hpp **** private:
  39:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\imu.hpp **** 	Icm20608G(void){};
  40:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\imu.hpp **** 	~Icm20608G(void){};
  10                             		.loc 1 40 0
  11                             	.LVL0:
  12 0000 02                      		rts
  13                             	.LFE736:
  15                             		.weak	__ZN9Icm20608GD1Ev
  16                             		.set	__ZN9Icm20608GD1Ev,__ZN9Icm20608GD2Ev
  17                             		.section	.text._ZN7MPU9250D2Ev,"axG",@progbits,_ZN7MPU9250D5Ev,comdat
  18                             		.weak	__ZN7MPU9250D2Ev
  20                             	__ZN7MPU9250D2Ev:
  21                             	.LFB746:
  41:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\imu.hpp **** 	Icm20608G(Icm20608G&){};
  42:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\imu.hpp **** 
  43:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\imu.hpp **** };
  44:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\imu.hpp **** 
  45:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\imu.hpp **** 
  46:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\imu.hpp **** 
  47:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\imu.hpp **** 
  48:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\imu.hpp **** class MPU9250{
  49:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\imu.hpp **** public:
  50:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\imu.hpp ****     volatile int16_t omega_raw[3];
  51:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\imu.hpp ****     volatile int16_t acc_raw[3];
  52:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\imu.hpp ****     volatile int16_t mag_raw[3];
  53:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\imu.hpp ****     volatile int16_t temp_raw;
  54:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\imu.hpp **** 
  55:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\imu.hpp ****     volatile int16_t omega_ref[3];
  56:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\imu.hpp ****     volatile int16_t acc_ref[3];
  57:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\imu.hpp ****     volatile int16_t mag_ref[3];
  58:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\imu.hpp **** 
  59:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\imu.hpp ****     volatile int16_t omega_c[3];
  60:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\imu.hpp ****     volatile int16_t acc_c[3];
  61:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\imu.hpp ****     volatile int16_t mag_c[3];
  62:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\imu.hpp **** 
  63:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\imu.hpp ****     volatile float omega_f[3];
  64:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\imu.hpp ****     volatile float acc_f[3];
  65:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\imu.hpp ****     volatile float mag_f[3];
  66:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\imu.hpp ****     volatile float temp_f;
  67:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\imu.hpp ****     volatile uint8_t Asa[3];
  68:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\imu.hpp **** 
  69:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\imu.hpp **** 	static MPU9250& getInstance(){
  70:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\imu.hpp **** 		static MPU9250 instance;
  71:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\imu.hpp **** 		return instance;
  72:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\imu.hpp **** 	};
  73:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\imu.hpp **** 
  74:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\imu.hpp **** 	uint8_t whoAmI();
  75:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\imu.hpp **** 	void init();
  76:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\imu.hpp **** 	void update();
  77:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\imu.hpp **** 	void writeReg(uint8_t adress, uint8_t data);
  78:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\imu.hpp **** 	uint8_t readReg(uint8_t adress);
  79:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\imu.hpp **** 	void calibOmegaOffset(uint32_t ref_num);
  80:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\imu.hpp **** 	void calibAccOffset(uint32_t ref_num);
  81:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\imu.hpp **** private:
  82:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\imu.hpp **** 	MPU9250(){};
  83:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\imu.hpp **** 	~MPU9250(){};
  22                             		.loc 1 83 0
  23                             	.LVL1:
  24 0000 02                      		rts
  25                             	.LFE746:
  27                             		.weak	__ZN7MPU9250D1Ev
  28                             		.set	__ZN7MPU9250D1Ev,__ZN7MPU9250D2Ev
  29                             		.section	.text._ZN6TactSwD2Ev,"axG",@progbits,_ZN6TactSwD5Ev,comdat
  30                             		.weak	__ZN6TactSwD2Ev
  32                             	__ZN6TactSwD2Ev:
  33                             	.LFB758:
  34                             		.file 2 "C:\\Users\\ryota\\e2_studio\\workspace\\umouse\\src\\robot_object/tactsw.h"
   1:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\tactsw.h **** #ifndef TACTSW_H
   2:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\tactsw.h **** #define TACTSW_H
   3:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\tactsw.h **** 
   4:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\tactsw.h **** #include "iodefine.h"
   5:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\tactsw.h **** #include "stdint.h"
   6:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\tactsw.h **** 
   7:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\tactsw.h **** class TactSw{
   8:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\tactsw.h **** private:
   9:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\tactsw.h **** 	uint16_t on_time_msec;
  10:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\tactsw.h ****     TactSw(){on_time_msec = 0;};
  11:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\tactsw.h ****     TactSw(TactSw&){on_time_msec = 0;};
  12:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\tactsw.h ****     ~TactSw(){};
  35                             		.loc 2 12 0
  36                             	.LVL2:
  37 0000 02                      		rts
  38                             	.LFE758:
  40                             		.weak	__ZN6TactSwD1Ev
  41                             		.set	__ZN6TactSwD1Ev,__ZN6TactSwD2Ev
  42                             		.section	.text._ZN6UMouseD2Ev,"axG",@progbits,_ZN6UMouseD5Ev,comdat
  43                             		.weak	__ZN6UMouseD2Ev
  45                             	__ZN6UMouseD2Ev:
  46                             	.LFB806:
  47                             		.file 3 "C:\\Users\\ryota\\e2_studio\\workspace\\umouse\\src\\robot_object/mouse.h"
   1:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h **** #ifndef MOUSE_H
   2:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h **** #define MOUSE_H
   3:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h **** 
   4:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h **** 
   5:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h **** #include "stdint.h"
   6:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h **** #include "iodefine.h"
   7:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h **** #include "maze.h"
   8:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h **** #include "pwm.h"
   9:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h **** #include "machineParameters.h"
  10:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h **** #include "myUtil.h"
  11:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h **** #include "math.h"
  12:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h **** #include "imu.hpp"
  13:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h **** #include <math.h>
  14:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h **** 
  15:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h **** //#include <Core>
  16:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h **** //#include <Geometry>
  17:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h **** //using namespace Eigen;
  18:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h **** //#define EIGEN_DONT_VECTORIZE
  19:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h **** //#define EIGEN_DISABLE_UNALIGNED_ARRAY_ASSERT
  20:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h **** 
  21:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h **** 
  22:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h **** 
  23:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h **** enum direction_e {
  24:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****     E = 0, NE, N, NW, W, SW, S, SE
  25:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h **** };
  26:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h **** 
  27:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h **** template <typename T>
  28:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h **** class Coor2D {
  29:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****     T x;
  30:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****     T y;
  31:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h **** };
  32:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h **** 
  33:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h **** class Vector2f {
  34:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h **** public:
  35:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****     float x;
  36:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****     float y;
  37:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h **** 
  38:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****     Vector2f(float x_0, float y_0){
  39:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****         x = x_0;
  40:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****         y = y_0;
  41:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****     }
  42:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h **** 
  43:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****     float operator [](int n){
  44:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****         if(n == 0) return x;
  45:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****         if(n == 1) return y;
  46:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****         return 0.0;
  47:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****     }
  48:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h **** 
  49:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h **** };
  50:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h **** 
  51:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h **** 
  52:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h **** class UMouse {
  53:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h **** public:
  54:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****     // -32768 から 32767
  55:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h **** 
  56:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h **** 
  57:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****     volatile float t_a;       //event側で更新     x 1000
  58:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****     volatile float t_v;       //event側で更新     x 3000
  59:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****     volatile float t_x;       //event側で更新     x 3000
  60:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****     volatile float accum_x;   //event側で更新     x 3000
  61:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h **** 
  62:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****     volatile float t_ang_a;   //event側で更新    x 100
  63:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****     volatile float t_ang_v;   //event側で更新    x 100
  64:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****     volatile float t_ang;   //event側で更新    x 100
  65:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****     volatile float accum_ang; //event側で更新    x 100
  66:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****     volatile float gyro_ang_v;// -2000deg/secから+2000deg/sec
  67:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h **** 
  68:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****     volatile float wall_P;    //event側で更新  -10.0から10.0   x 3000
  69:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****     volatile float wall_I;    //event側で更新  -10.0から10.0   x 3000
  70:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****     volatile float wall_D;    //event側で更新  -10.0から10.0   x 3000
  71:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h **** 
  72:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****     volatile float v_P;       //event側で更新  -10.0から10.0   x 3000
  73:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****     volatile float v_I;       //event側で更新  -10.0から10.0   x 3000
  74:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****     volatile float v_D;       //event側で更新  -10.0から10.0   x 3000
  75:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h **** 
  76:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****     volatile float ang_v_P;   //event側で更新  -10.0から10.0   x 3000
  77:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****     volatile float ang_v_I;   //event側で更新  -10.0から10.0   x 3000
  78:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****     volatile float ang_v_D;   //event側で更新  -10.0から10.0   x 3000
  79:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h **** 
  80:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****     volatile float ang_P;     //event側で更新  -10.0から10.0   x 3000
  81:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****     volatile float ang_I;     //event側で更新  -10.0から10.0   x 3000
  82:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****     volatile float ang_D;     //event側で更新  -10.0から10.0   x 3000
  83:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h **** 
  84:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****     volatile float v_FF;      //event側で更新  -1.0から1.0     x 3000
  85:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****     volatile float ang_FF;    //event側で更新  -1.0から1.0     x 3000
  86:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h **** 
  87:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****     volatile float v;
  88:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****     volatile float a_v; //前方向加速度 x1000
  89:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****     volatile float a_h; //横方向加速度 x1000
  90:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h **** 
  91:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****     volatile float duty_L;
  92:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****     volatile float duty_R;
  93:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h **** 
  94:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****     volatile direction_e direction;
  95:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****     volatile Coor2D<float> ab_position;
  96:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****     volatile Coor2D<uint16_t> coor;
  97:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****     volatile Coor2D<uint16_t> start;
  98:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****     volatile Coor2D<uint16_t> goal;
  99:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h **** 
 100:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****     volatile float ang;
 101:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****     volatile float ang_v;
 102:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****     volatile float ang_a;
 103:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h **** 
 104:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****     volatile Coor2D <float> v_g;
 105:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****     volatile Coor2D <float> x_g;
 106:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****     volatile Coor2D <float> a_g;
 107:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h **** 
 108:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****     volatile Maze maze;
 109:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****     volatile Maze mazeBuf[5];
 110:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h **** 
 111:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****     volatile float v_enc_R;
 112:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****     volatile float v_enc_L;
 113:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h **** 
 114:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****     volatile float v_enc;
 115:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****     volatile float v_acc;
 116:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h **** 
 117:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****     volatile float ang_gyro;
 118:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****     volatile float ang_mag;
 119:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h **** 
 120:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****     volatile float Vcc;
 121:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h **** 
 122:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****     static UMouse& getInstance() {
 123:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****         static UMouse instance;
 124:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****         return instance;
 125:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****     };
 126:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h **** 
 127:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****     void update(){
 128:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****         static uint16_t R_ENC_pre;
 129:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****         static uint16_t L_ENC_pre;
 130:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****         static uint16_t R_ENC_now;
 131:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****         static uint16_t L_ENC_now;
 132:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h **** 
 133:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****         //**************エンコーダ値の読み取り************************//
 134:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h **** 
 135:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****         R_ENC_pre = R_ENC_now;
 136:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****         L_ENC_pre = L_ENC_now;
 137:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****         R_ENC_now = MTU1.TCNT;
 138:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****         L_ENC_now = MTU2.TCNT;
 139:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h **** 
 140:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****         int32_t count_diff_R = (int32_t)(R_ENC_now - R_ENC_pre);
 141:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****         int32_t count_diff_L = (int32_t)(L_ENC_now - L_ENC_pre);
 142:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****         //オーバーフロー対策
 143:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****         if( count_diff_R > 32768 )  count_diff_R -= 65536;
 144:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****         if( count_diff_R < -32768 ) count_diff_R += 65536;
 145:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****         if( count_diff_L > 32768 )  count_diff_L -= 65536;
 146:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****         if( count_diff_L < -32768 ) count_diff_L += 65536;
 147:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h **** 
 148:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****         //エンコーダより計測された速度
 149:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****         v_enc_R = (PI* DIA_TIRE / GEAR_RATIO * (float)(count_diff_R)/512.0)/ DELTA_T;
 150:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****         v_enc_L = (PI* DIA_TIRE / GEAR_RATIO * (float)(count_diff_L)/512.0)/ DELTA_T;
 151:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****         //v_enc = (v_enc_R + v_enc_L) * 0.5;
 152:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****         MPU9250 &imu = MPU9250::getInstance();
 153:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****         float omega = DEG2RAD(imu.omega_f[2]);
 154:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****         v_enc = sqrtf( constrainL(
 155:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****                                    0.5 * (  v_enc_R * v_enc_R
 156:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****                                    + v_enc_L * v_enc_L
 157:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****                                    - 0.5 * omega * omega * TREAD * TREAD)
 158:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****                                    ,0.0)
 159:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****         );
 160:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****         //角速度をセット
 161:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****         gyro_ang_v = MPU9250::getInstance().omega_f[2];
 162:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****         //電圧の算出
 163:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****         Vcc = 15.1 / 5.1 * (S12AD.ADDR0) * 3.3 / 4096;
 164:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****         //加速度センサから遠心力を除去
 165:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****         float r = 0.0564717;  // 9mm 55.75mm
 166:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****         float theta = DEG2RAD(9.17042483);
 167:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****         float c_force = r * DEG2RAD(gyro_ang_v) * DEG2RAD(gyro_ang_v);
 168:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****         a_v = MPU9250::getInstance().acc_f[1] + c_force * cosf(theta);
 169:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****         a_h = MPU9250::getInstance().acc_f[0] + c_force * sinf(theta);
 170:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h **** 
 171:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****     }
 172:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h **** 
 173:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****     void setDuty(float duty_l, float duty_r){
 174:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****         setDuty_L(duty_l);
 175:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****         setDuty_R(duty_r);
 176:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****     }
 177:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h **** 
 178:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****     void setDuty_R(float duty){
 179:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****         duty_R = duty;
 180:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h **** 
 181:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****         if(duty == 0.0){
 182:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****             PORT1.PODR.BIT.B3 = 0;
 183:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****             PORT1.PODR.BIT.B2 = 0;
 184:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****         }
 185:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****         else if(duty > 0){
 186:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****             PORT1.PODR.BIT.B3 = 0;
 187:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****             PORT1.PODR.BIT.B2 = 1;
 188:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****         }
 189:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****         else{
 190:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****             PORT1.PODR.BIT.B3 = 1;
 191:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****             PORT1.PODR.BIT.B2 = 0;
 192:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****         }
 193:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****         setDutyMTU3(ABS(duty));
 194:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****     };
 195:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****     void setDuty_L(float duty){
 196:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****         duty_L = duty;
 197:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h **** 
 198:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****         if(duty == 0.0){
 199:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****             PORT2.PODR.BIT.B0 = 0;
 200:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****             PORT1.PODR.BIT.B7 = 0;
 201:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****         }
 202:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****         else if(duty > 0){
 203:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****             PORT2.PODR.BIT.B0 = 1;
 204:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****             PORT1.PODR.BIT.B7 = 0;
 205:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****         }
 206:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****         else{
 207:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****             PORT2.PODR.BIT.B0 = 0;
 208:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****             PORT1.PODR.BIT.B7 = 1;
 209:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****         }
 210:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****         setDutyMTU4(ABS(duty));
 211:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****     };
 212:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h **** 
 213:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h **** 
 214:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h **** private:
 215:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****     UMouse() {};
 216:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****     ~UMouse() {};
  48                             		.loc 3 216 0
  49                             	.LVL3:
  50 0000 02                      		rts
  51                             	.LFE806:
  53                             		.weak	__ZN6UMouseD1Ev
  54                             		.set	__ZN6UMouseD1Ev,__ZN6UMouseD2Ev
  55                             		.section	.text._ZN7GamepadD2Ev,"axG",@progbits,_ZN7GamepadD5Ev,comdat
  56                             		.weak	__ZN7GamepadD2Ev
  58                             	__ZN7GamepadD2Ev:
  59                             	.LFB1092:
  60                             		.file 4 "C:\\Users\\ryota\\e2_studio\\workspace\\umouse\\src\\robot_object/gamepad.h"
   1:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h **** 
   2:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h **** #ifndef GAMEPAD_H
   3:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h **** #define GAMEPAD_H
   4:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h **** 
   5:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h **** #include <stdint.h>
   6:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h **** #include "timer.h"
   7:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h **** 
   8:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h **** class Gamepad{
   9:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h **** public:
  10:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****     volatile int8_t cross_x;
  11:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****     volatile int8_t cross_y;
  12:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****     volatile int8_t L3D_x;
  13:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****     volatile int8_t L3D_y;
  14:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****     volatile int8_t R3D_x;
  15:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****     volatile int8_t R3D_y;
  16:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****     volatile uint8_t RT;
  17:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****     volatile uint8_t LT;
  18:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****     volatile uint32_t A;
  19:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****     volatile uint32_t B;
  20:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****     volatile uint32_t Y;
  21:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****     volatile uint32_t X;
  22:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****     volatile uint32_t RB;
  23:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****     volatile uint32_t LB;
  24:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****     volatile uint32_t BACK;
  25:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****     volatile uint32_t START;
  26:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****     volatile uint8_t receiveCommand[16];
  27:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h **** 
  28:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****     static Gamepad& getInstance(){
  29:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****         static Gamepad instance;
  30:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****         return instance;
  31:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****     }
  32:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h **** 
  33:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****     bool isConnecting(){
  34:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****         if(getElapsedMsec() - preRecieveTime < 200){
  35:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****             return true;
  36:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****         }
  37:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****         else{
  38:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****             return false;
  39:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****         }
  40:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h **** 
  41:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****     };
  42:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h **** 
  43:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****     void updateCommand(uint8_t *command){
  44:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****         if(command[3] == 254 && command[4] == 253){
  45:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****             preRecieveTime = getElapsedMsec();
  46:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****             for(uint8_t i=0;i<16; i++){
  47:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****                 receiveCommand[i] = command[i];
  48:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****             }
  49:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****         }
  50:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****     };
  51:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h **** 
  52:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****     //1msec毎に呼ぶこと
  53:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****     void update(){
  54:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****        volatile uint8_t *command = receiveCommand;
  55:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****        if((command[6] & 0x01) == 1) A++;
  56:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****        else A = 0;
  57:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****        if(((command[6] & 0x02) >> 1) == 1) B++;
  58:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****        else B = 0;
  59:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****        if(((command[6] & 0x04) >> 2) == 1) X++;
  60:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****        else X= 0;
  61:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****        if(((command[6] & 0x08) >> 3) == 1) Y++;
  62:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****        else Y = 0;
  63:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****        if(((command[6] & 0x10) >> 4) == 1) RB++;
  64:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****        else RB = 0;
  65:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****        if(((command[6] & 0x20) >> 5) == 1) LB++;
  66:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****        else LB = 0;
  67:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****        if(((command[6] & 0x40) >> 6) == 1) BACK++;
  68:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****        else BACK = 0;
  69:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****        if(((command[6] & 0x80) >> 7) == 1) START++;
  70:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****        else START = 0;
  71:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****        RT = command[7];
  72:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****        LT = command[8];
  73:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****        cross_x = command[9]  - 128;
  74:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****        cross_y = command[10] - 128;
  75:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****        R3D_x = command[11] - 128;
  76:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****        R3D_y = command[12] - 128;
  77:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****        L3D_x = command[13] - 128;
  78:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****        L3D_y = command[14] - 128;
  79:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h **** 
  80:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****        if(isConnecting() == false){
  81:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****            A = 0;
  82:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****            B = 0;
  83:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****            X = 0;
  84:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****            Y = 0;
  85:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****            RB = 0;
  86:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****            LB = 0;
  87:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****            BACK = 0;
  88:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****            START = 0;
  89:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****            RT = 0;
  90:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****            LT = 0;
  91:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****            cross_x = 0;
  92:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****            cross_y = 0;
  93:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****            R3D_x = 0;
  94:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****            R3D_y = 0;
  95:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****            L3D_x = 0;
  96:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****            L3D_y = 0;
  97:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****        }
  98:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h **** 
  99:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****     };
 100:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h **** private:
 101:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****     bool conStatus;
 102:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****     uint64_t preRecieveTime;
 103:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****     Gamepad(){
 104:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****         cross_x = 0;
 105:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****         cross_y = 0;
 106:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****         L3D_x = 0;
 107:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****         R3D_x = 0;
 108:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****         R3D_y = 0;
 109:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****         RT = 0;
 110:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****         LT = 0;
 111:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****         A  = 0;
 112:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****         B  = 0;
 113:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****         Y  = 0;
 114:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****         X  = 0;
 115:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****         RB = 0;
 116:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****         LB = 0;
 117:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****         BACK = 0;
 118:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****         START = 0;
 119:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****         conStatus = false;
 120:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****         preRecieveTime = 0;
 121:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****     };
 122:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****     ~Gamepad(){};
  61                             		.loc 4 122 0
  62                             	.LVL4:
  63 0000 02                      		rts
  64                             	.LFE1092:
  66                             		.weak	__ZN7GamepadD1Ev
  67                             		.set	__ZN7GamepadD1Ev,__ZN7GamepadD2Ev
  68                             		.global	___gxx_personality_sj0
  69                             		.global	__Unwind_SjLj_Register
  70                             		.global	__Unwind_SjLj_Unregister
  71                             		.section	.text._ZN5FcLedD2Ev,"axG",@progbits,_ZN5FcLedD5Ev,comdat
  72                             		.weak	__ZN5FcLedD2Ev
  74                             	__ZN5FcLedD2Ev:
  75                             	.LFB783:
  76                             		.file 5 "C:\\Users\\ryota\\e2_studio\\workspace\\umouse\\src\\robot_object/fcled.h"
   1:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\fcled.h **** #ifndef FCLED_H
   2:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\fcled.h **** #define FCLED_H
   3:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\fcled.h **** 
   4:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\fcled.h **** #include <stdint.h>
   5:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\fcled.h **** #include "abcled.h"
   6:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\fcled.h **** 
   7:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\fcled.h **** ///////////////////////////////////////////////////////////////////
   8:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\fcled.h **** class LED_R : public AbstructLED{
   9:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\fcled.h **** public:
  10:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\fcled.h **** 	void setState(uint8_t state);
  11:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\fcled.h **** };
  12:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\fcled.h **** ///////////////////////////////////////////////////////////////////
  13:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\fcled.h **** class LED_G : public AbstructLED{
  14:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\fcled.h **** public:
  15:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\fcled.h **** 	void setState(uint8_t state);
  16:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\fcled.h **** };
  17:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\fcled.h **** ///////////////////////////////////////////////////////////////////
  18:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\fcled.h **** class LED_B : public AbstructLED{
  19:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\fcled.h **** public:
  20:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\fcled.h **** 	void setState(uint8_t state);
  21:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\fcled.h **** };
  22:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\fcled.h **** ///////////////////////////////////////////////////////////////////
  23:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\fcled.h **** class FcLed{
  24:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\fcled.h **** public:
  25:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\fcled.h **** 	static FcLed& getInstance(){
  26:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\fcled.h **** 		static FcLed instance;
  27:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\fcled.h **** 		return instance;
  28:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\fcled.h **** 	}
  29:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\fcled.h **** 
  30:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\fcled.h **** 	LED_R R;
  31:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\fcled.h **** 	LED_G G;
  32:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\fcled.h **** 	LED_B B;
  33:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\fcled.h **** 	void update(){
  34:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\fcled.h **** 		R.update();
  35:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\fcled.h **** 		G.update();
  36:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\fcled.h **** 		B.update();
  37:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\fcled.h **** 	}
  38:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\fcled.h **** 	void turn(uint8_t r, uint8_t g, uint8_t b){
  39:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\fcled.h **** 		R.turn(r);
  40:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\fcled.h **** 		G.turn(g);
  41:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\fcled.h **** 		B.turn(b);
  42:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\fcled.h **** 	}
  43:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\fcled.h **** private:
  44:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\fcled.h **** 	FcLed(){turn(0,0,0);}
  45:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\fcled.h **** 	~FcLed(){turn(0,0,0);}
  77                             		.loc 5 45 0
  78                             	.LVL5:
  79                             		.loc 5 45 0
  80 0000 7E A7                   		push.l	r7
  81                             	.LCFI0:
  82 0002 71 00 CC                		add	#-52, r0
  83                             	.LCFI1:
  84                             		.loc 5 45 0
  85 0005 EF 17                   		mov.L	r1, r7
  86 0007 EF 01                   		mov.L	r0, r1
  87                             	.LVL6:
  88 0009 F9 02 06 00 00 00 00    		mov.L	#___gxx_personality_sj0, 24[r0]
  89 0010 F9 02 07 00 00 00 00    		mov.L	#.LLSDA783, 28[r0]
  90 0017 05 00 00 00             		bsr	__Unwind_SjLj_Register
  91                             	.LVL7:
  92                             	.LBB712:
  93                             	.LBB713:
  39:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\fcled.h **** 		G.turn(g);
  94                             		.loc 5 39 0
  95 001b EF 71                   		mov.L	r7, r1
  96 001d 66 02                   		mov	#0, r2
  97 001f 3E 01 00                		mov.L	#0, 4[r0]
  98 0022 05 00 00 00             		bsr	__ZN11AbstructLED4turnEh
  99                             	.LVL8:
  40:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\fcled.h **** 		B.turn(b);
 100                             		.loc 5 40 0
 101 0026 71 71 0C                		add	#12, r7, r1
 102 0029 66 02                   		mov	#0, r2
 103 002b 05 00 00 00             		bsr	__ZN11AbstructLED4turnEh
 104                             	.LVL9:
  41:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\fcled.h **** 	}
 105                             		.loc 5 41 0
 106 002f 71 71 18                		add	#24, r7, r1
 107 0032 66 02                   		mov	#0, r2
 108 0034 05 00 00 00             		bsr	__ZN11AbstructLED4turnEh
 109                             	.LVL10:
 110 0038 EF 01                   		mov.L	r0, r1
 111 003a 05 00 00 00             		bsr	__Unwind_SjLj_Unregister
 112                             	.LVL11:
 113                             	.LBE713:
 114                             	.LBE712:
 115                             		.loc 5 45 0
 116 003e 3F 77 0E                		rtsd	#56, r7-r7
 117                             	.LFE783:
 118                             		.section	.gcc_except_table._ZN5FcLedD2Ev,"awG",@progbits,_ZN5FcLedD5Ev,comdat
 119                             	.LLSDA783:
 120 0000 FF                      		.byte	0xff
 121 0001 FF                      		.byte	0xff
 122 0002 01                      		.byte	0x1
 123 0003 00                      		.uleb128 .LLSDACSE783-.LLSDACSB783
 124                             	.LLSDACSB783:
 125                             	.LLSDACSE783:
 126                             		.section	.text._ZN5FcLedD2Ev,"axG",@progbits,_ZN5FcLedD5Ev,comdat
 128                             		.weak	__ZN5FcLedD1Ev
 129                             		.set	__ZN5FcLedD1Ev,__ZN5FcLedD2Ev
 130                             		.section	.text._ZN9EventListD2Ev,"axG",@progbits,_ZN9EventListD5Ev,comdat
 131                             		.weak	__ZN9EventListD2Ev
 133                             	__ZN9EventListD2Ev:
 134                             	.LFB1461:
 135                             		.file 6 "C:\\Users\\ryota\\e2_studio\\workspace\\umouse\\src\\umouse_object/moveEvent.h"
   1:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** #ifndef MOVEEVENT_H
   2:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** #define MOVEEVENT_H
   3:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
   4:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** #include "machineParameters.h"
   5:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** #include "myUtil.h"
   6:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** #include "imu.hpp"
   7:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** #include "mouse.h"
   8:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** //#include <Core>
   9:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** //#include <Geometry>
  10:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** #include <queue>
  11:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** #include "uart.hpp"
  12:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** #include "timer.h"
  13:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
  14:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
  15:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** using std::queue;
  16:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** //using namespace Eigen;
  17:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** //#define EIGEN_DONT_VECTORIZE
  18:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** //#define EIGEN_DISABLE_UNALIGNED_ARRAY_ASSERT
  19:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
  20:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** class BaseMoveEvent{
  21:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** public:
  22:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     virtual bool isEnd()=0;
  23:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     virtual Vector2f calcDuty()=0;
  24:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
  25:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     Vector2f dutyFF_ang(float target_ang_a, float target_ang_v){
  26:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         UMouse &mouse = UMouse::getInstance();
  27:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         Vector2f duty(0.0f, 0.0f);
  28:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
  29:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         //必要な力(回転成分)
  30:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         float F_rotation = INERTIA * DEG2RAD(target_ang_a) / TREAD;
  31:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         //モータとモータドライバの抵抗値
  32:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         float R = COIL_RES + FET_RES;
  33:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         //必要なトルク
  34:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         float torque_L = (- F_rotation)*(0.5* DIA_TIRE/GEAR_RATIO);
  35:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         float torque_R = (+ F_rotation)*(0.5* DIA_TIRE/GEAR_RATIO);
  36:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         //左右輪の速度
  37:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         float v_L = - TREAD * PI * target_ang_v/360.0;
  38:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         float v_R = + TREAD * PI * target_ang_v/360.0;
  39:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         //左右モーターの回転数
  40:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         float rpm_L = v_L * 60.0 /(PI * DIA_TIRE);
  41:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         float rpm_R = v_R * 60.0 /(PI * DIA_TIRE);
  42:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
  43:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         duty.x = (R*torque_L / K_T + K_E * rpm_L) / mouse.Vcc;
  44:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         duty.y = (R*torque_R / K_T + K_E * rpm_R) / mouse.Vcc;
  45:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
  46:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         return duty;
  47:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     };
  48:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
  49:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     Vector2f dutyFF_v(float target_a, float target_v){
  50:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         UMouse &mouse = UMouse::getInstance();
  51:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         Vector2f duty(0.0f, 0.0f);
  52:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
  53:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         //必要な力(直進成分)
  54:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         float F_forward = MASS*target_a/2.0;
  55:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         //モータとモータドライバの抵抗値
  56:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         float R = COIL_RES + FET_RES;
  57:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         //必要なトルク
  58:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         float torque_L = F_forward * (0.5* DIA_TIRE/GEAR_RATIO);
  59:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         float torque_R = F_forward * (0.5* DIA_TIRE/GEAR_RATIO);
  60:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         //左右輪の速度
  61:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         float v_L = target_v;
  62:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         float v_R = target_v;
  63:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         //左右モーターの回転数
  64:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         float rpm_L = v_L * 60.0 /(PI * DIA_TIRE);
  65:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         float rpm_R = v_R * 60.0 /(PI * DIA_TIRE);
  66:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
  67:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         duty.x = (R*torque_L / K_T + K_E * rpm_L) / mouse.Vcc;
  68:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         duty.y = (R*torque_R / K_T + K_E * rpm_R) / mouse.Vcc;
  69:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
  70:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         return duty;
  71:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     };
  72:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
  73:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** };
  74:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
  75:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
  76:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
  77:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
  78:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
  79:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
  80:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** #ifdef MEMO
  81:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** class NormalMoveEvent : public BaseMoveEvent{
  82:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
  83:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** public:
  84:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     float target_ang;           //追従目標角度
  85:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     float target_ang_v;         //追従目標角速度
  86:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     float target_ang_a;         //追従目標角加速度
  87:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
  88:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     float target_x;             //追従目標位置
  89:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     float target_v;             //追従目標速度
  90:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     float target_a;             //追従目標加速度
  91:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
  92:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     float accum_x;
  93:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     float accum_ang; //角度積算値
  94:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
  95:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     float error_v;
  96:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     float error_int_v;
  97:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
  98:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     float error_ang_v;
  99:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     float error_int_ang_v;
 100:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 101:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     float error_ang;
 102:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     float error_int_ang;
 103:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 104:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     float Kp_v;
 105:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     float Ki_v;
 106:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     float Kd_v;
 107:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 108:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     float Kp_ang_v;
 109:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     float Ki_ang_v;
 110:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     float Kd_ang_v;
 111:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 112:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     float Kp_ang;
 113:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     float Ki_ang;
 114:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     float Kd_ang;
 115:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 116:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     void paramInit(){
 117:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         target_ang   = 0.0;           //追従目標角度
 118:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         target_ang_v =0.0;         //追従目標角速度
 119:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         target_ang_a =0.0 ;         //追従目標角加速度
 120:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         accum_ang = 0.0 ;
 121:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 122:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         error_int_ang = 0.0;
 123:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         error_int_v = 0.0;
 124:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 125:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         Kp_v = 0.0;
 126:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         Ki_v = 0.0;
 127:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         // Kd_v;
 128:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 129:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         Kp_ang_v = 0.0;
 130:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         Ki_ang_v = 0.0;
 131:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         // Kd_and_v;
 132:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 133:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         Kp_ang = 0.0;
 134:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         Ki_ang = 0.0;
 135:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         Kd_ang = 0.0;
 136:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 137:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     };
 138:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 139:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     virtual bool isEnd()=0;
 140:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     virtual void trajectoryPlanning()=0;
 141:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 142:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     void updateDuty(){
 143:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         UMouse &mouse = UMouse::getInstance();
 144:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         trajectoryPlanning();
 145:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         integrate();
 146:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         updatePidError();
 147:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         Vector2f duty(0.0f, 0.0f);
 148:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 149:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         duty = dutyFF() + dutyFB() + dutyWall();
 150:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         float duty_L = duty(0);
 151:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         float duty_R = duty(1);
 152:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         //mouse.setDuty_L(duty_L);
 153:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         //mouse.setDuty_R(duty_R);
 154:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 155:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     };
 156:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 157:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     void integrate(){
 158:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         UMouse& mouse = UMouse::getInstance();
 159:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         //追従目標の積分処理
 160:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         target_ang   += target_ang_v * DELTA_T;
 161:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         target_ang_v += target_ang_a * DELTA_T;
 162:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 163:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         target_x += target_v * DELTA_T;
 164:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         target_v += target_a * DELTA_T;
 165:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         accum_ang += mouse.v_enc * DELTA_T;
 166:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     };
 167:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 168:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     void updatePidError(){
 169:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         //*******フィードバック制御のゲイン***********//
 170:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         Kp_v = 0.9;//.5;
 171:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         //float Kd_v = 0.3;//;
 172:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         Ki_v = 0.3;//0.1;
 173:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 174:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         Kp_ang_v = 0.0093;
 175:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         Ki_ang_v = 0.00042;
 176:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 177:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         Kp_ang = 0.0005;//0.005;
 178:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         Ki_ang = 0.00005;//0.003;
 179:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         Kd_ang = 0.0;//0.001;
 180:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         //*********************************//
 181:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         UMouse& mouse = UMouse::getInstance();
 182:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         //速度と角度と角速度の偏差
 183:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         error_v     = target_v     - mouse.v_enc;
 184:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         error_ang   = target_ang   - accum_ang;
 185:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         error_ang_v = target_ang_v - mouse.ang_v;
 186:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         //速度と角度と角速度のI項
 187:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         error_int_v += error_v;
 188:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         error_int_ang += error_ang;
 189:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         error_int_ang_v += error_ang_v;
 190:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 191:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         //I項のリミッター
 192:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         if(ABS(error_int_v) > 50.0){
 193:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****             if(error_int_v > 0) error_int_v = 50.0 ;
 194:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****             if(error_int_v < 0) error_int_v = -50.0;
 195:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         }
 196:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 197:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         if(ABS(error_int_ang_v) > 1200.0 ){
 198:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****                 if(error_int_ang_v > 0) error_int_ang_v = 1200.0;
 199:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****                 if(error_int_ang_v < 0) error_int_ang_v = -1200.0;
 200:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         }
 201:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 202:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         /*
 203:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         if(move_state != ROTATION){
 204:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****             error_int_ang_v=0.0;
 205:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         }
 206:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         */
 207:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 208:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         if(ABS(error_int_ang) > 300.0 ){
 209:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****             if(error_int_ang > 0) error_int_ang = 300.0;
 210:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****             if(error_int_ang < 0) error_int_ang = -300.0;
 211:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         }
 212:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 213:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 214:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     };
 215:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 216:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     Vector2f dutyFF(){
 217:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         UMouse &mouse = UMouse::getInstance();
 218:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         Vector2f duty(0.0f, 0.0f);
 219:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 220:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         //必要な力(直進成分)
 221:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         float F_forward = MASS*target_a/2.0;
 222:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         //必要な力(回転成分)
 223:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         float F_rotation = INERTIA * DEG2RAD(target_ang_a) / TREAD;
 224:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         //モータとモータドライバの抵抗値
 225:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         float R = COIL_RES + FET_RES;
 226:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         //必要なトルク
 227:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         float torque_L = (F_forward - F_rotation)*(0.5* DIA_TIRE/GEAR_RATIO);
 228:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         float torque_R = (F_forward + F_rotation)*(0.5* DIA_TIRE/GEAR_RATIO);
 229:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         //左右輪の速度
 230:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         float v_L = target_v - TREAD * PI * target_ang_v/360.0;
 231:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         float v_R = target_v + TREAD * PI * target_ang_v/360.0;
 232:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         //左右モーターの回転数
 233:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         float rpm_L = v_L * 60.0 /(PI * DIA_TIRE);
 234:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         float rpm_R = v_R * 60.0 /(PI * DIA_TIRE);
 235:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 236:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         duty(0) = (R*torque_L / K_T + K_E * rpm_L) / mouse.Vcc;
 237:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         duty(1) = (R*torque_R / K_T + K_E * rpm_R) / mouse.Vcc;
 238:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 239:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 240:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         return duty;
 241:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     };
 242:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 243:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     Vector2f dutyFB(){
 244:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         Vector2f duty(0.0f, 0.0f);
 245:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 246:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         float FB_v     = Kp_v     * error_v     + Ki_v     * error_int_v;
 247:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         float FB_ang_v = Kp_ang_v * error_ang_v + Ki_ang_v * error_int_ang_v;
 248:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         float FB_ang   = Kp_ang   * error_ang   + Ki_ang   * error_int_ang    + Kd_ang * error_ang_
 249:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 250:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         duty(0) = FB_v - FB_ang_v - FB_ang;
 251:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         duty(1) = FB_v + FB_ang_v + FB_ang;
 252:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 253:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         return duty;
 254:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     };
 255:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 256:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     Vector2f dutyWall(){
 257:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         Vector2f duty(0.0f, 0.0f);
 258:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 259:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         return duty;
 260:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     };
 261:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 262:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** };
 263:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** #endif
 264:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 265:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 266:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** class SimplePivotTurn : public BaseMoveEvent{
 267:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 268:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** public:
 269:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     volatile float target_ang;
 270:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     volatile float target_ang_v;
 271:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     volatile float target_ang_a;
 272:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 273:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     volatile float target_v;
 274:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 275:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     volatile float Kp_ang;
 276:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     volatile float Ki_ang;
 277:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     volatile float Kd_ang;
 278:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 279:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     volatile float Kp_ang_v;
 280:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     volatile float Ki_ang_v;
 281:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     volatile float Kd_ang_v;
 282:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 283:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     volatile float Kp_v;
 284:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     volatile float Ki_v;
 285:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     volatile float Kd_v;
 286:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 287:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     volatile float error_ang;
 288:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     volatile float error_int_ang;
 289:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     volatile float error_ang_pre;
 290:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     volatile float error_d_ang;
 291:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 292:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     volatile float error_ang_v;
 293:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     volatile float error_int_ang_v;
 294:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     volatile float error_ang_v_pre;
 295:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     volatile float error_d_ang_v;
 296:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 297:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     volatile float error_v;
 298:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     volatile float error_int_v;
 299:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     volatile float error_d_v;
 300:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     volatile float error_v_pre;
 301:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 302:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     volatile float ang_a;
 303:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     volatile float end_ang;
 304:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     volatile float accum_ang;
 305:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     volatile float accum_v;
 306:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 307:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     volatile uint8_t scene_num;
 308:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 309:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     SimplePivotTurn(float ang){
 310:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         target_ang = 0.0;
 311:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         target_ang_v = 0.0;
 312:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         target_ang_a = 0.0;
 313:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         end_ang = ang;
 314:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         accum_ang = 0.0;
 315:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 316:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         error_ang = 0.0;
 317:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         error_int_ang = 0.0;
 318:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         error_ang_pre = 0.0;
 319:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         error_d_ang = 0.0;
 320:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 321:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         Kp_ang = 0.0;
 322:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         Ki_ang = 0.0;
 323:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         Kd_ang = 0.0;//0.001;
 324:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 325:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         error_ang_v = 0.0;
 326:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         error_int_ang_v = 0.0;
 327:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         error_ang_v_pre = 0.0;
 328:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         error_d_ang_v = 0.0;
 329:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 330:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 331:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         Kp_ang_v = 0.0012;
 332:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         Ki_ang_v = 0.0004;
 333:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         Kd_ang_v = 0.0;//0.001;
 334:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 335:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 336:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         target_v = 0.0;
 337:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         accum_v = 0.0;
 338:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         error_v = 0.0;
 339:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         error_int_v = 0.0;
 340:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         error_v_pre = 0.0;
 341:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         error_d_v = 0.0;
 342:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         Kp_v = 0.00;
 343:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         Ki_v = 0.000;
 344:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         Kd_v = 0.000;
 345:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 346:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 347:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         ang_a  = SIGN(ang) * 360.0;
 348:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         scene_num = 0;
 349:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     };
 350:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 351:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     bool isEnd(){
 352:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         static uint32_t time_count = 0;
 353:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 354:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         if( scene_num == 0){
 355:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****             myprintf3("%d\n",scene_num);
 356:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****             target_ang_a = ang_a;
 357:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****             scene_num++;
 358:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         }
 359:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 360:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         if( ABS(target_ang) >= ABS(end_ang)*1.0/2.0 &&
 361:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****             scene_num == 1){
 362:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****             myprintf3("%d\n",scene_num);
 363:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****             error_int_ang = 0.0;
 364:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****             target_ang_a = 0.0;
 365:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****             scene_num++;
 366:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         }
 367:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 368:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         if( ABS(target_ang) >= ABS(end_ang)*1.0/2.0 &&
 369:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****             scene_num == 2 ){
 370:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****             myprintf3("%d\n",scene_num);
 371:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****             error_int_ang *= -1.0;
 372:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****             target_ang_a = - ang_a;
 373:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****             scene_num++;
 374:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         }
 375:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         if((ABS(target_ang) >= ABS(end_ang)     ||
 376:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****             SIGN(ang_a) != SIGN(target_ang_v) ) &&
 377:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****             scene_num == 3){
 378:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****             myprintf3("%d\n",scene_num);
 379:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****             target_ang_a = 0.0;
 380:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****             target_ang_v = 0.0;
 381:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****             target_ang = end_ang;
 382:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****             scene_num ++;
 383:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****             time_count = getElapsedMsec();
 384:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****             Kp_ang = 0.0021;
 385:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****             Ki_ang = 0.00032;
 386:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****             Kd_ang = 0.01;//0.001;
 387:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****             Kp_ang_v = 0.0;
 388:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****             Ki_ang_v = 0.0;
 389:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****             Kd_ang_v = 0.0;
 390:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****             Kp_v = 0.00;
 391:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****             Ki_v = 0.000;
 392:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****             Kd_v = 0.000;
 393:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 394:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****             error_int_ang = 0.0;
 395:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         }
 396:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 397:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         if(getElapsedMsec() - time_count > 1000 &&
 398:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****             scene_num == 4){
 399:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****             return true;
 400:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         }
 401:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 402:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         return false;
 403:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     };
 404:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 405:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     Vector2f calcDuty(){
 406:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         MPU9250 &imu = MPU9250::getInstance();
 407:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         Vector2f duty(0.0,0.0);
 408:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         UMouse &m = UMouse::getInstance();
 409:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 410:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         accum_v += m.a_v * DELTA_T;
 411:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 412:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 413:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         //ターゲットの積分
 414:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         target_ang_v += target_ang_a * DELTA_T;
 415:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         target_ang   += target_ang_v * DELTA_T;
 416:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         accum_ang    += imu.omega_f[2] * DELTA_T;
 417:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 418:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         //角度
 419:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         error_ang   = target_ang - accum_ang;
 420:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         error_d_ang = error_ang - error_ang_pre;
 421:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         error_ang_pre = error_ang;
 422:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         error_int_ang   += error_ang;
 423:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         error_int_ang = constrain(error_int_ang, -200.0, 200.0);
 424:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         //角速度
 425:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         error_ang_v   = target_ang_v - imu.omega_f[2];
 426:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         error_d_ang_v = error_ang_v - error_ang_v_pre;
 427:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         error_ang_v_pre = error_ang_v;
 428:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         //角度と角速度のI項
 429:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         error_int_ang_v   += error_ang_v;
 430:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         error_int_ang_v = constrain(error_int_ang_v, -200.0, 200.0);
 431:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 432:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 433:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         error_v   = target_v - SIGN(accum_v) * m.v_enc;
 434:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         error_d_v = error_v - error_v_pre;
 435:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         error_v_pre = error_v;
 436:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 437:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         error_int_v   += error_v;
 438:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         error_int_v = constrain(error_int_v, -200.0, 200.0);
 439:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 440:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 441:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         float FB_v = (  Kp_v * error_v
 442:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****                      + Ki_v * error_int_v
 443:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****                      + Kd_v * error_d_v)
 444:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****                      * 8.4/m.Vcc;
 445:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 446:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         float FB_ang   = (  Kp_ang * error_ang
 447:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****                          + Ki_ang * error_int_ang
 448:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****                          + Kd_ang * error_d_ang)
 449:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****                          * 8.4/m.Vcc;
 450:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 451:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         float FB_ang_v   = (  Kp_ang_v * error_ang_v
 452:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****                          + Ki_ang_v * error_int_ang_v
 453:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****                          + Kd_ang_v * error_d_ang_v)
 454:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****                          * 8.4/m.Vcc;
 455:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 456:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 457:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         //計算した各種変数をmouseにセット
 458:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 459:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         m.t_ang_a = target_ang_a ;
 460:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         m.t_ang_v = target_ang_v;
 461:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         m.t_ang   = target_ang;
 462:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         m.accum_ang = accum_ang;
 463:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 464:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         m.ang_P = Kp_ang * error_ang;
 465:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         m.ang_I = Ki_ang * error_int_ang;
 466:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         m.ang_D = Kd_ang * error_d_ang;
 467:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 468:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         m.ang_v_P = Kp_ang_v * error_ang_v;
 469:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         m.ang_v_I = Ki_ang_v * error_int_ang_v;
 470:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         m.ang_v_D = Kd_ang_v * error_d_ang_v;
 471:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 472:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 473:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         m.v_P = Kp_v * error_v;
 474:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         m.v_I = Ki_v * error_int_v;
 475:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         m.v_D = Kd_v * error_d_v;
 476:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         m.t_v = SIGN(accum_v) * m.v_enc;
 477:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 478:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         Vector2f FF_ang_duty = dutyFF_ang(target_ang_a, target_ang_v);
 479:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         m.ang_FF = FF_ang_duty.x;
 480:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 481:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         FB_ang = constrain(FB_ang, -0.20, 0.20);
 482:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 483:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         duty.x =  FB_ang + FB_ang_v + FB_v + FF_ang_duty.x;//左
 484:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         duty.y = -FB_ang - FB_ang_v + FB_v + FF_ang_duty.y;//右
 485:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 486:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         return duty;
 487:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     };
 488:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 489:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 490:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** };
 491:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 492:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** class SimpleTrape : public BaseMoveEvent{
 493:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 494:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** public:
 495:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     volatile float target_ang;
 496:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     volatile float target_ang_v;
 497:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     volatile float target_ang_a;
 498:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 499:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     volatile float target_x;
 500:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     volatile float target_v;
 501:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     volatile float target_a;
 502:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 503:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     volatile float Kp_ang;
 504:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     volatile float Ki_ang;
 505:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     volatile float Kd_ang;
 506:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 507:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     volatile float Kp_ang_v;
 508:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     volatile float Ki_ang_v;
 509:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     volatile float Kd_ang_v;
 510:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 511:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     volatile float Kp_v;
 512:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     volatile float Ki_v;
 513:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     volatile float Kd_v;
 514:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 515:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     volatile float error_ang;
 516:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     volatile float error_int_ang;
 517:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     volatile float error_ang_pre;
 518:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     volatile float error_d_ang;
 519:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 520:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     volatile float error_ang_v;
 521:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     volatile float error_int_ang_v;
 522:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     volatile float error_ang_v_pre;
 523:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     volatile float error_d_ang_v;
 524:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 525:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     volatile float error_v;
 526:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     volatile float error_int_v;
 527:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     volatile float error_d_v;
 528:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     volatile float error_v_pre;
 529:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 530:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     volatile float ang_a;
 531:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     volatile float end_x;
 532:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     volatile float accum_ang;
 533:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     volatile float accum_v;
 534:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 535:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     volatile uint8_t scene_num;
 536:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 537:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     SimpleTrape(float x){
 538:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         end_x = x;
 539:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         target_a = 1.0;
 540:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 541:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         target_ang = 0.0;
 542:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         target_ang_v = 0.0;
 543:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         target_ang_a = 0.0;
 544:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         accum_ang = 0.0;
 545:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 546:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         error_ang = 0.0;
 547:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         error_int_ang = 0.0;
 548:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         error_ang_pre = 0.0;
 549:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         error_d_ang = 0.0;
 550:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 551:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         Kp_ang = 0.0;
 552:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         Ki_ang = 0.0;
 553:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         Kd_ang = 0.0;//0.001;
 554:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 555:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         error_ang_v = 0.0;
 556:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         error_int_ang_v = 0.0;
 557:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         error_ang_v_pre = 0.0;
 558:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         error_d_ang_v = 0.0;
 559:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 560:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 561:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         Kp_ang_v = 0.0012;
 562:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         Ki_ang_v = 0.0004;
 563:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         Kd_ang_v = 0.0;//0.001;
 564:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 565:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 566:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         target_v = 0.0;
 567:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         accum_v = 0.0;
 568:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         error_v = 0.0;
 569:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         error_int_v = 0.0;
 570:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         error_v_pre = 0.0;
 571:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         error_d_v = 0.0;
 572:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         Kp_v = 0.01;
 573:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         Ki_v = 0.001;
 574:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         Kd_v = 0.001;
 575:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         myprintf3("Trape\n");
 576:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 577:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         scene_num = 0;
 578:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     };
 579:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 580:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     bool isEnd(){
 581:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         static uint32_t time_count = 0;
 582:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 583:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         if( scene_num == 0){
 584:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****             target_a = 1.0;
 585:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****             myprintf3("%d\n",scene_num);
 586:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****             scene_num++;
 587:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         }
 588:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 589:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         if( ABS(target_x) >= ABS(end_x)*1.0/2.0 &&
 590:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****             scene_num == 1){
 591:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****             myprintf3("%d\n",scene_num);
 592:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****             target_a = 0.0;
 593:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****             scene_num++;
 594:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         }
 595:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 596:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         if( ABS(target_x) >= ABS(end_x)*1.0/2.0 &&
 597:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****             scene_num == 2 ){
 598:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****             myprintf3("%d\n",scene_num);
 599:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****             target_a = - 1.0;
 600:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****             scene_num++;
 601:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         }
 602:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         if((ABS(target_x) >= ABS(end_x)     ||
 603:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****             target_v < 0.0) &&
 604:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****             scene_num == 3){
 605:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****             myprintf3("%d\n",scene_num);
 606:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****             target_a = 0.0;
 607:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****             target_v = 0.0;
 608:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****             target_x = end_x;
 609:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****             scene_num ++;
 610:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****             time_count = getElapsedMsec();
 611:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****             Kp_ang_v = 0.0;
 612:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****             Ki_ang_v = 0.0;
 613:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****             Kd_ang_v = 0.0;
 614:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****             Kp_v = 0.00;
 615:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****             Ki_v = 0.000;
 616:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****             Kd_v = 0.000;
 617:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 618:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****             error_int_ang = 0.0;
 619:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         }
 620:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 621:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         if(getElapsedMsec() - time_count > 1000 &&
 622:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****             scene_num == 4){
 623:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****             return true;
 624:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         }
 625:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 626:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         return false;
 627:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     };
 628:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 629:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     Vector2f calcDuty(){
 630:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         MPU9250 &imu = MPU9250::getInstance();
 631:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         Vector2f duty(0.0,0.0);
 632:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         UMouse &m = UMouse::getInstance();
 633:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 634:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         //ターゲットの積分
 635:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         target_ang_v += target_ang_a * DELTA_T;
 636:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         target_ang   += target_ang_v * DELTA_T;
 637:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         accum_ang    += imu.omega_f[2] * DELTA_T;
 638:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         //速度
 639:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         target_v += target_a * DELTA_T;
 640:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         target_x += target_v * DELTA_T;
 641:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 642:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         //角度
 643:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         error_ang   = target_ang - accum_ang;
 644:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         error_d_ang = error_ang - error_ang_pre;
 645:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         error_ang_pre = error_ang;
 646:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         error_int_ang   += error_ang;
 647:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         error_int_ang = constrain(error_int_ang, -200.0, 200.0);
 648:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         //角速度
 649:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         error_ang_v   = target_ang_v - imu.omega_f[2];
 650:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         error_d_ang_v = error_ang_v - error_ang_v_pre;
 651:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         error_ang_v_pre = error_ang_v;
 652:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         //角度と角速度のI項
 653:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         error_int_ang_v   += error_ang_v;
 654:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         error_int_ang_v = constrain(error_int_ang_v, -200.0, 200.0);
 655:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 656:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 657:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         error_v   = target_v - m.v_enc;
 658:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         error_d_v = error_v - error_v_pre;
 659:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         error_v_pre = error_v;
 660:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 661:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         error_int_v   += error_v;
 662:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         error_int_v = constrain(error_int_v, -20.0, 20.0);
 663:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 664:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 665:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         float FB_v = (  Kp_v * error_v
 666:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****                      + Ki_v * error_int_v
 667:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****                      + Kd_v * error_d_v)
 668:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****                      * 8.4/m.Vcc;
 669:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 670:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         float FB_ang   = (  Kp_ang * error_ang
 671:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****                          + Ki_ang * error_int_ang
 672:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****                          + Kd_ang * error_d_ang)
 673:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****                          * 8.4/m.Vcc;
 674:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 675:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         float FB_ang_v   = (  Kp_ang_v * error_ang_v
 676:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****                          + Ki_ang_v * error_int_ang_v
 677:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****                          + Kd_ang_v * error_d_ang_v)
 678:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****                          * 8.4/m.Vcc;
 679:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 680:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 681:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         //計算した各種変数をmouseにセット
 682:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 683:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         m.t_ang_a = target_ang_a ;
 684:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         m.t_ang_v = target_ang_v;
 685:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         m.t_ang   = target_ang;
 686:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         m.accum_ang = accum_ang;
 687:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 688:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         m.t_a = target_a;
 689:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         m.t_v = target_v;
 690:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         m.t_x = target_x;
 691:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 692:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 693:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         m.ang_P = Kp_ang * error_ang;
 694:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         m.ang_I = Ki_ang * error_int_ang;
 695:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         m.ang_D = Kd_ang * error_d_ang;
 696:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 697:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         m.ang_v_P = Kp_ang_v * error_ang_v;
 698:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         m.ang_v_I = Ki_ang_v * error_int_ang_v;
 699:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         m.ang_v_D = Kd_ang_v * error_d_ang_v;
 700:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 701:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 702:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         m.v_P = Kp_v * (target_v - m.v_enc);//error_v;
 703:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         float temp = target_v -m.v_enc;
 704:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         if(target_v > m.v_enc){
 705:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****             myprintf3("-----\n");
 706:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****             myprintf3("%f %f %f \n",target_v, m.v_enc, target_v - m.v_enc);
 707:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****             myprintf3("%f %x\n",temp,*(int*)&temp);
 708:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         }
 709:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         if(target_v - m.v_enc < 0 ){
 710:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****             myprintf3("====\n");
 711:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****             myprintf3("%f %f %f \n",target_v, m.v_enc, target_v - m.v_enc);
 712:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****             myprintf3("%f %x\n",temp,*(int*)&temp);
 713:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 714:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         }
 715:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 716:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         m.v_I = Ki_v * error_int_v;
 717:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         m.v_D = Kd_v * error_d_v;
 718:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 719:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         Vector2f FF_ang_duty = dutyFF_ang(target_ang_a, target_ang_v);
 720:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         m.ang_FF = FF_ang_duty.x;
 721:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 722:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         FB_ang = constrain(FB_ang, -0.20, 0.20);
 723:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 724:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         //duty[0] =  FB_ang + FB_ang_v + FB_v;//左
 725:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         //duty[1] = -FB_ang - FB_ang_v + FB_v;//右
 726:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         duty.x = FB_v;//左
 727:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         duty.y = FB_v;//右
 728:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 729:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         //duty += FF_ang_duty;
 730:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         return duty;
 731:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     };
 732:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 733:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 734:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** };
 735:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 736:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 737:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 738:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 739:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** class Stop : public BaseMoveEvent{
 740:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 741:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** public:
 742:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     uint32_t count = 0;
 743:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     uint32_t count_end;
 744:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 745:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     Stop(uint32_t stop_ms){
 746:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         count_end = stop_ms;
 747:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     }
 748:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 749:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     bool isEnd(){
 750:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 751:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         if(count < count_end) return false;
 752:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         else return true;
 753:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     };
 754:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 755:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     Vector2f calcDuty(){
 756:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         Vector2f duty(0.0,0.0);
 757:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 758:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         duty.x = 0.0;
 759:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         duty.y = 0.0;
 760:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         MPU9250 &imu = MPU9250::getInstance();
 761:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 762:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         if(ref_index < 200){
 763:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****             omega_x[ref_index] = imu.omega_raw[0];
 764:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****             omega_y[ref_index] = imu.omega_raw[1];
 765:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****             omega_z[ref_index] = imu.omega_raw[2];
 766:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 767:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****             acc_x[ref_index] = imu.acc_raw[0];
 768:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****             acc_y[ref_index] = imu.acc_raw[1];
 769:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****             acc_z[ref_index] = imu.acc_raw[2];
 770:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 771:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****             ref_index++;
 772:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         }
 773:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 774:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         if(count == 200){
 775:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****             setRefGyro();
 776:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         }
 777:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         if(count == 201){
 778:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****             setRefAcc();
 779:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         }
 780:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 781:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 782:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         UMouse &m = UMouse::getInstance();
 783:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         m.t_a = 0.0;
 784:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         m.t_v = 0.0;
 785:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         m.t_x = 0.0;
 786:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         m.accum_x =0.0;
 787:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         m.t_ang_a = 0.0;
 788:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         m.t_ang_v = 0.0;
 789:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         m.t_ang = 0.0;
 790:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         m.accum_ang = 0.0;
 791:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 792:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         m.a_v = 0.0;
 793:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         m.a_h = 0.0;
 794:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 795:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         m.wall_P =0.0;
 796:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         m.wall_I =0.0;
 797:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         m.wall_D =0.0;
 798:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 799:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         m.v_P =0.0;
 800:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         m.v_I =0.0;
 801:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         m.v_D = 0.0;
 802:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 803:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         m.ang_v_P = 0.0;
 804:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         m.ang_v_I = 0.0;
 805:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         m.ang_v_D = 0.0;
 806:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 807:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         m.ang_P = 0.0;
 808:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         m.ang_I = 0.0;
 809:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         m.ang_D = 0.0;
 810:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 811:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         count++;
 812:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         return duty;
 813:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     };
 814:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 815:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** private:
 816:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     uint32_t ref_index = 0;
 817:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     int16_t omega_x[200];
 818:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     int16_t omega_y[200];
 819:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     int16_t omega_z[200];
 820:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 821:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     float omega_x_sum = 0.0;
 822:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     float omega_y_sum = 0.0;
 823:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     float omega_z_sum = 0.0;
 824:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 825:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     int16_t acc_x[200];
 826:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     int16_t acc_y[200];
 827:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     int16_t acc_z[200];
 828:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 829:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     float acc_x_sum = 0.0;
 830:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     float acc_y_sum = 0.0;
 831:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     float acc_z_sum = 0.0;
 832:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 833:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 834:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     void setRefGyro(){
 835:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         MPU9250 &imu = MPU9250::getInstance();
 836:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 837:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         uint16_t ref_num = ref_index;
 838:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         quickSort_int16(omega_x,0 ,ref_num -1);
 839:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         quickSort_int16(omega_y,0 ,ref_num -1);
 840:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         quickSort_int16(omega_z,0 ,ref_num -1);
 841:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 842:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         for(int i=ref_num/4;i<(ref_num*3/4 +1) ;i++)
 843:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         {
 844:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****             omega_x_sum += (float)(omega_x[i]);
 845:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****             omega_y_sum += (float)(omega_y[i]);
 846:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****             omega_z_sum += (float)(omega_z[i]);
 847:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         }
 848:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         imu.omega_ref[0] = (int16_t)(omega_x_sum/(float)ref_num *2.0);
 849:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         imu.omega_ref[1] = (int16_t)(omega_y_sum/(float)ref_num *2.0);
 850:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         imu.omega_ref[2] = (int16_t)(omega_z_sum/(float)ref_num *2.0);
 851:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     }
 852:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 853:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     void setRefAcc(){
 854:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         MPU9250 &imu = MPU9250::getInstance();
 855:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         uint16_t ref_num = ref_index;
 856:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         quickSort_int16(acc_x,0 ,ref_num -1);
 857:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         quickSort_int16(acc_y,0 ,ref_num -1);
 858:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         quickSort_int16(acc_z,0 ,ref_num -1);
 859:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 860:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         for(int i=ref_num/4;i<(ref_num*3/4 +1) ;i++)
 861:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         {
 862:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****             acc_x_sum += (float)(acc_x[i]);
 863:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****             acc_y_sum += (float)(acc_y[i]);
 864:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****             acc_z_sum += (float)(acc_z[i]);
 865:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         }
 866:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         imu.acc_ref[0] = (int16_t)(acc_x_sum/(float)ref_num *2.0);
 867:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         imu.acc_ref[1] = (int16_t)(acc_y_sum/(float)ref_num *2.0);
 868:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         imu.acc_ref[2] = (int16_t)(acc_z_sum/(float)ref_num *2.0);
 869:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         myprintf3("====mpu9250======\n acc offset %d, %d, %d\n",imu.acc_ref[0],imu.acc_ref[1],imu.a
 870:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 871:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     }
 872:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 873:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** };
 874:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 875:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 876:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 877:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** #ifdef Memo
 878:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 879:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** class PivotTurn : public BaseMoveEvent{
 880:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** public:
 881:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     float ang_a;
 882:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     float ang;
 883:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 884:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     PivotTurn(float ang_){
 885:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         paramInit();
 886:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         ang = ang_;
 887:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         ang_a = 500.0;
 888:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     };
 889:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 890:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     bool isEnd(){
 891:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         return ((ABS(target_ang) >= ABS(ang)) ? true:false);
 892:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     };
 893:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     void trajectoryPlanning(){
 894:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         static uint8_t scene_num = 0;
 895:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 896:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         switch (scene_num){
 897:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****             case 0:
 898:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****                 target_ang_a = ang_a;
 899:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****                 if(ABS(target_ang) >= ABS(ang)/3.0){
 900:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****                     target_ang_a = 0.0;
 901:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****                     scene_num ++;
 902:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****                 }
 903:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****                 break;
 904:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****             case 1:
 905:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****                 if(ABS(target_ang) >= ABS(ang)*2.0/3.0){
 906:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****                     target_ang_a *= -1.0;
 907:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****                     scene_num ++;
 908:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****                 }
 909:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****                 break;
 910:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****             case 2:
 911:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****                 if(ABS(target_ang) >= ABS(ang)){
 912:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****                     target_ang_a *= 0.0;
 913:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****                     scene_num ++;
 914:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****                 }
 915:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****                 break;
 916:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         }
 917:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 918:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     };
 919:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 920:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     virtual void updatePidError(){
 921:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         //*******フィードバック制御のゲイン***********//
 922:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         Kp_v = 0.9;//.5;
 923:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         //float Kd_v = 0.3;//;
 924:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         Ki_v = 0.3;//0.1;
 925:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 926:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         Kp_ang_v = 0.0093;
 927:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         Ki_ang_v = 0.00042;
 928:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 929:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         Kp_ang = 0.0005;//0.005;
 930:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         Ki_ang = 0.00005;//0.003;
 931:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         Kd_ang = 0.0;//0.001;
 932:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         //*********************************//
 933:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         UMouse& mouse = UMouse::getInstance();
 934:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         //速度と角度と角速度の偏差
 935:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         float v = mouse.v_enc_L - mouse.v_enc_R;
 936:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         error_v     = target_v     - v;
 937:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         error_ang   = target_ang   - accum_ang;
 938:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         error_ang_v = target_ang_v - mouse.ang_v;
 939:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         //速度と角度と角速度のI項
 940:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         error_int_v += error_v;
 941:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         error_int_ang += error_ang;
 942:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         error_int_ang_v += error_ang_v;
 943:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 944:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         //I項のリミッター
 945:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         if(ABS(error_int_v) > 50.0){
 946:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****             if(error_int_v > 0) error_int_v = 50.0 ;
 947:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****             if(error_int_v < 0) error_int_v = -50.0;
 948:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         }
 949:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 950:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         if(ABS(error_int_ang_v) > 1200.0 ){
 951:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****                 if(error_int_ang_v > 0) error_int_ang_v = 1200.0;
 952:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****                 if(error_int_ang_v < 0) error_int_ang_v = -1200.0;
 953:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         }
 954:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 955:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         /*
 956:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         if(move_state != ROTATION){
 957:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****             error_int_ang_v=0.0;
 958:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         }
 959:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         */
 960:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 961:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         if(ABS(error_int_ang) > 300.0 ){
 962:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****             if(error_int_ang > 0) error_int_ang = 300.0;
 963:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****             if(error_int_ang < 0) error_int_ang = -300.0;
 964:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         }
 965:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 966:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 967:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     };
 968:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 969:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** };
 970:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** #endif
 971:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 972:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** class EventList{
 973:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** public:
 974:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 975:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     static EventList& getInstance(){
 976:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         static EventList instance;
 977:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         return instance;
 978:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     };
 979:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     void update(){
 980:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         if(eventList.empty() == false){
 981:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****             UMouse &mouse = UMouse::getInstance();
 982:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****             Vector2f duty = eventList.front()->calcDuty();
 983:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****             if(eventList.front()->isEnd() == true){
 984:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****                 delete eventList.front();
 985:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****                 eventList.pop();
 986:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****             }
 987:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****             mouse.setDuty(duty.x, duty.y);
 988:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 989:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 990:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         }
 991:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         else{
 992:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****             //UMouse &mouse = UMouse::getInstance();
 993:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****             float gyro_ang_v = MPU9250::getInstance().omega_f[2];
 994:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****             UMouse &mouse = UMouse::getInstance();
 995:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****             mouse.accum_ang += gyro_ang_v * DELTA_T;
 996:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****             mouse.t_v += mouse.a_v * DELTA_T;
 997:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         }
 998:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     }
 999:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
1000:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     void push(BaseMoveEvent* moveEve){
1001:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         eventList.push(moveEve);
1002:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     }
1003:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
1004:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     uint16_t getEventNum(){
1005:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         return eventList.size();
1006:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     }
1007:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
1008:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
1009:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
1010:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** private:
1011:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     queue<BaseMoveEvent*> eventList;
1012:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
1013:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     EventList() {};
1014:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****     ~EventList() {};
 136                             		.loc 6 1014 0
 137 0000 6E 7B                   		pushm	r7-r11
 138                             	.LCFI2:
 139                             		.loc 6 1014 0
 140 0002 EF 1B                   		mov.L	r1, r11
 141                             	.LBB728:
 142                             	.LBB729:
 143                             	.LBB730:
 144                             	.LBB731:
 145                             		.file 7 "c:\\progra~2\\gccfor~2.201\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\4.8.0.201602-gnurx\\bit
   1:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** // Deque implementation -*- C++ -*-
   2:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
   3:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** // Copyright (C) 2001-2013 Free Software Foundation, Inc.
   4:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** //
   5:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** // software; you can redistribute it and/or modify it under the
   7:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** // terms of the GNU General Public License as published by the
   8:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** // any later version.
  10:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
  11:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** // This library is distributed in the hope that it will be useful,
  12:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** // GNU General Public License for more details.
  15:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
  16:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
  20:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** // You should have received a copy of the GNU General Public License and
  21:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** // <http://www.gnu.org/licenses/>.
  24:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
  25:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** /*
  26:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****  *
  27:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****  * Copyright (c) 1994
  28:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****  * Hewlett-Packard Company
  29:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****  *
  30:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****  * provided that the above copyright notice appear in all copies and
  33:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****  * that both that copyright notice and this permission notice appear
  34:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****  * representations about the suitability of this software for any
  36:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****  *
  38:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****  *
  39:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****  * Copyright (c) 1997
  40:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****  * Silicon Graphics Computer Systems, Inc.
  41:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****  *
  42:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****  * provided that the above copyright notice appear in all copies and
  45:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****  * that both that copyright notice and this permission notice appear
  46:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****  * representations about the suitability of this software for any
  48:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****  */
  50:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
  51:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** /** @file bits/stl_deque.h
  52:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****  *  This is an internal header file, included by other library headers.
  53:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****  *  Do not attempt to use it directly. @headername{deque}
  54:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****  */
  55:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
  56:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** #ifndef _STL_DEQUE_H
  57:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** #define _STL_DEQUE_H 1
  58:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
  59:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** #include <bits/concept_check.h>
  60:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** #include <bits/stl_iterator_base_types.h>
  61:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** #include <bits/stl_iterator_base_funcs.h>
  62:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** #if __cplusplus >= 201103L
  63:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** #include <initializer_list>
  64:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** #endif
  65:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
  66:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** namespace std _GLIBCXX_VISIBILITY(default)
  67:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** {
  68:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
  69:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
  70:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****   /**
  71:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****    *  @brief This function controls the size of memory nodes.
  72:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****    *  @param  __size  The size of an element.
  73:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****    *  @return   The number (not byte size) of elements per node.
  74:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****    *
  75:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****    *  This function started off as a compiler kludge from SGI, but
  76:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****    *  seems to be a useful wrapper around a repeated constant
  77:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****    *  expression.  The @b 512 is tunable (and no other code needs to
  78:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****    *  change), but no investigation has been done since inheriting the
  79:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****    *  SGI code.  Touch _GLIBCXX_DEQUE_BUF_SIZE only if you know what
  80:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****    *  you are doing, however: changing it breaks the binary
  81:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****    *  compatibility!!
  82:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****   */
  83:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
  84:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** #ifndef _GLIBCXX_DEQUE_BUF_SIZE
  85:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** #define _GLIBCXX_DEQUE_BUF_SIZE 512
  86:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** #endif
  87:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
  88:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****   inline size_t
  89:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****   __deque_buf_size(size_t __size)
  90:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****   { return (__size < _GLIBCXX_DEQUE_BUF_SIZE
  91:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	    ? size_t(_GLIBCXX_DEQUE_BUF_SIZE / __size) : size_t(1)); }
  92:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
  93:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
  94:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****   /**
  95:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****    *  @brief A deque::iterator.
  96:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****    *
  97:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****    *  Quite a bit of intelligence here.  Much of the functionality of
  98:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****    *  deque is actually passed off to this class.  A deque holds two
  99:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****    *  of these internally, marking its valid range.  Access to
 100:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****    *  elements is done as offsets of either of those two, relying on
 101:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****    *  operator overloading in this class.
 102:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****    *
 103:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****    *  All the functions are op overloads except for _M_set_node.
 104:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****   */
 105:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****   template<typename _Tp, typename _Ref, typename _Ptr>
 106:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****     struct _Deque_iterator
 107:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****     {
 108:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       typedef _Deque_iterator<_Tp, _Tp&, _Tp*>             iterator;
 109:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       typedef _Deque_iterator<_Tp, const _Tp&, const _Tp*> const_iterator;
 110:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
 111:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       static size_t _S_buffer_size()
 112:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       { return __deque_buf_size(sizeof(_Tp)); }
 113:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
 114:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       typedef std::random_access_iterator_tag iterator_category;
 115:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       typedef _Tp                             value_type;
 116:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       typedef _Ptr                            pointer;
 117:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       typedef _Ref                            reference;
 118:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       typedef size_t                          size_type;
 119:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       typedef ptrdiff_t                       difference_type;
 120:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       typedef _Tp**                           _Map_pointer;
 121:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       typedef _Deque_iterator                 _Self;
 122:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
 123:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       _Tp* _M_cur;
 124:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       _Tp* _M_first;
 125:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       _Tp* _M_last;
 126:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       _Map_pointer _M_node;
 127:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
 128:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       _Deque_iterator(_Tp* __x, _Map_pointer __y)
 129:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       : _M_cur(__x), _M_first(*__y),
 130:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****         _M_last(*__y + _S_buffer_size()), _M_node(__y) { }
 131:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
 132:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       _Deque_iterator()
 133:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       : _M_cur(0), _M_first(0), _M_last(0), _M_node(0) { }
 134:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
 135:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       _Deque_iterator(const iterator& __x)
 136:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       : _M_cur(__x._M_cur), _M_first(__x._M_first),
 137:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****         _M_last(__x._M_last), _M_node(__x._M_node) { }
 138:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
 139:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       reference
 140:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       operator*() const
 141:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       { return *_M_cur; }
 142:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
 143:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       pointer
 144:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       operator->() const
 145:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       { return _M_cur; }
 146:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
 147:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       _Self&
 148:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       operator++()
 149:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       {
 150:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	++_M_cur;
 151:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	if (_M_cur == _M_last)
 152:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	  {
 153:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	    _M_set_node(_M_node + 1);
 154:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	    _M_cur = _M_first;
 155:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	  }
 156:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	return *this;
 157:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       }
 158:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
 159:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       _Self
 160:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       operator++(int)
 161:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       {
 162:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	_Self __tmp = *this;
 163:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	++*this;
 164:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	return __tmp;
 165:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       }
 166:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
 167:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       _Self&
 168:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       operator--()
 169:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       {
 170:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	if (_M_cur == _M_first)
 171:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	  {
 172:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	    _M_set_node(_M_node - 1);
 173:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	    _M_cur = _M_last;
 174:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	  }
 175:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	--_M_cur;
 176:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	return *this;
 177:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       }
 178:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
 179:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       _Self
 180:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       operator--(int)
 181:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       {
 182:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	_Self __tmp = *this;
 183:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	--*this;
 184:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	return __tmp;
 185:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       }
 186:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
 187:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       _Self&
 188:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       operator+=(difference_type __n)
 189:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       {
 190:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	const difference_type __offset = __n + (_M_cur - _M_first);
 191:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	if (__offset >= 0 && __offset < difference_type(_S_buffer_size()))
 192:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	  _M_cur += __n;
 193:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	else
 194:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	  {
 195:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	    const difference_type __node_offset =
 196:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	      __offset > 0 ? __offset / difference_type(_S_buffer_size())
 197:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	                   : -difference_type((-__offset - 1)
 198:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 					      / _S_buffer_size()) - 1;
 199:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	    _M_set_node(_M_node + __node_offset);
 200:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	    _M_cur = _M_first + (__offset - __node_offset
 201:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 				 * difference_type(_S_buffer_size()));
 202:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	  }
 203:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	return *this;
 204:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       }
 205:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
 206:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       _Self
 207:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       operator+(difference_type __n) const
 208:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       {
 209:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	_Self __tmp = *this;
 210:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	return __tmp += __n;
 211:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       }
 212:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
 213:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       _Self&
 214:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       operator-=(difference_type __n)
 215:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       { return *this += -__n; }
 216:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
 217:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       _Self
 218:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       operator-(difference_type __n) const
 219:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       {
 220:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	_Self __tmp = *this;
 221:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	return __tmp -= __n;
 222:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       }
 223:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
 224:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       reference
 225:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       operator[](difference_type __n) const
 226:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       { return *(*this + __n); }
 227:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
 228:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       /** 
 229:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  Prepares to traverse new_node.  Sets everything except
 230:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  _M_cur, which should therefore be set by the caller
 231:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  immediately afterwards, based on _M_first and _M_last.
 232:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        */
 233:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       void
 234:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       _M_set_node(_Map_pointer __new_node)
 235:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       {
 236:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	_M_node = __new_node;
 237:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	_M_first = *__new_node;
 238:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	_M_last = _M_first + difference_type(_S_buffer_size());
 239:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       }
 240:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****     };
 241:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
 242:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****   // Note: we also provide overloads whose operands are of the same type in
 243:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****   // order to avoid ambiguous overload resolution when std::rel_ops operators
 244:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****   // are in scope (for additional details, see libstdc++/3628)
 245:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****   template<typename _Tp, typename _Ref, typename _Ptr>
 246:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****     inline bool
 247:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****     operator==(const _Deque_iterator<_Tp, _Ref, _Ptr>& __x,
 248:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	       const _Deque_iterator<_Tp, _Ref, _Ptr>& __y)
 249:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****     { return __x._M_cur == __y._M_cur; }
 250:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
 251:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****   template<typename _Tp, typename _RefL, typename _PtrL,
 252:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	   typename _RefR, typename _PtrR>
 253:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****     inline bool
 254:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****     operator==(const _Deque_iterator<_Tp, _RefL, _PtrL>& __x,
 255:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	       const _Deque_iterator<_Tp, _RefR, _PtrR>& __y)
 256:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****     { return __x._M_cur == __y._M_cur; }
 257:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
 258:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****   template<typename _Tp, typename _Ref, typename _Ptr>
 259:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****     inline bool
 260:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****     operator!=(const _Deque_iterator<_Tp, _Ref, _Ptr>& __x,
 261:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	       const _Deque_iterator<_Tp, _Ref, _Ptr>& __y)
 262:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****     { return !(__x == __y); }
 263:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
 264:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****   template<typename _Tp, typename _RefL, typename _PtrL,
 265:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	   typename _RefR, typename _PtrR>
 266:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****     inline bool
 267:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****     operator!=(const _Deque_iterator<_Tp, _RefL, _PtrL>& __x,
 268:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	       const _Deque_iterator<_Tp, _RefR, _PtrR>& __y)
 269:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****     { return !(__x == __y); }
 270:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
 271:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****   template<typename _Tp, typename _Ref, typename _Ptr>
 272:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****     inline bool
 273:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****     operator<(const _Deque_iterator<_Tp, _Ref, _Ptr>& __x,
 274:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	      const _Deque_iterator<_Tp, _Ref, _Ptr>& __y)
 275:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****     { return (__x._M_node == __y._M_node) ? (__x._M_cur < __y._M_cur)
 276:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****                                           : (__x._M_node < __y._M_node); }
 277:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
 278:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****   template<typename _Tp, typename _RefL, typename _PtrL,
 279:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	   typename _RefR, typename _PtrR>
 280:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****     inline bool
 281:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****     operator<(const _Deque_iterator<_Tp, _RefL, _PtrL>& __x,
 282:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	      const _Deque_iterator<_Tp, _RefR, _PtrR>& __y)
 283:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****     { return (__x._M_node == __y._M_node) ? (__x._M_cur < __y._M_cur)
 284:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	                                  : (__x._M_node < __y._M_node); }
 285:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
 286:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****   template<typename _Tp, typename _Ref, typename _Ptr>
 287:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****     inline bool
 288:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****     operator>(const _Deque_iterator<_Tp, _Ref, _Ptr>& __x,
 289:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	      const _Deque_iterator<_Tp, _Ref, _Ptr>& __y)
 290:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****     { return __y < __x; }
 291:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
 292:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****   template<typename _Tp, typename _RefL, typename _PtrL,
 293:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	   typename _RefR, typename _PtrR>
 294:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****     inline bool
 295:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****     operator>(const _Deque_iterator<_Tp, _RefL, _PtrL>& __x,
 296:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	      const _Deque_iterator<_Tp, _RefR, _PtrR>& __y)
 297:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****     { return __y < __x; }
 298:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
 299:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****   template<typename _Tp, typename _Ref, typename _Ptr>
 300:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****     inline bool
 301:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****     operator<=(const _Deque_iterator<_Tp, _Ref, _Ptr>& __x,
 302:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	       const _Deque_iterator<_Tp, _Ref, _Ptr>& __y)
 303:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****     { return !(__y < __x); }
 304:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
 305:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****   template<typename _Tp, typename _RefL, typename _PtrL,
 306:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	   typename _RefR, typename _PtrR>
 307:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****     inline bool
 308:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****     operator<=(const _Deque_iterator<_Tp, _RefL, _PtrL>& __x,
 309:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	       const _Deque_iterator<_Tp, _RefR, _PtrR>& __y)
 310:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****     { return !(__y < __x); }
 311:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
 312:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****   template<typename _Tp, typename _Ref, typename _Ptr>
 313:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****     inline bool
 314:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****     operator>=(const _Deque_iterator<_Tp, _Ref, _Ptr>& __x,
 315:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	       const _Deque_iterator<_Tp, _Ref, _Ptr>& __y)
 316:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****     { return !(__x < __y); }
 317:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
 318:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****   template<typename _Tp, typename _RefL, typename _PtrL,
 319:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	   typename _RefR, typename _PtrR>
 320:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****     inline bool
 321:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****     operator>=(const _Deque_iterator<_Tp, _RefL, _PtrL>& __x,
 322:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	       const _Deque_iterator<_Tp, _RefR, _PtrR>& __y)
 323:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****     { return !(__x < __y); }
 324:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
 325:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 326:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****   // According to the resolution of DR179 not only the various comparison
 327:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****   // operators but also operator- must accept mixed iterator/const_iterator
 328:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****   // parameters.
 329:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****   template<typename _Tp, typename _Ref, typename _Ptr>
 330:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****     inline typename _Deque_iterator<_Tp, _Ref, _Ptr>::difference_type
 331:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****     operator-(const _Deque_iterator<_Tp, _Ref, _Ptr>& __x,
 332:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	      const _Deque_iterator<_Tp, _Ref, _Ptr>& __y)
 333:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****     {
 334:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       return typename _Deque_iterator<_Tp, _Ref, _Ptr>::difference_type
 335:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	(_Deque_iterator<_Tp, _Ref, _Ptr>::_S_buffer_size())
 336:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	* (__x._M_node - __y._M_node - 1) + (__x._M_cur - __x._M_first)
 337:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	+ (__y._M_last - __y._M_cur);
 338:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****     }
 339:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
 340:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****   template<typename _Tp, typename _RefL, typename _PtrL,
 341:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	   typename _RefR, typename _PtrR>
 342:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****     inline typename _Deque_iterator<_Tp, _RefL, _PtrL>::difference_type
 343:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****     operator-(const _Deque_iterator<_Tp, _RefL, _PtrL>& __x,
 344:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	      const _Deque_iterator<_Tp, _RefR, _PtrR>& __y)
 345:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****     {
 346:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       return typename _Deque_iterator<_Tp, _RefL, _PtrL>::difference_type
 347:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	(_Deque_iterator<_Tp, _RefL, _PtrL>::_S_buffer_size())
 348:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	* (__x._M_node - __y._M_node - 1) + (__x._M_cur - __x._M_first)
 349:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	+ (__y._M_last - __y._M_cur);
 350:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****     }
 351:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
 352:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****   template<typename _Tp, typename _Ref, typename _Ptr>
 353:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****     inline _Deque_iterator<_Tp, _Ref, _Ptr>
 354:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****     operator+(ptrdiff_t __n, const _Deque_iterator<_Tp, _Ref, _Ptr>& __x)
 355:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****     { return __x + __n; }
 356:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
 357:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****   template<typename _Tp>
 358:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****     void
 359:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****     fill(const _Deque_iterator<_Tp, _Tp&, _Tp*>&,
 360:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	 const _Deque_iterator<_Tp, _Tp&, _Tp*>&, const _Tp&);
 361:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
 362:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****   template<typename _Tp>
 363:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****     _Deque_iterator<_Tp, _Tp&, _Tp*>
 364:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****     copy(_Deque_iterator<_Tp, const _Tp&, const _Tp*>,
 365:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	 _Deque_iterator<_Tp, const _Tp&, const _Tp*>,
 366:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	 _Deque_iterator<_Tp, _Tp&, _Tp*>);
 367:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
 368:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****   template<typename _Tp>
 369:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****     inline _Deque_iterator<_Tp, _Tp&, _Tp*>
 370:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****     copy(_Deque_iterator<_Tp, _Tp&, _Tp*> __first,
 371:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	 _Deque_iterator<_Tp, _Tp&, _Tp*> __last,
 372:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	 _Deque_iterator<_Tp, _Tp&, _Tp*> __result)
 373:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****     { return std::copy(_Deque_iterator<_Tp, const _Tp&, const _Tp*>(__first),
 374:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 		       _Deque_iterator<_Tp, const _Tp&, const _Tp*>(__last),
 375:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 		       __result); }
 376:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
 377:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****   template<typename _Tp>
 378:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****     _Deque_iterator<_Tp, _Tp&, _Tp*>
 379:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****     copy_backward(_Deque_iterator<_Tp, const _Tp&, const _Tp*>,
 380:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 		  _Deque_iterator<_Tp, const _Tp&, const _Tp*>,
 381:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 		  _Deque_iterator<_Tp, _Tp&, _Tp*>);
 382:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
 383:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****   template<typename _Tp>
 384:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****     inline _Deque_iterator<_Tp, _Tp&, _Tp*>
 385:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****     copy_backward(_Deque_iterator<_Tp, _Tp&, _Tp*> __first,
 386:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 		  _Deque_iterator<_Tp, _Tp&, _Tp*> __last,
 387:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 		  _Deque_iterator<_Tp, _Tp&, _Tp*> __result)
 388:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****     { return std::copy_backward(_Deque_iterator<_Tp,
 389:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 				const _Tp&, const _Tp*>(__first),
 390:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 				_Deque_iterator<_Tp,
 391:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 				const _Tp&, const _Tp*>(__last),
 392:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 				__result); }
 393:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
 394:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** #if __cplusplus >= 201103L
 395:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****   template<typename _Tp>
 396:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****     _Deque_iterator<_Tp, _Tp&, _Tp*>
 397:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****     move(_Deque_iterator<_Tp, const _Tp&, const _Tp*>,
 398:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	 _Deque_iterator<_Tp, const _Tp&, const _Tp*>,
 399:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	 _Deque_iterator<_Tp, _Tp&, _Tp*>);
 400:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
 401:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****   template<typename _Tp>
 402:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****     inline _Deque_iterator<_Tp, _Tp&, _Tp*>
 403:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****     move(_Deque_iterator<_Tp, _Tp&, _Tp*> __first,
 404:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	 _Deque_iterator<_Tp, _Tp&, _Tp*> __last,
 405:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	 _Deque_iterator<_Tp, _Tp&, _Tp*> __result)
 406:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****     { return std::move(_Deque_iterator<_Tp, const _Tp&, const _Tp*>(__first),
 407:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 		       _Deque_iterator<_Tp, const _Tp&, const _Tp*>(__last),
 408:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 		       __result); }
 409:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
 410:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****   template<typename _Tp>
 411:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****     _Deque_iterator<_Tp, _Tp&, _Tp*>
 412:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****     move_backward(_Deque_iterator<_Tp, const _Tp&, const _Tp*>,
 413:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 		  _Deque_iterator<_Tp, const _Tp&, const _Tp*>,
 414:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 		  _Deque_iterator<_Tp, _Tp&, _Tp*>);
 415:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
 416:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****   template<typename _Tp>
 417:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****     inline _Deque_iterator<_Tp, _Tp&, _Tp*>
 418:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****     move_backward(_Deque_iterator<_Tp, _Tp&, _Tp*> __first,
 419:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 		  _Deque_iterator<_Tp, _Tp&, _Tp*> __last,
 420:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 		  _Deque_iterator<_Tp, _Tp&, _Tp*> __result)
 421:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****     { return std::move_backward(_Deque_iterator<_Tp,
 422:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 				const _Tp&, const _Tp*>(__first),
 423:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 				_Deque_iterator<_Tp,
 424:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 				const _Tp&, const _Tp*>(__last),
 425:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 				__result); }
 426:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** #endif
 427:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
 428:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****   /**
 429:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****    *  Deque base class.  This class provides the unified face for %deque's
 430:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****    *  allocation.  This class's constructor and destructor allocate and
 431:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****    *  deallocate (but do not initialize) storage.  This makes %exception
 432:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****    *  safety easier.
 433:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****    *
 434:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****    *  Nothing in this class ever constructs or destroys an actual Tp element.
 435:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****    *  (Deque handles that itself.)  Only/All memory management is performed
 436:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****    *  here.
 437:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****   */
 438:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****   template<typename _Tp, typename _Alloc>
 439:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****     class _Deque_base
 440:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****     {
 441:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****     public:
 442:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       typedef _Alloc                  allocator_type;
 443:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
 444:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       allocator_type
 445:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       get_allocator() const _GLIBCXX_NOEXCEPT
 446:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       { return allocator_type(_M_get_Tp_allocator()); }
 447:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
 448:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       typedef _Deque_iterator<_Tp, _Tp&, _Tp*>             iterator;
 449:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       typedef _Deque_iterator<_Tp, const _Tp&, const _Tp*> const_iterator;
 450:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
 451:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       _Deque_base()
 452:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       : _M_impl()
 453:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       { _M_initialize_map(0); }
 454:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
 455:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       _Deque_base(size_t __num_elements)
 456:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       : _M_impl()
 457:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       { _M_initialize_map(__num_elements); }
 458:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
 459:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       _Deque_base(const allocator_type& __a, size_t __num_elements)
 460:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       : _M_impl(__a)
 461:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       { _M_initialize_map(__num_elements); }
 462:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
 463:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       _Deque_base(const allocator_type& __a)
 464:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       : _M_impl(__a)
 465:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       { }
 466:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
 467:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** #if __cplusplus >= 201103L
 468:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       _Deque_base(_Deque_base&& __x)
 469:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       : _M_impl(std::move(__x._M_get_Tp_allocator()))
 470:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       {
 471:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	_M_initialize_map(0);
 472:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	if (__x._M_impl._M_map)
 473:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	  {
 474:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	    std::swap(this->_M_impl._M_start, __x._M_impl._M_start);
 475:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	    std::swap(this->_M_impl._M_finish, __x._M_impl._M_finish);
 476:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	    std::swap(this->_M_impl._M_map, __x._M_impl._M_map);
 477:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	    std::swap(this->_M_impl._M_map_size, __x._M_impl._M_map_size);
 478:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	  }
 479:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       }
 480:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** #endif
 481:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
 482:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       ~_Deque_base();
 483:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
 484:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****     protected:
 485:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       //This struct encapsulates the implementation of the std::deque
 486:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       //standard container and at the same time makes use of the EBO
 487:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       //for empty allocators.
 488:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       typedef typename _Alloc::template rebind<_Tp*>::other _Map_alloc_type;
 489:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
 490:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       typedef typename _Alloc::template rebind<_Tp>::other  _Tp_alloc_type;
 491:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
 492:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       struct _Deque_impl
 493:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       : public _Tp_alloc_type
 494:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       {
 495:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	_Tp** _M_map;
 496:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	size_t _M_map_size;
 497:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	iterator _M_start;
 498:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	iterator _M_finish;
 499:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
 500:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	_Deque_impl()
 501:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	: _Tp_alloc_type(), _M_map(0), _M_map_size(0),
 502:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	  _M_start(), _M_finish()
 503:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	{ }
 504:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
 505:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	_Deque_impl(const _Tp_alloc_type& __a)
 506:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	: _Tp_alloc_type(__a), _M_map(0), _M_map_size(0),
 507:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	  _M_start(), _M_finish()
 508:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	{ }
 509:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
 510:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** #if __cplusplus >= 201103L
 511:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	_Deque_impl(_Tp_alloc_type&& __a)
 512:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	: _Tp_alloc_type(std::move(__a)), _M_map(0), _M_map_size(0),
 513:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	  _M_start(), _M_finish()
 514:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	{ }
 515:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** #endif
 516:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       };
 517:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
 518:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       _Tp_alloc_type&
 519:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
 520:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       { return *static_cast<_Tp_alloc_type*>(&this->_M_impl); }
 521:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
 522:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       const _Tp_alloc_type&
 523:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
 524:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       { return *static_cast<const _Tp_alloc_type*>(&this->_M_impl); }
 525:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
 526:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       _Map_alloc_type
 527:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       _M_get_map_allocator() const _GLIBCXX_NOEXCEPT
 528:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       { return _Map_alloc_type(_M_get_Tp_allocator()); }
 529:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
 530:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       _Tp*
 531:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       _M_allocate_node()
 532:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       { 
 533:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	return _M_impl._Tp_alloc_type::allocate(__deque_buf_size(sizeof(_Tp)));
 534:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       }
 535:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
 536:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       void
 537:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       _M_deallocate_node(_Tp* __p)
 538:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       {
 539:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	_M_impl._Tp_alloc_type::deallocate(__p, __deque_buf_size(sizeof(_Tp)));
 540:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       }
 541:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
 542:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       _Tp**
 543:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       _M_allocate_map(size_t __n)
 544:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       { return _M_get_map_allocator().allocate(__n); }
 545:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
 546:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       void
 547:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       _M_deallocate_map(_Tp** __p, size_t __n)
 548:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       { _M_get_map_allocator().deallocate(__p, __n); }
 549:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
 550:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****     protected:
 551:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       void _M_initialize_map(size_t);
 552:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       void _M_create_nodes(_Tp** __nstart, _Tp** __nfinish);
 553:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       void _M_destroy_nodes(_Tp** __nstart, _Tp** __nfinish);
 554:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       enum { _S_initial_map_size = 8 };
 555:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
 556:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       _Deque_impl _M_impl;
 557:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****     };
 558:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
 559:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****   template<typename _Tp, typename _Alloc>
 560:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****     _Deque_base<_Tp, _Alloc>::
 561:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****     ~_Deque_base()
 562:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****     {
 563:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       if (this->_M_impl._M_map)
 146                             		.loc 7 563 0
 147 0004 EC 11                   		mov.L	[r1], r1
 148 0006 61 01                   		cmp	#0, r1
 149 0008 20 23                   		beq	.L13
 564:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	{
 565:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	  _M_destroy_nodes(this->_M_impl._M_start._M_node,
 566:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 			   this->_M_impl._M_finish._M_node + 1);
 150                             		.loc 7 566 0
 151 000a ED BA 09                		mov.L	36[r11], r10
 152 000d ED B7 05                		mov.L	20[r11], r7
 153 0010 62 4A                   		add	#4, r10
 154                             	.LBB732:
 155                             	.LBB733:
 567:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	  _M_deallocate_map(this->_M_impl._M_map, this->_M_impl._M_map_size);
 568:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	}
 569:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****     }
 570:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
 571:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****   /**
 572:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****    *  @brief Layout storage.
 573:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****    *  @param  __num_elements  The count of T's for which to allocate space
 574:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****    *                        at first.
 575:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****    *  @return   Nothing.
 576:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****    *
 577:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****    *  The initial underlying memory layout is a bit complicated...
 578:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****   */
 579:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****   template<typename _Tp, typename _Alloc>
 580:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****     void
 581:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****     _Deque_base<_Tp, _Alloc>::
 582:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****     _M_initialize_map(size_t __num_elements)
 583:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****     {
 584:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       const size_t __num_nodes = (__num_elements/ __deque_buf_size(sizeof(_Tp))
 585:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 				  + 1);
 586:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
 587:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       this->_M_impl._M_map_size = std::max((size_t) _S_initial_map_size,
 588:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 					   size_t(__num_nodes + 2));
 589:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       this->_M_impl._M_map = _M_allocate_map(this->_M_impl._M_map_size);
 590:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
 591:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       // For "small" maps (needing less than _M_map_size nodes), allocation
 592:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       // starts in the middle elements and grows outwards.  So nstart may be
 593:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       // the beginning of _M_map, but for small maps it may be as far in as
 594:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       // _M_map+3.
 595:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
 596:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       _Tp** __nstart = (this->_M_impl._M_map
 597:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 			+ (this->_M_impl._M_map_size - __num_nodes) / 2);
 598:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       _Tp** __nfinish = __nstart + __num_nodes;
 599:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
 600:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       __try
 601:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	{ _M_create_nodes(__nstart, __nfinish); }
 602:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       __catch(...)
 603:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	{
 604:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	  _M_deallocate_map(this->_M_impl._M_map, this->_M_impl._M_map_size);
 605:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	  this->_M_impl._M_map = 0;
 606:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	  this->_M_impl._M_map_size = 0;
 607:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	  __throw_exception_again;
 608:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	}
 609:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
 610:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       this->_M_impl._M_start._M_set_node(__nstart);
 611:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       this->_M_impl._M_finish._M_set_node(__nfinish - 1);
 612:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       this->_M_impl._M_start._M_cur = _M_impl._M_start._M_first;
 613:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       this->_M_impl._M_finish._M_cur = (this->_M_impl._M_finish._M_first
 614:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 					+ __num_elements
 615:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 					% __deque_buf_size(sizeof(_Tp)));
 616:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****     }
 617:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
 618:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****   template<typename _Tp, typename _Alloc>
 619:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****     void
 620:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****     _Deque_base<_Tp, _Alloc>::
 621:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****     _M_create_nodes(_Tp** __nstart, _Tp** __nfinish)
 622:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****     {
 623:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       _Tp** __cur;
 624:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       __try
 625:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	{
 626:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	  for (__cur = __nstart; __cur < __nfinish; ++__cur)
 627:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	    *__cur = this->_M_allocate_node();
 628:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	}
 629:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       __catch(...)
 630:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	{
 631:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	  _M_destroy_nodes(__nstart, __cur);
 632:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	  __throw_exception_again;
 633:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	}
 634:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****     }
 635:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
 636:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****   template<typename _Tp, typename _Alloc>
 637:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****     void
 638:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****     _Deque_base<_Tp, _Alloc>::
 639:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****     _M_destroy_nodes(_Tp** __nstart, _Tp** __nfinish)
 640:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****     {
 641:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       for (_Tp** __n = __nstart; __n < __nfinish; ++__n)
 156                             		.loc 7 641 0
 157 0012 47 A7                   		cmp	r10, r7
 158 0014 22 11                   		bgeu	.L15
 159 0016 EF 00                   		.balign 8,3,3
 160                             	.L17:
 161                             	.LBB734:
 162                             	.LBB735:
 163                             	.LBB736:
 164                             		.file 8 "c:\\progra~2\\gccfor~2.201\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\4.8.0.201602-gnurx\\ext
   1:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h **** // Allocator that wraps operator new -*- C++ -*-
   2:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h **** 
   3:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h **** // Copyright (C) 2001-2013 Free Software Foundation, Inc.
   4:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h **** //
   5:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h **** // software; you can redistribute it and/or modify it under the
   7:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h **** // terms of the GNU General Public License as published by the
   8:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h **** // any later version.
  10:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h **** 
  11:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h **** // This library is distributed in the hope that it will be useful,
  12:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h **** // GNU General Public License for more details.
  15:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h **** 
  16:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h **** 
  20:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h **** // You should have received a copy of the GNU General Public License and
  21:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h **** // <http://www.gnu.org/licenses/>.
  24:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h **** 
  25:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h **** /** @file ext/new_allocator.h
  26:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h ****  *  This file is a GNU extension to the Standard C++ Library.
  27:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h ****  */
  28:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h **** 
  29:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h **** #ifndef _NEW_ALLOCATOR_H
  30:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h **** #define _NEW_ALLOCATOR_H 1
  31:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h **** 
  32:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h **** #include <bits/c++config.h>
  33:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h **** #include <new>
  34:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h **** #include <bits/functexcept.h>
  35:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h **** #include <bits/move.h>
  36:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h **** #if __cplusplus >= 201103L
  37:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h **** #include <type_traits>
  38:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h **** #endif
  39:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h **** 
  40:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
  41:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h **** {
  42:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  43:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h **** 
  44:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h ****   using std::size_t;
  45:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h ****   using std::ptrdiff_t;
  46:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h **** 
  47:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h ****   /**
  48:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h ****    *  @brief  An allocator that uses global new, as per [20.4].
  49:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h ****    *  @ingroup allocators
  50:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h ****    *
  51:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h ****    *  This is precisely the allocator defined in the C++ Standard. 
  52:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h ****    *    - all allocation calls operator new
  53:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h ****    *    - all deallocation calls operator delete
  54:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h ****    *
  55:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h ****    *  @tparam  _Tp  Type of allocated object.
  56:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h ****    */
  57:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h ****   template<typename _Tp>
  58:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h ****     class new_allocator
  59:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h ****     {
  60:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h ****     public:
  61:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h ****       typedef size_t     size_type;
  62:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h ****       typedef ptrdiff_t  difference_type;
  63:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h ****       typedef _Tp*       pointer;
  64:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h ****       typedef const _Tp* const_pointer;
  65:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h ****       typedef _Tp&       reference;
  66:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h ****       typedef const _Tp& const_reference;
  67:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h ****       typedef _Tp        value_type;
  68:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h **** 
  69:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h ****       template<typename _Tp1>
  70:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h ****         struct rebind
  71:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h ****         { typedef new_allocator<_Tp1> other; };
  72:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h **** 
  73:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h **** #if __cplusplus >= 201103L
  74:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  75:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h ****       // 2103. propagate_on_container_move_assignment
  76:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h ****       typedef std::true_type propagate_on_container_move_assignment;
  77:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h **** #endif
  78:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h **** 
  79:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h ****       new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  80:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h **** 
  81:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h ****       new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
  82:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h **** 
  83:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h ****       template<typename _Tp1>
  84:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h ****         new_allocator(const new_allocator<_Tp1>&) _GLIBCXX_USE_NOEXCEPT { }
  85:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h **** 
  86:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h ****       ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  87:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h **** 
  88:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h ****       pointer
  89:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h ****       address(reference __x) const _GLIBCXX_NOEXCEPT
  90:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h ****       { return std::__addressof(__x); }
  91:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h **** 
  92:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h ****       const_pointer
  93:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h ****       address(const_reference __x) const _GLIBCXX_NOEXCEPT
  94:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h ****       { return std::__addressof(__x); }
  95:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h **** 
  96:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h ****       // NB: __n is permitted to be 0.  The C++ standard says nothing
  97:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h ****       // about what the return value is when __n == 0.
  98:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h ****       pointer
  99:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h ****       allocate(size_type __n, const void* = 0)
 100:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h ****       { 
 101:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h **** 	if (__n > this->max_size())
 102:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h **** 	  std::__throw_bad_alloc();
 103:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h **** 
 104:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h **** 	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 105:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h ****       }
 106:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h **** 
 107:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h ****       // __p is not permitted to be a null pointer.
 108:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h ****       void
 109:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h ****       deallocate(pointer __p, size_type)
 110:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h ****       { ::operator delete(__p); }
 165                             		.loc 8 110 0
 166 0018 FD 2A 71                		mov.L	[r7+], r1
 167 001b 05 00 00 00             		bsr	__ZdlPv
 168                             	.LBE736:
 169                             	.LBE735:
 170                             	.LBE734:
 171                             		.loc 7 641 0
 172 001f 47 7A                   		cmp	r7, r10
 173 0021 24 F7                   		bgtu	.L17
 174 0023 EC B1                   		mov.L	[r11], r1
 175                             		.balign 8,3,1
 176                             	.L15:
 177                             	.LBE733:
 178                             	.LBE732:
 179                             	.LBE731:
 180                             	.LBE730:
 181                             	.LBE729:
 182                             	.LBE728:
 183                             		.loc 6 1014 0
 184 0025 6F 7B                   		popm	r7-r11
 185                             	.LBB743:
 186                             	.LBB742:
 187                             	.LBB741:
 188                             	.LBB740:
 189                             	.LBB737:
 190                             	.LBB738:
 191                             	.LBB739:
 192                             		.loc 8 110 0
 193 0027 04 00 00 00             		bra	__ZdlPv
 194                             	.L13:
 195                             	.LBE739:
 196                             	.LBE738:
 197                             	.LBE737:
 198                             	.LBE740:
 199                             	.LBE741:
 200                             	.LBE742:
 201                             	.LBE743:
 202                             		.loc 6 1014 0
 203 002b 3F 7B 05                		rtsd	#20, r7-r11
 204                             	.LFE1461:
 206                             		.weak	__ZN9EventListD1Ev
 207                             		.set	__ZN9EventListD1Ev,__ZN9EventListD2Ev
 208 002e EF 00                   		.section	.text._ZN10WallSensorD2Ev,"axG",@progbits,_ZN10WallSensorD5Ev,comdat
 209                             		.weak	__ZN10WallSensorD2Ev
 211                             	__ZN10WallSensorD2Ev:
 212                             	.LFB1069:
 213                             		.file 9 "C:\\Users\\ryota\\e2_studio\\workspace\\umouse\\src\\robot_object/wallsensor.hpp"
   1:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp **** #ifndef WALLSENSOR_H
   2:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp **** #define WALLSENSOR_H
   3:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp **** 
   4:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp **** #include "iodefine.h"
   5:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp **** #include "stdint.h"
   6:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp **** #include <deque>
   7:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp **** 
   8:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp **** using std::deque;
   9:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp **** 
  10:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp **** 
  11:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp **** 
  12:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp **** class WallSensor{
  13:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp **** 
  14:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp **** private:
  15:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****     const uint8_t BUFF_SIZE = 5;
  16:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****     bool enable;
  17:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp **** 
  18:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****     WallSensor(){
  19:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****         enable = true;
  20:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****         ahead_on = 0;
  21:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****         left_on  = 0;
  22:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****         right_on = 0;
  23:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp **** 
  24:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****         ahead_off = 0;
  25:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****         left_off = 0;
  26:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****         right_off = 0;
  27:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****         for(uint8_t i=0;i<BUFF_SIZE;i++){
  28:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****             ahead.push_front(0);
  29:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****             right.push_front(0);
  30:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****             left.push_front(0);
  31:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****         }
  32:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp **** 
  33:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****     };
  34:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****     WallSensor(WallSensor&){
  35:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****         enable = true;
  36:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****         ahead_on = 0;
  37:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****         left_on = 0;
  38:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****         right_on = 0;
  39:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp **** 
  40:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****         ahead_off = 0;
  41:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****         left_off = 0;
  42:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****         right_off = 0;
  43:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****         for(uint8_t i=0;i<BUFF_SIZE;i++){
  44:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****             ahead.push_front(0);
  45:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****             right.push_front(0);
  46:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****             left.push_front(0);
  47:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****         }
  48:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp **** 
  49:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****     };
  50:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****     ~WallSensor(){
 214                             		.loc 9 50 0
 215 0000 6E 7B                   		pushm	r7-r11
 216                             	.LCFI3:
 217                             		.loc 9 50 0
 218 0002 EF 1A                   		mov.L	r1, r10
 219                             	.LBB784:
 220                             	.LBB785:
 221                             	.LBB786:
 222                             	.LBB787:
 563:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	{
 223                             		.loc 7 563 0
 224 0004 AE 11                   		mov.L	96[r1], r1
 225                             	.LBE787:
 226                             	.LBE786:
 227                             	.LBE785:
  51:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****         enable = false;
 228                             		.loc 9 51 0
 229 0006 F9 A4 01 00             		mov.B	#0, 1[r10]
 230                             	.LBB798:
 231                             	.LBB797:
 232                             	.LBB796:
 563:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	{
 233                             		.loc 7 563 0
 234 000a 61 01                   		cmp	#0, r1
 235 000c 20 20                   		beq	.L21
 566:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	  _M_deallocate_map(this->_M_impl._M_map, this->_M_impl._M_map_size);
 236                             		.loc 7 566 0
 237 000e ED AB 21                		mov.L	132[r10], r11
 238 0011 ED A7 1D                		mov.L	116[r10], r7
 239 0014 62 4B                   		add	#4, r11
 240                             	.LBB788:
 241                             	.LBB789:
 242                             		.loc 7 641 0
 243 0016 47 B7                   		cmp	r11, r7
 244 0018 22 10                   		bgeu	.L22
 245                             		.balign 8,3,3
 246                             	.L24:
 247                             	.LBB790:
 248                             	.LBB791:
 249                             	.LBB792:
 250                             		.loc 8 110 0
 251 001a FD 2A 71                		mov.L	[r7+], r1
 252 001d 05 00 00 00             		bsr	__ZdlPv
 253                             	.LBE792:
 254                             	.LBE791:
 255                             	.LBE790:
 256                             		.loc 7 641 0
 257 0021 47 7B                   		cmp	r7, r11
 258 0023 24 F7                   		bgtu	.L24
 259 0025 ED A1 18                		mov.L	96[r10], r1
 260                             		.balign 8,3,3
 261                             	.L22:
 262                             	.LBE789:
 263                             	.LBE788:
 264                             	.LBB793:
 265                             	.LBB794:
 266                             	.LBB795:
 267                             		.loc 8 110 0
 268 0028 05 00 00 00             		bsr	__ZdlPv
 269                             		.balign 8,3,1
 270                             	.L21:
 271                             	.LBE795:
 272                             	.LBE794:
 273                             	.LBE793:
 274                             	.LBE796:
 275                             	.LBE797:
 276                             	.LBE798:
 277                             	.LBB799:
 278                             	.LBB800:
 279                             	.LBB801:
 563:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	{
 280                             		.loc 7 563 0
 281 002c ED A1 0E                		mov.L	56[r10], r1
 282 002f 61 01                   		cmp	#0, r1
 283 0031 20 23                   		beq	.L25
 566:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	  _M_deallocate_map(this->_M_impl._M_map, this->_M_impl._M_map_size);
 284                             		.loc 7 566 0
 285 0033 ED AB 17                		mov.L	92[r10], r11
 286 0036 ED A7 13                		mov.L	76[r10], r7
 287 0039 62 4B                   		add	#4, r11
 288                             	.LBB802:
 289                             	.LBB803:
 290                             		.loc 7 641 0
 291 003b 47 B7                   		cmp	r11, r7
 292 003d 22 13                   		bgeu	.L26
 293 003f 03                      		.balign 8,3,3
 294                             	.L28:
 295                             	.LBB804:
 296                             	.LBB805:
 297                             	.LBB806:
 298                             		.loc 8 110 0
 299 0040 FD 2A 71                		mov.L	[r7+], r1
 300 0043 05 00 00 00             		bsr	__ZdlPv
 301                             	.LBE806:
 302                             	.LBE805:
 303                             	.LBE804:
 304                             		.loc 7 641 0
 305 0047 47 7B                   		cmp	r7, r11
 306 0049 24 F7                   		bgtu	.L28
 307 004b ED A1 0E                		mov.L	56[r10], r1
 308 004e EF 00                   		.balign 8,3,3
 309                             	.L26:
 310                             	.LBE803:
 311                             	.LBE802:
 312                             	.LBB807:
 313                             	.LBB808:
 314                             	.LBB809:
 315                             		.loc 8 110 0
 316 0050 05 00 00 00             		bsr	__ZdlPv
 317                             		.balign 8,3,1
 318                             	.L25:
 319                             	.LBE809:
 320                             	.LBE808:
 321                             	.LBE807:
 322                             	.LBE801:
 323                             	.LBE800:
 324                             	.LBE799:
 325                             	.LBB810:
 326                             	.LBB811:
 327                             	.LBB812:
 563:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	{
 328                             		.loc 7 563 0
 329 0054 ED A1 04                		mov.L	16[r10], r1
 330 0057 61 01                   		cmp	#0, r1
 331 0059 20 23                   		beq	.L20
 566:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	  _M_deallocate_map(this->_M_impl._M_map, this->_M_impl._M_map_size);
 332                             		.loc 7 566 0
 333 005b ED AB 0D                		mov.L	52[r10], r11
 334 005e ED A7 09                		mov.L	36[r10], r7
 335 0061 62 4B                   		add	#4, r11
 336                             	.LBB813:
 337                             	.LBB814:
 338                             		.loc 7 641 0
 339 0063 47 B7                   		cmp	r11, r7
 340 0065 22 11                   		bgeu	.L30
 341 0067 03                      		.balign 8,3,3
 342                             	.L32:
 343                             	.LBB815:
 344                             	.LBB816:
 345                             	.LBB817:
 346                             		.loc 8 110 0
 347 0068 FD 2A 71                		mov.L	[r7+], r1
 348 006b 05 00 00 00             		bsr	__ZdlPv
 349                             	.LBE817:
 350                             	.LBE816:
 351                             	.LBE815:
 352                             		.loc 7 641 0
 353 006f 47 7B                   		cmp	r7, r11
 354 0071 24 F7                   		bgtu	.L32
 355 0073 ED A1 04                		mov.L	16[r10], r1
 356                             		.balign 8,3,1
 357                             	.L30:
 358                             	.LBE814:
 359                             	.LBE813:
 360                             	.LBE812:
 361                             	.LBE811:
 362                             	.LBE810:
 363                             	.LBE784:
  52:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****     };
 364                             		.loc 9 52 0
 365 0076 6F 7B                   		popm	r7-r11
 366                             	.LBB824:
 367                             	.LBB823:
 368                             	.LBB822:
 369                             	.LBB821:
 370                             	.LBB818:
 371                             	.LBB819:
 372                             	.LBB820:
 373                             		.loc 8 110 0
 374 0078 04 00 00 00             		bra	__ZdlPv
 375                             	.L20:
 376                             	.LBE820:
 377                             	.LBE819:
 378                             	.LBE818:
 379                             	.LBE821:
 380                             	.LBE822:
 381                             	.LBE823:
 382                             	.LBE824:
 383                             		.loc 9 52 0
 384 007c 3F 7B 05                		rtsd	#20, r7-r11
 385                             	.LFE1069:
 387                             		.weak	__ZN10WallSensorD1Ev
 388                             		.set	__ZN10WallSensorD1Ev,__ZN10WallSensorD2Ev
 389 007f 03                      		.section P,"ax"
 390                             		.global	___main
 392                             	___main:
 393                             	.LFB0:
 394                             		.file 10 "../src/main.cpp"
   1:../src/main.cpp **** /***************************************************************/
   2:../src/main.cpp **** /*                                                             */
   3:../src/main.cpp **** /*      PROJECT NAME :  micromouse                             */
   4:../src/main.cpp **** /*      FILE         :  micromouse.cpp                         */
   5:../src/main.cpp **** /*      DESCRIPTION  :  Main Program                           */
   6:../src/main.cpp **** /*      CPU SERIES   :  RX700                                  */
   7:../src/main.cpp **** /*      CPU TYPE     :  RX71M                                  */
   8:../src/main.cpp **** /*                                                             */
   9:../src/main.cpp **** /*      This file is generated by e2 studio.                   */
  10:../src/main.cpp **** /*                                                             */
  11:../src/main.cpp **** /***************************************************************/
  12:../src/main.cpp **** 
  13:../src/main.cpp **** /************************************************************************/
  14:../src/main.cpp **** /*    File Version: V1.00                                               */
  15:../src/main.cpp **** /*    Date Generated: 08/07/2013                                        */
  16:../src/main.cpp **** /************************************************************************/
  17:../src/main.cpp **** 
  18:../src/main.cpp **** #include "iodefine.h"
  19:../src/main.cpp **** 
  20:../src/main.cpp **** #ifdef CPPAPP
  21:../src/main.cpp **** //Initialize global constructors
  22:../src/main.cpp **** extern "C" void __main() {
 395                             		.loc 10 22 0
 396 0000 7E A7                   		push.l	r7
 397                             	.LCFI4:
 398                             	.LBB825:
 399                             	.LBB826:
  23:../src/main.cpp ****     static int initialized;
  24:../src/main.cpp ****     if (!initialized) {
 400                             		.loc 10 24 0
 401 0002 FB 72 08 00 00 00       		mov.L	#__ZZ6__mainE11initialized, r7
 402 0008 EC 7E                   		mov.L	[r7], r14
 403 000a 61 0E                   		cmp	#0, r14
 404 000c 21 21                   		bne	.L40
 405                             	.LBB827:
  25:../src/main.cpp ****         typedef void (*pfunc)();
  26:../src/main.cpp ****         extern pfunc __ctors[];
  27:../src/main.cpp ****         extern pfunc __ctors_end[];
  28:../src/main.cpp ****         pfunc *p;
  29:../src/main.cpp **** 
  30:../src/main.cpp ****         initialized = 1;
 406                             		.loc 10 30 0
 407 000e F8 76 01                		mov.L	#1, [r7]
 408                             	.LVL12:
  31:../src/main.cpp ****         for (p = __ctors_end; p > __ctors;)
 409                             		.loc 10 31 0
 410 0011 FB 72 00 00 00 00       		mov.L	#___ctors_end, r7
 411 0017 74 07 00 00 00 00       		cmp	#___ctors, r7
 412 001d 25 10                   		bleu	.L40
 413                             	.LVL13:
 414 001f 03                      		.balign 8,3,3
 415                             	.L43:
  32:../src/main.cpp ****             (*--p)();
 416                             		.loc 10 32 0
 417 0020 FD 2E 7E                		mov.L	[-r7], r14
 418                             	.LVL14:
 419 0023 7F 1E                   		jsr	r14
 420                             	.LVL15:
  31:../src/main.cpp ****         for (p = __ctors_end; p > __ctors;)
 421                             		.loc 10 31 0
 422 0025 74 07 00 00 00 00       		cmp	#___ctors, r7
 423 002b 24 F5                   		bgtu	.L43
 424                             	.LVL16:
 425                             		.balign 8,3,2
 426                             	.L40:
 427                             	.LBE827:
 428                             	.LBE826:
 429                             	.LBE825:
  33:../src/main.cpp ****     }
  34:../src/main.cpp **** }
 430                             		.loc 10 34 0
 431 002d 3F 77 01                		rtsd	#4, r7-r7
 432                             	.LFE0:
 434                             		.section	.text._ZN5FcLed11getInstanceEv,"axG",@progbits,_ZN5FcLed11getInstanceEv,comdat
 435                             		.weak	__ZN5FcLed11getInstanceEv
 437                             	__ZN5FcLed11getInstanceEv:
 438                             	.LFB764:
  25:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\fcled.h **** 		static FcLed instance;
 439                             		.loc 5 25 0
 440 0000 6E 67                   		pushm	r6-r7
 441                             	.LCFI5:
 442 0002 71 00 C8                		add	#-56, r0
 443                             	.LCFI6:
 444 0005 F9 02 06 00 00 00 00    		mov.L	#___gxx_personality_sj0, 24[r0]
 445 000c F9 02 07 00 00 00 00    		mov.L	#.LLSDA764, 28[r0]
 446 0013 A2 00                   		mov.L	r0, 32[r0]
 447 0015 F9 02 09 B3 00 00 00    		mov.L	#.L50, 36[r0]
 448 001c A2 80                   		mov.L	r0, 40[r0]
 449 001e EF 01                   		mov.L	r0, r1
 450 0020 05 00 00 00             		bsr	__Unwind_SjLj_Register
 451                             	.LVL17:
 452                             	.LBB850:
  26:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\fcled.h **** 		return instance;
 453                             		.loc 5 26 0
 454 0024 FB 12 00 00 00 00       		mov.L	#__ZGVZN5FcLed11getInstanceEvE8instance, r1
 455 002a 58 17                   		movu.B	[r1], r7
 456 002c A3 0F                   		mov.L	r7, 52[r0]
 457 002e 61 07                   		cmp	#0, r7
 458 0030 20 11                   		beq	.L57
 459                             		.balign 8,3,1
 460                             	.L54:
 461 0032 EF 01                   		mov.L	r0, r1
 462 0034 05 00 00 00             		bsr	__Unwind_SjLj_Unregister
 463                             	.LVL18:
 464                             	.LBE850:
  28:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\fcled.h **** 
 465                             		.loc 5 28 0
 466 0038 FB 12 00 00 00 00       		mov.L	#__ZZN5FcLed11getInstanceEvE8instance, r1
 467 003e 3F 67 10                		rtsd	#64, r6-r7
 468                             	.L57:
 469                             	.LBB860:
  26:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\fcled.h **** 		return instance;
 470                             		.loc 5 26 0 discriminator 1
 471 0041 05 00 00 00             		bsr	___cxa_guard_acquire
 472                             	.LVL19:
 473 0045 61 01                   		cmp	#0, r1
 474 0047 20 EB                   		beq	.L54
 475                             	.LVL20:
 476                             	.LBB851:
 477                             	.LBB852:
 478                             	.LBB853:
   8:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\fcled.h **** public:
 479                             		.loc 5 8 0
 480 0049 FB 12 00 00 00 00       		mov.L	#__ZZN5FcLed11getInstanceEvE8instance, r1
 481 004f F8 12 00 00 00 00       		mov.L	#__ZTV5LED_R+8, [r1]
 482                             	.LVL21:
 483                             	.LBE853:
 484                             	.LBE852:
 485                             	.LBB854:
 486                             	.LBB855:
  13:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\fcled.h **** public:
 487                             		.loc 5 13 0
 488 0055 F9 12 03 00 00 00 00    		mov.L	#__ZTV5LED_G+8, 12[r1]
 489                             	.LVL22:
 490                             	.LBE855:
 491                             	.LBE854:
 492                             	.LBB856:
 493                             	.LBB857:
  18:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\fcled.h **** public:
 494                             		.loc 5 18 0
 495 005c F9 12 06 00 00 00 00    		mov.L	#__ZTV5LED_B+8, 24[r1]
 496                             	.LVL23:
 497                             	.LBE857:
 498                             	.LBE856:
 499                             	.LBB858:
 500                             	.LBB859:
  39:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\fcled.h **** 		G.turn(g);
 501                             		.loc 5 39 0
 502 0063 3E 01 01                		mov.L	#1, 4[r0]
 503 0066 CF 72                   		mov.B	r7, r2
 504 0068 05 00 00 00             		bsr	__ZN11AbstructLED4turnEh
 505                             	.LVL24:
  40:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\fcled.h **** 		B.turn(b);
 506                             		.loc 5 40 0
 507 006c FB 12 00 00 00 00       		mov.L	#__ZZN5FcLed11getInstanceEvE8instance+12, r1
 508                             	.LVL25:
 509 0072 66 02                   		mov	#0, r2
 510 0074 05 00 00 00             		bsr	__ZN11AbstructLED4turnEh
 511                             	.LVL26:
  41:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\fcled.h **** 	}
 512                             		.loc 5 41 0
 513 0078 FB 12 00 00 00 00       		mov.L	#__ZZN5FcLed11getInstanceEvE8instance+24, r1
 514                             	.LVL27:
 515 007e 66 02                   		mov	#0, r2
 516 0080 05 00 00 00             		bsr	__ZN11AbstructLED4turnEh
 517                             	.LVL28:
 518                             	.LBE859:
 519                             	.LBE858:
 520                             	.LBE851:
 521                             	.LBE860:
 522                             	.LBB861:
 523                             	.LBB862:
  26:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\fcled.h **** 		return instance;
 524                             		.loc 5 26 0
 525 0084 FB 12 00 00 00 00       		mov.L	#__ZGVZN5FcLed11getInstanceEvE8instance, r1
 526 008a 05 00 00 00             		bsr	___cxa_guard_release
 527                             	.LVL29:
 528 008e FB 22 00 00 00 00       		mov.L	#__ZZN5FcLed11getInstanceEvE8instance, r2
 529 0094 FB 32 00 00 00 00       		mov.L	#___dso_handle, r3
 530 009a FB 12 00 00 00 00       		mov.L	#__ZN5FcLedD1Ev, r1
 531 00a0 05 00 00 00             		bsr	___cxa_atexit
 532                             	.LVL30:
 533 00a4 EF 01                   		mov.L	r0, r1
 534 00a6 05 00 00 00             		bsr	__Unwind_SjLj_Unregister
 535                             	.LVL31:
 536                             	.LBE862:
 537                             	.LBE861:
  28:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\fcled.h **** 
 538                             		.loc 5 28 0
 539 00aa FB 12 00 00 00 00       		mov.L	#__ZZN5FcLed11getInstanceEvE8instance, r1
 540 00b0 3F 67 10                		rtsd	#64, r6-r7
 541                             	.L50:
 542                             	.LBB863:
  26:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\fcled.h **** 		return instance;
 543                             		.loc 5 26 0
 544 00b3 FB 12 00 00 00 00       		mov.L	#__ZGVZN5FcLed11getInstanceEvE8instance, r1
 545 00b9 E5 00 02 0D             		mov.L	8[r0], 52[r0]
 546 00bd 05 00 00 00             		bsr	___cxa_guard_abort
 547                             	.LVL32:
 548 00c1 AB 09                   		mov.L	52[r0], r1
 549 00c3 F9 06 01 FF             		mov.L	#-1, 4[r0]
 550 00c7 05 00 00 00             		bsr	__Unwind_SjLj_Resume
 551                             	.LVL33:
 552                             	.LBE863:
 553                             	.LFE764:
 554                             		.section	.gcc_except_table._ZN5FcLed11getInstanceEv,"awG",@progbits,_ZN5FcLed11getInstanceEv,comda
 555                             	.LLSDA764:
 556 0000 FF                      		.byte	0xff
 557 0001 FF                      		.byte	0xff
 558 0002 01                      		.byte	0x1
 559 0003 02                      		.uleb128 .LLSDACSE764-.LLSDACSB764
 560                             	.LLSDACSB764:
 561 0004 00                      		.uleb128 0
 562 0005 00                      		.uleb128 0
 563                             	.LLSDACSE764:
 564                             		.section	.text._ZN5FcLed11getInstanceEv,"axG",@progbits,_ZN5FcLed11getInstanceEv,comdat
 566 00cb 77 10 01 00 00          		.section	.rodata.str1.1,"aMS",@progbits,1
 567                             	.LC0:
 568 0000 2D 2D 2D 2D 2D 2D 2D E5 		.string	"-------\345\220\204\347\250\256\343\203\232\343\203\252\343\203\225\343\202\247\343\203\2
 568      90 84 E7 A8 AE E3 83 9A 
 568      E3 83 AA E3 83 95 E3 82 
 568      A7 E3 83 A9 E3 83 AB E5 
 568      88 9D E6 9C 9F E5 8C 96 
 569                             		.section P,"ax"
 570                             		.global	__Z13periperalInitv
 572                             	__Z13periperalInitv:
 573                             	.LFB1468:
  35:../src/main.cpp **** 
  36:../src/main.cpp **** #endif 
  37:../src/main.cpp **** 
  38:../src/main.cpp **** #include <stdint.h>
  39:../src/main.cpp **** 
  40:../src/main.cpp **** #include <array>
  41:../src/main.cpp **** #include "clock.h"
  42:../src/main.cpp **** #include "uart.hpp"
  43:../src/main.cpp **** #include "gpio.h"
  44:../src/main.cpp **** #include "timeInterrupt.hpp"
  45:../src/main.cpp **** #include "spi.h"
  46:../src/main.cpp **** #include "timer.h"
  47:../src/main.cpp **** #include "ad.h"
  48:../src/main.cpp **** #include "pwm.h"
  49:../src/main.cpp **** #include "phaseCounting.h"
  50:../src/main.cpp **** #include <imu.hpp>
  51:../src/main.cpp **** #include "da.h"
  52:../src/main.cpp **** #include "myUtil.h"
  53:../src/main.cpp **** #include "sound.h"
  54:../src/main.cpp **** #include "tactsw.h"
  55:../src/main.cpp **** #include "fcled.h"
  56:../src/main.cpp **** #include "mode.h"
  57:../src/main.cpp **** 
  58:../src/main.cpp **** #include "maze.h"
  59:../src/main.cpp **** #include "mouse.h"
  60:../src/main.cpp **** #include "wallsensor.hpp"
  61:../src/main.cpp **** #include "gamepad.h"
  62:../src/main.cpp **** 
  63:../src/main.cpp **** #include "moveEvent.h"
  64:../src/main.cpp **** 
  65:../src/main.cpp **** using namespace std;
  66:../src/main.cpp **** 
  67:../src/main.cpp **** //プロトタイプ宣言
  68:../src/main.cpp **** void periperalInit();
  69:../src/main.cpp **** void startUpInit();
  70:../src/main.cpp **** uint16_t temp_V=0;
  71:../src/main.cpp **** //-------------タイマ割り込み関数---------------//
  72:../src/main.cpp **** extern "C" void timeInterrupt(void);
  73:../src/main.cpp **** 
  74:../src/main.cpp **** //250usec毎に呼ばれる
  75:../src/main.cpp **** void timeInterrupt(void) {
  76:../src/main.cpp ****     //http://japan.renesasrulz.com/cafe_rene/f/69/t/1515.aspx 多重割り込み　資料
  77:../src/main.cpp ****     __builtin_rx_setpsw('I');
  78:../src/main.cpp **** 
  79:../src/main.cpp ****     static uint64_t countIntNum = 0;
  80:../src/main.cpp **** 
  81:../src/main.cpp ****     //--------------------------------------//
  82:../src/main.cpp ****     MPU9250 &imu1 = MPU9250::getInstance();
  83:../src/main.cpp ****     Icm20608G &imu2 = Icm20608G::getInstance();
  84:../src/main.cpp ****     TactSw &tsw = TactSw::getInstance();
  85:../src/main.cpp ****     FcLed &fcled = FcLed::getInstance();
  86:../src/main.cpp ****     WallSensor &wallSen = WallSensor::getInstance();
  87:../src/main.cpp ****     Gamepad &gamepad = Gamepad::getInstance();
  88:../src/main.cpp ****     EventList &events = EventList::getInstance();
  89:../src/main.cpp ****     UMouse &mouse = UMouse::getInstance();
  90:../src/main.cpp **** 
  91:../src/main.cpp ****     //UARTの送受信処理
  92:../src/main.cpp ****     if (countIntNum % 7 == 0) {
  93:../src/main.cpp ****         sendDatafromTransBuff();
  94:../src/main.cpp ****     }
  95:../src/main.cpp ****     retrieveDatafromFRDR();
  96:../src/main.cpp **** 
  97:../src/main.cpp ****     //30msec毎の処理
  98:../src/main.cpp ****     if (countIntNum % 120 == 0) {
  99:../src/main.cpp ****         sendPeriodicMsg();
 100:../src/main.cpp ****     }
 101:../src/main.cpp ****     //1msec毎の処理
 102:../src/main.cpp ****     if(countIntNum % 4 == 0){
 103:../src/main.cpp ****         if(getElapsedMsec()>5000){
 104:../src/main.cpp ****             imu1.update();
 105:../src/main.cpp ****             imu2.update();
 106:../src/main.cpp ****         }
 107:../src/main.cpp ****     }
 108:../src/main.cpp ****     if (countIntNum % 4 == 1){
 109:../src/main.cpp **** 
 110:../src/main.cpp ****         tsw.update();
 111:../src/main.cpp ****         fcled.update();
 112:../src/main.cpp ****         gamepad.update();
 113:../src/main.cpp ****         events.update();
 114:../src/main.cpp ****     }
 115:../src/main.cpp ****     if (countIntNum % 4 == 2){
 116:../src/main.cpp ****         mouse.update();
 117:../src/main.cpp ****     }
 118:../src/main.cpp **** 
 119:../src/main.cpp **** 
 120:../src/main.cpp ****     float vol_f = 15.1 / 5.1 * (S12AD.ADDR0) * 3.3 / 4096;
 121:../src/main.cpp ****     if (countIntNum % 1000 == 0){
 122:../src/main.cpp ****         if(vol_f < 6.8)famima();
 123:../src/main.cpp ****     }
 124:../src/main.cpp **** 
 125:../src/main.cpp ****     //リセットコマンドの監視
 126:../src/main.cpp ****     if(gamepad.BACK >0 &&
 127:../src/main.cpp ****        gamepad.LB >0 &&
 128:../src/main.cpp ****        gamepad.LT >0 ){
 129:../src/main.cpp ****        SYSTEM.PRCR.WORD = 0xA502;
 130:../src/main.cpp ****        SYSTEM.SWRR = 0xA501;
 131:../src/main.cpp ****     }
 132:../src/main.cpp **** 
 133:../src/main.cpp ****     //ブートモードへの変更
 134:../src/main.cpp ****     if(gamepad.RB > 0 &&
 135:../src/main.cpp ****        gamepad.RT > 0 &&
 136:../src/main.cpp ****        gamepad.START > 0){
 137:../src/main.cpp ****         PORTD.PODR.BIT.B7 = 0; //PICの入力ピンをローにする
 138:../src/main.cpp ****     }
 139:../src/main.cpp **** 
 140:../src/main.cpp **** 
 141:../src/main.cpp **** 
 142:../src/main.cpp ****     //壁センサの更新処理
 143:../src/main.cpp ****     switch(countIntNum % 4){
 144:../src/main.cpp ****         case 0:
 145:../src/main.cpp ****             wallSen.updateAllOffVal();
 146:../src/main.cpp ****             wallSen.turnOnLeftLed();
 147:../src/main.cpp ****             break;
 148:../src/main.cpp ****         case 1:
 149:../src/main.cpp ****             wallSen.updateLeftOnVal();
 150:../src/main.cpp ****             wallSen.turnOffAllLed();
 151:../src/main.cpp ****             wallSen.turnOnRightLed();
 152:../src/main.cpp ****             break;
 153:../src/main.cpp ****         case 2:
 154:../src/main.cpp ****             wallSen.updateRightOnVal();
 155:../src/main.cpp ****             wallSen.turnOffAllLed();
 156:../src/main.cpp ****             wallSen.turnOnAheadLed();
 157:../src/main.cpp ****             break;
 158:../src/main.cpp ****         case 3:
 159:../src/main.cpp ****             wallSen.updateAheadOnVal();
 160:../src/main.cpp ****             wallSen.turnOffAllLed();
 161:../src/main.cpp ****             wallSen.modulateVal();
 162:../src/main.cpp ****             break;
 163:../src/main.cpp ****     }
 164:../src/main.cpp **** 
 165:../src/main.cpp ****     //毎回行う処理
 166:../src/main.cpp ****     soundUpdate();
 167:../src/main.cpp ****     startAD_AN000(); //電源
 168:../src/main.cpp **** 
 169:../src/main.cpp ****     countIntNum++;
 170:../src/main.cpp ****     endTimeuCountIntCMT0();
 171:../src/main.cpp **** 
 172:../src/main.cpp **** }
 173:../src/main.cpp **** 
 174:../src/main.cpp **** //-------------メイン関数---------------//
 175:../src/main.cpp **** int main() {
 176:../src/main.cpp ****     periperalInit();
 177:../src/main.cpp ****     startUpInit();
 178:../src/main.cpp **** 
 179:../src/main.cpp ****     float vol_f = 15.1 / 5.1 * (S12AD.ADDR0) * 3.3 / 4096;
 180:../src/main.cpp ****     if(vol_f < 7.0)famima();
 181:../src/main.cpp **** 
 182:../src/main.cpp ****     MPU9250& imu1 = MPU9250::getInstance();
 183:../src/main.cpp ****     Icm20608G& imu2 = Icm20608G::getInstance();
 184:../src/main.cpp ****     FcLed& fcled = FcLed::getInstance();
 185:../src/main.cpp ****     myprintf3_Dbg("start: %d \n", CMTW0.CMWCNT);
 186:../src/main.cpp **** 
 187:../src/main.cpp ****     //addBgmList(otenba);
 188:../src/main.cpp ****     //addBgmList(robotol);
 189:../src/main.cpp ****     //addBgmList(gamecube);
 190:../src/main.cpp ****     //addBgmList(togetoge);
 191:../src/main.cpp ****     //addBgmList(owen);
 192:../src/main.cpp ****     //addBgmList(road27);
 193:../src/main.cpp **** 
 194:../src/main.cpp ****     //addBgmList(sky_high);
 195:../src/main.cpp **** 
 196:../src/main.cpp ****     myprintf3_Dbg("end %d  \n", CMTW0.CMWCNT);
 197:../src/main.cpp ****     //fcled.R.flash(100,100);
 198:../src/main.cpp ****     //waitmsec(5000);
 199:../src/main.cpp ****     //fcled.G.flash(1000,500);
 200:../src/main.cpp ****     //bpmTest(2);
 201:../src/main.cpp ****     //waitmsec(5000);
 202:../src/main.cpp ****     //fcled.B.flash(100,200);
 203:../src/main.cpp ****     //bpmTest(2);
 204:../src/main.cpp ****     //getPointerOfPeriodicMsg()[75] = 111;
 205:../src/main.cpp ****     //getPointerOfPeriodicMsg()[78] = 0xff;
 206:../src/main.cpp ****     getPointerOfPeriodicMsg()[155] = 0xff;
 207:../src/main.cpp ****     getPointerOfPeriodicMsg()[156] = 0xff;
 208:../src/main.cpp ****     //uint8_t *periMes = getPointerOfPeriodicMsg();
 209:../src/main.cpp **** 
 210:../src/main.cpp ****     UMouse  &mouse   = UMouse::getInstance();
 211:../src/main.cpp **** 
 212:../src/main.cpp ****      while(1){
 213:../src/main.cpp ****          myprintf3("entry point \n");
 214:../src/main.cpp ****          ///////////////////////////////////////
 215:../src/main.cpp ****          MPU9250::getInstance().calibOmegaOffset(200);
 216:../src/main.cpp ****          MPU9250::getInstance().calibAccOffset(200);
 217:../src/main.cpp **** 
 218:../src/main.cpp ****          modeSelect();
 219:../src/main.cpp ****      };
 220:../src/main.cpp **** 
 221:../src/main.cpp ****     return 0;
 222:../src/main.cpp **** }
 223:../src/main.cpp **** 
 224:../src/main.cpp **** //各ペリフェラルの初期化
 225:../src/main.cpp **** void periperalInit() {
 574                             		.loc 10 225 0
 575 0030 60 40                   		sub	#4, r0
 576                             	.LCFI7:
 226:../src/main.cpp ****     //クロック
 227:../src/main.cpp ****     initClock();
 577                             		.loc 10 227 0
 578 0032 05 00 00 00             		bsr	__Z9initClockv
 579                             	.LVL34:
 228:../src/main.cpp ****     //IOピン
 229:../src/main.cpp ****     initGPIO();
 580                             		.loc 10 229 0
 581 0036 05 00 00 00             		bsr	__Z8initGPIOv
 582                             	.LVL35:
 230:../src/main.cpp ****     //UART
 231:../src/main.cpp ****     initSCI1();
 583                             		.loc 10 231 0
 584 003a 05 00 00 00             		bsr	__Z8initSCI1v
 585                             	.LVL36:
 232:../src/main.cpp ****     initSCI2();
 586                             		.loc 10 232 0
 587 003e 05 00 00 00             		bsr	__Z8initSCI2v
 588                             	.LVL37:
 233:../src/main.cpp ****     initSCIFA9();
 589                             		.loc 10 233 0
 590 0042 05 00 00 00             		bsr	__Z10initSCIFA9v
 591                             	.LVL38:
 234:../src/main.cpp **** 
 235:../src/main.cpp ****     //割り込み関数
 236:../src/main.cpp ****     initCMT0();
 592                             		.loc 10 236 0
 593 0046 05 00 00 00             		bsr	__Z8initCMT0v
 594                             	.LVL39:
 237:../src/main.cpp ****     initCMT1();
 595                             		.loc 10 237 0
 596 004a 05 00 00 00             		bsr	__Z8initCMT1v
 597                             	.LVL40:
 238:../src/main.cpp **** 
 239:../src/main.cpp ****     //SPI
 240:../src/main.cpp ****     initRSPI0();
 598                             		.loc 10 240 0
 599 004e 05 00 00 00             		bsr	__Z9initRSPI0v
 600                             	.LVL41:
 241:../src/main.cpp ****     initRSPI1();
 601                             		.loc 10 241 0
 602 0052 05 00 00 00             		bsr	__Z9initRSPI1v
 603                             	.LVL42:
 242:../src/main.cpp **** 
 243:../src/main.cpp ****     //時間測定
 244:../src/main.cpp ****     initTPU0();
 604                             		.loc 10 244 0
 605 0056 05 00 00 00             		bsr	__Z8initTPU0v
 606                             	.LVL43:
 245:../src/main.cpp ****     initCMTW0();
 607                             		.loc 10 245 0
 608 005a 05 00 00 00             		bsr	__Z9initCMTW0v
 609                             	.LVL44:
 246:../src/main.cpp ****     initCMTW1();
 610                             		.loc 10 246 0
 611 005e 05 00 00 00             		bsr	__Z9initCMTW1v
 612                             	.LVL45:
 247:../src/main.cpp **** 
 248:../src/main.cpp ****     //AD
 249:../src/main.cpp ****     initAD();
 613                             		.loc 10 249 0
 614 0062 05 00 00 00             		bsr	__Z6initADv
 615                             	.LVL46:
 250:../src/main.cpp **** 
 251:../src/main.cpp ****     //位相係数
 252:../src/main.cpp ****     initMTU1();
 616                             		.loc 10 252 0
 617 0066 05 00 00 00             		bsr	__Z8initMTU1v
 618                             	.LVL47:
 253:../src/main.cpp ****     initMTU2();
 619                             		.loc 10 253 0
 620 006a 05 00 00 00             		bsr	__Z8initMTU2v
 621                             	.LVL48:
 254:../src/main.cpp **** 
 255:../src/main.cpp ****     //PWM
 256:../src/main.cpp ****     initMTU3();
 622                             		.loc 10 256 0
 623 006e 05 00 00 00             		bsr	__Z8initMTU3v
 624                             	.LVL49:
 257:../src/main.cpp ****     initMTU4();
 625                             		.loc 10 257 0
 626 0072 05 00 00 00             		bsr	__Z8initMTU4v
 627                             	.LVL50:
 258:../src/main.cpp **** 
 259:../src/main.cpp ****     //DA
 260:../src/main.cpp ****     initDA();
 628                             		.loc 10 260 0
 629 0076 05 00 00 00             		bsr	__Z6initDAv
 630                             	.LVL51:
 261:../src/main.cpp ****     myprintf3("-------各種ペリフェラル初期化完了-------\n");
 631                             		.loc 10 261 0
 632 007a F8 02 00 00 00 00       		mov.L	#.LC0, [r0]
 633 0080 05 00 00 00             		bsr	__Z9myprintf3PKcz
 634                             	.LVL52:
 262:../src/main.cpp **** 
 263:../src/main.cpp **** };
 635                             		.loc 10 263 0
 636 0084 67 01                   		rtsd	#4
 637                             	.LFE1468:
 639                             		.section	.rodata.str1.1
 640                             	.LC1:
 641 0037 2D 2D 2D 2D 2D 2D 2D 43 		.string	"-------CMT0\345\211\262\343\202\212\350\276\274\343\201\277\351\226\213\345\247\213------
 641      4D 54 30 E5 89 B2 E3 82 
 641      8A E8 BE BC E3 81 BF E9 
 641      96 8B E5 A7 8B 2D 2D 2D 
 641      2D 2D 2D 2D 0A 00 
 642                             	.LC2:
 643 005d 3D 3D 3D 66 69 6E 69 73 		.string	"===finish init====\n"
 643      68 20 69 6E 69 74 3D 3D 
 643      3D 3D 0A 00 
 644                             	.LC3:
 645 0071 2D 2D 2D 2D 2D 2D 2D 43 		.string	"-------CMT1\345\211\262\343\202\212\350\276\274\343\201\277\351\226\213\345\247\213------
 645      4D 54 31 E5 89 B2 E3 82 
 645      8A E8 BE BC E3 81 BF E9 
 645      96 8B E5 A7 8B 2D 2D 2D 
 645      2D 2D 2D 2D 0A 00 
 646                             	.LC4:
 647 0097 43 6F 6D 70 69 6C 65 20 		.string	"Compile Date\n %s\n"
 647      44 61 74 65 0A 20 25 73 
 647      0A 00 
 648                             	.LC5:
 649 00a9 4A 75 6C 20 32 34 20 32 		.string	"Jul 24 2017"
 649      30 31 37 00 
 650                             	.LC6:
 651 00b5 43 6F 6D 70 69 6C 65 20 		.string	"Compile HASH: %d\n"
 651      48 41 53 48 3A 20 25 64 
 651      0A 00 
 652                             	.LC7:
 653 00c7 43 6F 6D 70 69 6C 65 20 		.string	"Compile TIME: %s\n"
 653      54 49 4D 45 3A 20 25 73 
 653      0A 00 
 654                             	.LC8:
 655 00d9 30 30 3A 30 32 3A 35 36 		.string	"00:02:56"
 655      00 
 656                             	.LC9:
 657 00e2 43 6F 6D 70 69 6C 65 20 		.string	"Compile FILE: %s\n"
 657      46 49 4C 45 3A 20 25 73 
 657      0A 00 
 658                             	.LC10:
 659 00f4 2E 2E 2F 73 72 63 2F 6D 		.string	"../src/main.cpp"
 659      61 69 6E 2E 63 70 70 00 
 660                             	.LC11:
 661 0104 2D 2D 2D 2D 2D 2D 2D 2D 		.string	"---------------------------\n"
 661      2D 2D 2D 2D 2D 2D 2D 2D 
 661      2D 2D 2D 2D 2D 2D 2D 2D 
 661      2D 2D 2D 0A 00 
 662                             		.section P,"ax"
 663                             		.global	__Z11startUpInitv
 665                             	__Z11startUpInitv:
 666                             	.LFB1469:
 264:../src/main.cpp **** 
 265:../src/main.cpp **** //起動時の処理
 266:../src/main.cpp **** void startUpInit() {
 667                             		.loc 10 266 0
 668 0086 6E 7B                   		pushm	r7-r11
 669                             	.LCFI8:
 670 0088 60 80                   		sub	#8, r0
 671                             	.LCFI9:
 672                             	.LBB880:
 267:../src/main.cpp **** 
 268:../src/main.cpp **** 
 269:../src/main.cpp ****     setDutyMTU3(0.0);
 673                             		.loc 10 269 0
 674 008a 66 01                   		mov.L	#0x0, r1
 675 008c 05 00 00 00             		bsr	__Z11setDutyMTU3f
 676                             	.LVL53:
 270:../src/main.cpp ****     setDutyMTU4(0.0);
 677                             		.loc 10 270 0
 678 0090 66 01                   		mov.L	#0x0, r1
 679 0092 05 00 00 00             		bsr	__Z11setDutyMTU4f
 680                             	.LVL54:
 271:../src/main.cpp **** 
 272:../src/main.cpp ****     setPriorityCMT0(12);
 681                             		.loc 10 272 0
 682 0096 66 C1                   		mov	#12, r1
 683 0098 05 00 00 00             		bsr	__Z15setPriorityCMT0h
 684                             	.LVL55:
 273:../src/main.cpp ****     setPriorityCMT1(15);
 685                             		.loc 10 273 0
 686 009c 66 F1                   		mov	#15, r1
 687 009e 05 00 00 00             		bsr	__Z15setPriorityCMT1h
 688                             	.LVL56:
 689                             	.LBB881:
 690                             	.LBB882:
  70:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\imu.hpp **** 		return instance;
 691                             		.loc 1 70 0
 692 00a2 FB 72 00 00 00 00       		mov.L	#__ZGVZN7MPU925011getInstanceEvE8instance, r7
 693                             	.LBE882:
 694                             	.LBE881:
 274:../src/main.cpp ****     startCMT0();
 695                             		.loc 10 274 0
 696 00a8 05 00 00 00             		bsr	__Z9startCMT0v
 697                             	.LVL57:
 275:../src/main.cpp ****     myprintf3("-------CMT0割り込み開始-------\n");
 698                             		.loc 10 275 0
 699 00ac F8 02 37 00 00 00       		mov.L	#.LC1, [r0]
 700 00b2 05 00 00 00             		bsr	__Z9myprintf3PKcz
 701                             	.LVL58:
 702                             	.LBB887:
 703                             	.LBB883:
  70:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\imu.hpp **** 		return instance;
 704                             		.loc 1 70 0
 705 00b6 58 7A                   		movu.B	[r7], r10
 706 00b8 61 0A                   		cmp	#0, r10
 707 00ba 3A 4A 01                		beq	.L86
 708 00bd FC 13 00                		.balign 8,3,5
 709                             	.L62:
 710                             	.LBE883:
 711                             	.LBE887:
 712                             	.LBB888:
 713                             	.LBB889:
  26:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\imu.hpp **** 		return instance;
 714                             		.loc 1 26 0
 715 00c0 FB 72 00 00 00 00       		mov.L	#__ZGVZN9Icm20608G11getInstanceEvE8instance, r7
 716 00c6 58 7A                   		movu.B	[r7], r10
 717 00c8 61 0A                   		cmp	#0, r10
 718 00ca 3A 6E 01                		beq	.L87
 719 00cd FC 13 00                		.balign 8,3,5
 720                             	.L65:
 721                             	.LBE889:
 722                             	.LBE888:
 276:../src/main.cpp **** 
 277:../src/main.cpp ****     MPU9250& imu1 = MPU9250::getInstance();
 278:../src/main.cpp ****     Icm20608G& imu2 = Icm20608G::getInstance();
 279:../src/main.cpp **** 
 280:../src/main.cpp ****     imu1.init();
 723                             		.loc 10 280 0
 724 00d0 FB 12 00 00 00 00       		mov.L	#__ZZN7MPU925011getInstanceEvE8instance, r1
 725 00d6 05 00 00 00             		bsr	__ZN7MPU92504initEv
 726                             	.LVL59:
 281:../src/main.cpp ****     imu2.init();
 727                             		.loc 10 281 0
 728 00da FB 12 00 00 00 00       		mov.L	#__ZZN9Icm20608G11getInstanceEvE8instance, r1
 729 00e0 05 00 00 00             		bsr	__ZN9Icm20608G4initEv
 730                             	.LVL60:
 282:../src/main.cpp **** 
 283:../src/main.cpp ****     //sound
 284:../src/main.cpp **** 
 285:../src/main.cpp ****     startCMT1();
 731                             		.loc 10 285 0
 732 00e4 05 00 00 00             		bsr	__Z9startCMT1v
 733                             	.LVL61:
 286:../src/main.cpp ****     myprintf3("-------CMT1割り込み開始-------\n");
 734                             		.loc 10 286 0
 735 00e8 F8 02 71 00 00 00       		mov.L	#.LC3, [r0]
 736 00ee 05 00 00 00             		bsr	__Z9myprintf3PKcz
 737                             	.LVL62:
 287:../src/main.cpp **** 
 288:../src/main.cpp ****     /////////////コンパイル時固有文字列/////////
 289:../src/main.cpp ****     myprintf3("Compile Date\n %s\n", __DATE__);
 738                             		.loc 10 289 0
 739 00f2 F8 02 97 00 00 00       		mov.L	#.LC4, [r0]
 740 00f8 F9 02 01 A9 00 00 00    		mov.L	#.LC5, 4[r0]
 741 00ff 05 00 00 00             		bsr	__Z9myprintf3PKcz
 742                             	.LVL63:
 290:../src/main.cpp ****     uint16_t compile_hash = 0;
 291:../src/main.cpp ****     for (int i = 0; i < sizeof(__TIME__); i++) {
 292:../src/main.cpp ****         compile_hash += __TIME__[i];
 293:../src/main.cpp ****     }
 294:../src/main.cpp **** 
 295:../src/main.cpp ****     myprintf3("Compile HASH: %d\n", compile_hash);
 743                             		.loc 10 295 0
 744 0103 F8 02 B5 00 00 00       		mov.L	#.LC6, [r0]
 745 0109 F9 0A 01 A1 01          		mov.L	#0x1a1, 4[r0]
 746 010e 05 00 00 00             		bsr	__Z9myprintf3PKcz
 747                             	.LVL64:
 296:../src/main.cpp ****     myprintf3("Compile TIME: %s\n", __TIME__);
 748                             		.loc 10 296 0
 749 0112 F8 02 C7 00 00 00       		mov.L	#.LC7, [r0]
 750 0118 F9 02 01 D9 00 00 00    		mov.L	#.LC8, 4[r0]
 751 011f 05 00 00 00             		bsr	__Z9myprintf3PKcz
 752                             	.LVL65:
 297:../src/main.cpp ****     myprintf3("Compile FILE: %s\n", __FILE__);
 753                             		.loc 10 297 0
 754 0123 F8 02 E2 00 00 00       		mov.L	#.LC9, [r0]
 755 0129 F9 02 01 F4 00 00 00    		mov.L	#.LC10, 4[r0]
 756 0130 05 00 00 00             		bsr	__Z9myprintf3PKcz
 757                             	.LVL66:
 298:../src/main.cpp ****     myprintf3("---------------------------\n");
 758                             		.loc 10 298 0
 759 0134 F8 02 04 01 00 00       		mov.L	#.LC11, [r0]
 760 013a 05 00 00 00             		bsr	__Z9myprintf3PKcz
 761                             	.LVL67:
 299:../src/main.cpp ****     GB();
 762                             		.loc 10 299 0
 763 013e 05 00 00 00             		bsr	__Z2GBv
 764                             	.LVL68:
 300:../src/main.cpp ****     waitmsec(1800);
 765                             		.loc 10 300 0
 766 0142 FB 1A 08 07             		mov.L	#0x708, r1
 767 0146 05 00 00 00             		bsr	__Z8waitmsecm
 768                             	.LVL69:
 301:../src/main.cpp ****     randomNote(compile_hash);
 769                             		.loc 10 301 0
 770 014a FB 1A A1 01             		mov	#0x1a1, r1
 771 014e 05 00 00 00             		bsr	__Z10randomNotet
 772                             	.LVL70:
 302:../src/main.cpp ****     waitmsec(400);
 773                             		.loc 10 302 0
 774 0152 FB 1A 90 01             		mov.L	#0x190, r1
 775 0156 05 00 00 00             		bsr	__Z8waitmsecm
 776                             	.LVL71:
 303:../src/main.cpp ****     /////////////電池電圧警告////////////////
 304:../src/main.cpp ****     float vol_f = 15.1 / 5.1 * (S12AD.ADDR0) * 3.3 / 4096;
 777                             		.loc 10 304 0
 778 015a FB 7E 00 90 08          		mov.L	#0x89000, r7
 779 015f DD 7E 10                		mov.W	32[r7], r14
 780                             	.LBB893:
 305:../src/main.cpp ****     uint8_t num_1V = uint8_t(vol_f);
 306:../src/main.cpp ****     uint8_t num_0_1V = uint8_t((vol_f - float(num_1V)) * 10.0);
 307:../src/main.cpp ****     for (int i = 0; i < num_1V; i++) {
 781                             		.loc 10 307 0
 782 0162 66 07                   		mov.L	#0, r7
 783                             	.LBE893:
 304:../src/main.cpp ****     uint8_t num_1V = uint8_t(vol_f);
 784                             		.loc 10 304 0
 785 0164 5F EE                   		movu.W	r14, r14
 786 0166 FC 47 EE                		itof	r14, r14
 787 0169 FD 72 3E 7E 7D 3D 40    		fmul	#0x403d7d7e, r14
 788 0170 FD 72 3E 33 33 53 40    		fmul	#0x40533333, r14
 789 0177 FD 72 3E 00 00 80 39    		fmul	#0x39800000, r14
 790                             	.LVL72:
 305:../src/main.cpp ****     uint8_t num_1V = uint8_t(vol_f);
 791                             		.loc 10 305 0
 792 017e FC A7 EA                		ftou	r14, r10
 793                             	.LVL73:
 306:../src/main.cpp ****     for (int i = 0; i < num_1V; i++) {
 794                             		.loc 10 306 0
 795 0181 5B AA                   		movu.B	r10, r10
 796                             	.LVL74:
 797 0183 FC 57 AB                		utof	r10, r11
 798 0186 FC 83 BE                		fsub	r11, r14
 799                             	.LVL75:
 800 0189 FD 72 3E 00 00 20 41    		fmul	#0x41200000, r14
 801 0190 FC A7 EB                		ftou	r14, r11
 802                             	.LVL76:
 803                             	.LBB894:
 804                             		.loc 10 307 0
 805 0193 47 7A                   		cmp	r7, r10
 806 0195 21 0E                   		bne	.L83
 807 0197 2E 24                   		bra	.L70
 808                             	.LVL77:
 809                             	.L68:
 308:../src/main.cpp ****         SEA();
 309:../src/main.cpp ****         if (i == 4)
 310:../src/main.cpp ****             waitmsec(250);
 311:../src/main.cpp ****         else
 312:../src/main.cpp ****             waitmsec(125);
 810                             		.loc 10 312 0
 811 0199 05 00 00 00             		bsr	__Z8waitmsecm
 812                             	.LVL78:
 307:../src/main.cpp ****         SEA();
 813                             		.loc 10 307 0
 814 019d 62 17                   		add	#1, r7
 815                             	.LVL79:
 816 019f 47 A7                   		cmp	r10, r7
 817 01a1 28 1A                   		bge	.L70
 818                             	.LVL80:
 819                             		.balign 8,3,3
 820                             	.L83:
 308:../src/main.cpp ****         SEA();
 821                             		.loc 10 308 0
 822 01a3 05 00 00 00             		bsr	__Z3SEAv
 823                             	.LVL81:
 824                             		.loc 10 312 0
 825 01a7 75 41 7D                		mov.L	#0x7d, r1
 309:../src/main.cpp ****             waitmsec(250);
 826                             		.loc 10 309 0
 827 01aa 61 47                   		cmp	#4, r7
 828 01ac 21 ED                   		bne	.L68
 310:../src/main.cpp ****         else
 829                             		.loc 10 310 0
 830 01ae 75 41 FA                		mov.L	#0xfa, r1
 831 01b1 05 00 00 00             		bsr	__Z8waitmsecm
 832                             	.LVL82:
 307:../src/main.cpp ****         SEA();
 833                             		.loc 10 307 0
 834 01b5 62 17                   		add	#1, r7
 835                             	.LVL83:
 836 01b7 47 A7                   		cmp	r10, r7
 837 01b9 29 EA                   		blt	.L83
 838                             	.LVL84:
 839                             		.balign 8,3,2
 840                             	.L70:
 841                             	.LBE894:
 313:../src/main.cpp ****     }
 314:../src/main.cpp ****     waitmsec(125);
 842                             		.loc 10 314 0
 843 01bb 75 41 7D                		mov.L	#0x7d, r1
 844                             	.LBB895:
 315:../src/main.cpp ****     for (int i = 0; i < num_0_1V; i++) {
 845                             		.loc 10 315 0
 846 01be 5B BA                   		movu.B	r11, r10
 847                             	.LBE895:
 314:../src/main.cpp ****     for (int i = 0; i < num_0_1V; i++) {
 848                             		.loc 10 314 0
 849 01c0 05 00 00 00             		bsr	__Z8waitmsecm
 850                             	.LVL85:
 851                             	.LBB896:
 852                             		.loc 10 315 0
 853 01c4 66 07                   		mov.L	#0, r7
 854 01c6 47 7A                   		cmp	r7, r10
 855 01c8 21 10                   		bne	.L82
 856 01ca 2E 26                   		bra	.L67
 857                             	.LVL86:
 858                             	.L72:
 316:../src/main.cpp ****         SEB();
 317:../src/main.cpp ****         if (i == 4)
 318:../src/main.cpp ****             waitmsec(250);
 319:../src/main.cpp ****         else
 320:../src/main.cpp ****             waitmsec(125);
 859                             		.loc 10 320 0
 860 01cc 05 00 00 00             		bsr	__Z8waitmsecm
 861                             	.LVL87:
 315:../src/main.cpp ****         SEB();
 862                             		.loc 10 315 0
 863 01d0 62 17                   		add	#1, r7
 864                             	.LVL88:
 865 01d2 47 A7                   		cmp	r10, r7
 866 01d4 28 1C                   		bge	.L67
 867                             	.LVL89:
 868 01d6 EF 00                   		.balign 8,3,3
 869                             	.L82:
 316:../src/main.cpp ****         SEB();
 870                             		.loc 10 316 0
 871 01d8 05 00 00 00             		bsr	__Z3SEBv
 872                             	.LVL90:
 873                             		.loc 10 320 0
 874 01dc 75 41 7D                		mov.L	#0x7d, r1
 317:../src/main.cpp ****             waitmsec(250);
 875                             		.loc 10 317 0
 876 01df 61 47                   		cmp	#4, r7
 877 01e1 21 EB                   		bne	.L72
 318:../src/main.cpp ****         else
 878                             		.loc 10 318 0
 879 01e3 75 41 FA                		mov.L	#0xfa, r1
 880 01e6 05 00 00 00             		bsr	__Z8waitmsecm
 881                             	.LVL91:
 315:../src/main.cpp ****         SEB();
 882                             		.loc 10 315 0
 883 01ea 62 17                   		add	#1, r7
 884                             	.LVL92:
 885 01ec 47 A7                   		cmp	r10, r7
 886 01ee 29 EA                   		blt	.L82
 887                             	.LVL93:
 888                             		.balign 8,3,2
 889                             	.L67:
 890                             	.LBE896:
 321:../src/main.cpp ****     }
 322:../src/main.cpp ****     waitmsec(125);
 891                             		.loc 10 322 0
 892 01f0 75 41 7D                		mov.L	#0x7d, r1
 893 01f3 05 00 00 00             		bsr	__Z8waitmsecm
 894                             	.LVL94:
 323:../src/main.cpp **** 
 324:../src/main.cpp ****     myprintf3("===finish init====\n");
 895                             		.loc 10 324 0
 896 01f7 F8 02 5D 00 00 00       		mov.L	#.LC2, [r0]
 897 01fd 05 00 00 00             		bsr	__Z9myprintf3PKcz
 898                             	.LVL95:
 899                             	.LBE880:
 325:../src/main.cpp **** 
 326:../src/main.cpp **** };
 900                             		.loc 10 326 0
 901 0201 3F 7B 07                		rtsd	#28, r7-r11
 902                             	.LVL96:
 903                             	.L86:
 904                             	.LBB899:
 905                             	.LBB897:
 906                             	.LBB884:
  70:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\imu.hpp **** 		return instance;
 907                             		.loc 1 70 0
 908 0204 EF 71                   		mov.L	r7, r1
 909 0206 05 00 00 00             		bsr	___cxa_guard_acquire
 910                             	.LVL97:
 911 020a 61 01                   		cmp	#0, r1
 912 020c 3A B4 FE                		beq	.L62
 913                             	.LVL98:
 914                             	.LBE884:
 915                             	.LBB885:
 916                             	.LBB886:
 917 020f EF 71                   		mov.L	r7, r1
 918 0211 05 00 00 00             		bsr	___cxa_guard_release
 919                             	.LVL99:
 920 0215 FB 12 00 00 00 00       		mov.L	#__ZN7MPU9250D1Ev, r1
 921 021b FB 22 00 00 00 00       		mov.L	#__ZZN7MPU925011getInstanceEvE8instance, r2
 922 0221 FB 32 00 00 00 00       		mov.L	#___dso_handle, r3
 923 0227 05 00 00 00             		bsr	___cxa_atexit
 924                             	.LVL100:
 925                             	.LBE886:
 926                             	.LBE885:
 927                             	.LBE897:
 928                             	.LBB898:
 929                             	.LBB890:
  26:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\imu.hpp **** 		return instance;
 930                             		.loc 1 26 0
 931 022b FB 72 00 00 00 00       		mov.L	#__ZGVZN9Icm20608G11getInstanceEvE8instance, r7
 932 0231 58 7A                   		movu.B	[r7], r10
 933 0233 61 0A                   		cmp	#0, r10
 934 0235 3B 9B FE                		bne	.L65
 935                             	.LVL101:
 936                             		.balign 8,3,1
 937                             	.L87:
 938 0238 EF 71                   		mov.L	r7, r1
 939 023a 05 00 00 00             		bsr	___cxa_guard_acquire
 940                             	.LVL102:
 941 023e 61 01                   		cmp	#0, r1
 942 0240 3A 90 FE                		beq	.L65
 943                             	.LVL103:
 944                             	.LBE890:
 945                             	.LBB891:
 946                             	.LBB892:
 947 0243 EF 71                   		mov.L	r7, r1
 948 0245 05 00 00 00             		bsr	___cxa_guard_release
 949                             	.LVL104:
 950 0249 FB 22 00 00 00 00       		mov.L	#__ZZN9Icm20608G11getInstanceEvE8instance, r2
 951 024f FB 32 00 00 00 00       		mov.L	#___dso_handle, r3
 952 0255 FB 12 00 00 00 00       		mov.L	#__ZN9Icm20608GD1Ev, r1
 953 025b 05 00 00 00             		bsr	___cxa_atexit
 954                             	.LVL105:
 955 025f 38 71 FE                		bra	.L65
 956                             	.LBE892:
 957                             	.LBE891:
 958                             	.LBE898:
 959                             	.LBE899:
 960                             	.LFE1469:
 962                             		.section	.rodata.str1.1
 963                             	.LC12:
 964 0121 73 74 61 72 74 3A 20 25 		.string	"start: %d \n"
 964      64 20 0A 00 
 965                             	.LC13:
 966 012d 65 6E 64 20 25 64 20 20 		.string	"end %d  \n"
 966      0A 00 
 967                             	.LC14:
 968 0137 65 6E 74 72 79 20 70 6F 		.string	"entry point \n"
 968      69 6E 74 20 0A 00 
 969                             		.section	.text.startup,"ax",@progbits
 970                             		.global	_main
 972                             	_main:
 973                             	.LFB1467:
 175:../src/main.cpp ****     periperalInit();
 974                             		.loc 10 175 0
 975 0000 6E 7A                   		pushm	r7-r10
 976                             	.LCFI10:
 977 0002 60 80                   		sub	#8, r0
 978                             	.LCFI11:
 979                             	.LBB931:
 176:../src/main.cpp ****     startUpInit();
 980                             		.loc 10 176 0
 981 0004 05 00 00 00             		bsr	__Z13periperalInitv
 982                             	.LVL106:
 177:../src/main.cpp **** 
 983                             		.loc 10 177 0
 984 0008 05 00 00 00             		bsr	__Z11startUpInitv
 985                             	.LVL107:
 179:../src/main.cpp ****     if(vol_f < 7.0)famima();
 986                             		.loc 10 179 0
 987 000c FB 7E 00 90 08          		mov.L	#0x89000, r7
 988 0011 BC 77                   		movu.W	32[r7], r7
 989 0013 FC 47 77                		itof	r7, r7
 990 0016 FD 72 37 7E 7D 3D 40    		fmul	#0x403d7d7e, r7
 991 001d FD 72 37 33 33 53 40    		fmul	#0x40533333, r7
 992 0024 FD 72 37 00 00 80 39    		fmul	#0x39800000, r7
 180:../src/main.cpp **** 
 993                             		.loc 10 180 0
 994 002b FD 72 17 00 00 E0 40    		fcmp	#0x40e00000, r7
 995 0032 26 05 38 41 01          		bn	.L124
 996                             	.LBB932:
 997                             	.LBB933:
  70:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\imu.hpp **** 		return instance;
 998                             		.loc 1 70 0
 999 0037 FB 72 00 00 00 00       		mov.L	#__ZGVZN7MPU925011getInstanceEvE8instance, r7
 1000 003d 58 7A                   		movu.B	[r7], r10
 1001 003f 61 0A                   		cmp	#0, r10
 1002 0041 3A 45 01                		beq	.L125
 1003 0044 76 10 01 00             		.balign 8,3,5
 1004                             	.L92:
 1005                             	.LBE933:
 1006                             	.LBE932:
 1007                             	.LBB937:
 1008                             	.LBB938:
  26:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\imu.hpp **** 		return instance;
 1009                             		.loc 1 26 0
 1010 0048 FB A2 00 00 00 00       		mov.L	#__ZGVZN9Icm20608G11getInstanceEvE8instance, r10
 1011 004e 58 AE                   		movu.B	[r10], r14
 1012 0050 61 0E                   		cmp	#0, r14
 1013 0052 3A 68 01                		beq	.L126
 1014 0055 FC 13 00                		.balign 8,3,4
 1015                             	.L95:
 1016                             	.LBE938:
 1017                             	.LBE937:
 185:../src/main.cpp **** 
 1018                             		.loc 10 185 0
 1019 0058 FB AE 00 42 09          		mov.L	#0x94200, r10
 184:../src/main.cpp ****     myprintf3_Dbg("start: %d \n", CMTW0.CMWCNT);
 1020                             		.loc 10 184 0
 1021 005d 05 00 00 00             		bsr	__ZN5FcLed11getInstanceEv
 1022                             	.LVL108:
 185:../src/main.cpp **** 
 1023                             		.loc 10 185 0
 1024 0061 ED AE 04                		mov.L	16[r10], r14
 1025 0064 F8 02 21 01 00 00       		mov.L	#.LC12, [r0]
 1026 006a E7 0E 01                		mov.L	r14, 4[r0]
 1027 006d 05 00 00 00             		bsr	__Z13myprintf3_DbgPKcz
 1028                             	.LVL109:
 196:../src/main.cpp ****     //fcled.R.flash(100,100);
 1029                             		.loc 10 196 0
 1030 0071 ED AA 04                		mov.L	16[r10], r10
 1031 0074 F8 02 2D 01 00 00       		mov.L	#.LC13, [r0]
 1032 007a E7 0A 01                		mov.L	r10, 4[r0]
 1033 007d 05 00 00 00             		bsr	__Z13myprintf3_DbgPKcz
 1034                             	.LVL110:
 206:../src/main.cpp ****     getPointerOfPeriodicMsg()[156] = 0xff;
 1035                             		.loc 10 206 0
 1036 0081 05 00 00 00             		bsr	__Z23getPointerOfPeriodicMsgv
 1037                             	.LVL111:
 1038 0085 F9 14 9B FF             		mov.B	#-1, 155[r1]
 1039                             	.LBB942:
 1040                             	.LBB943:
 123:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****         return instance;
 1041                             		.loc 3 123 0
 1042 0089 FB A2 00 00 00 00       		mov.L	#__ZGVZN6UMouse11getInstanceEvE8instance, r10
 1043                             	.LBE943:
 1044                             	.LBE942:
 207:../src/main.cpp ****     //uint8_t *periMes = getPointerOfPeriodicMsg();
 1045                             		.loc 10 207 0
 1046 008f 05 00 00 00             		bsr	__Z23getPointerOfPeriodicMsgv
 1047                             	.LVL112:
 1048                             	.LBB949:
 1049                             	.LBB944:
 123:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****         return instance;
 1050                             		.loc 3 123 0
 1051 0093 58 AE                   		movu.B	[r10], r14
 1052                             	.LBE944:
 1053                             	.LBE949:
 207:../src/main.cpp ****     //uint8_t *periMes = getPointerOfPeriodicMsg();
 1054                             		.loc 10 207 0
 1055 0095 F9 14 9C FF             		mov.B	#-1, 156[r1]
 1056                             	.LBB950:
 1057                             	.LBB945:
 123:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****         return instance;
 1058                             		.loc 3 123 0
 1059 0099 61 0E                   		cmp	#0, r14
 1060 009b 21 2E                   		bne	.L106
 1061 009d 38 AE 00                		bra	.L129
 1062                             	.L101:
 1063                             	.LBE945:
 1064                             	.LBE950:
 215:../src/main.cpp ****          MPU9250::getInstance().calibAccOffset(200);
 1065                             		.loc 10 215 0
 1066 00a0 75 42 C8                		mov.L	#0xc8, r2
 1067 00a3 FB 12 00 00 00 00       		mov.L	#__ZZN7MPU925011getInstanceEvE8instance, r1
 1068 00a9 05 00 00 00             		bsr	__ZN7MPU925016calibOmegaOffsetEm
 1069                             	.LVL113:
 1070                             	.LBB951:
 1071                             	.LBB952:
  70:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\imu.hpp **** 		return instance;
 1072                             		.loc 1 70 0
 1073 00ad 58 7E                   		movu.B	[r7], r14
 1074 00af 61 0E                   		cmp	#0, r14
 1075 00b1 20 69                   		beq	.L128
 1076 00b3 77 10 01 00 00          		.balign 8,3,5
 1077                             	.L104:
 1078                             	.LBE952:
 1079                             	.LBE951:
 216:../src/main.cpp **** 
 1080                             		.loc 10 216 0
 1081 00b8 FB 12 00 00 00 00       		mov.L	#__ZZN7MPU925011getInstanceEvE8instance, r1
 1082 00be 75 42 C8                		mov.L	#0xc8, r2
 1083 00c1 05 00 00 00             		bsr	__ZN7MPU925014calibAccOffsetEm
 1084                             	.LVL114:
 218:../src/main.cpp ****      };
 1085                             		.loc 10 218 0
 1086 00c5 05 00 00 00             		bsr	__Z10modeSelectv
 1087                             	.LVL115:
 1088                             	.L106:
 213:../src/main.cpp ****          ///////////////////////////////////////
 1089                             		.loc 10 213 0 discriminator 1
 1090 00c9 F8 02 37 01 00 00       		mov.L	#.LC14, [r0]
 1091 00cf 05 00 00 00             		bsr	__Z9myprintf3PKcz
 1092                             	.LVL116:
 1093                             	.LBB956:
 1094                             	.LBB957:
  70:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\imu.hpp **** 		return instance;
 1095                             		.loc 1 70 0 discriminator 1
 1096 00d3 58 7E                   		movu.B	[r7], r14
 1097 00d5 61 0E                   		cmp	#0, r14
 1098 00d7 21 C9                   		bne	.L101
  70:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\imu.hpp **** 		return instance;
 1099                             		.loc 1 70 0 is_stmt 0
 1100 00d9 FB 12 00 00 00 00       		mov.L	#__ZGVZN7MPU925011getInstanceEvE8instance, r1
 1101 00df 05 00 00 00             		bsr	___cxa_guard_acquire
 1102                             	.LVL117:
 1103 00e3 61 01                   		cmp	#0, r1
 1104 00e5 20 BB                   		beq	.L101
 1105                             	.LVL118:
 1106                             	.LBE957:
 1107                             	.LBB958:
 1108                             	.LBB959:
 1109 00e7 FB 12 00 00 00 00       		mov.L	#__ZGVZN7MPU925011getInstanceEvE8instance, r1
 1110 00ed 05 00 00 00             		bsr	___cxa_guard_release
 1111                             	.LVL119:
 1112 00f1 FB 32 00 00 00 00       		mov.L	#___dso_handle, r3
 1113 00f7 FB 22 00 00 00 00       		mov.L	#__ZZN7MPU925011getInstanceEvE8instance, r2
 1114 00fd FB 12 00 00 00 00       		mov.L	#__ZN7MPU9250D1Ev, r1
 1115 0103 05 00 00 00             		bsr	___cxa_atexit
 1116                             	.LVL120:
 1117                             	.LBE959:
 1118                             	.LBE958:
 1119                             	.LBE956:
 215:../src/main.cpp ****          MPU9250::getInstance().calibAccOffset(200);
 1120                             		.loc 10 215 0 is_stmt 1
 1121 0107 75 42 C8                		mov.L	#0xc8, r2
 1122 010a FB 12 00 00 00 00       		mov.L	#__ZZN7MPU925011getInstanceEvE8instance, r1
 1123 0110 05 00 00 00             		bsr	__ZN7MPU925016calibOmegaOffsetEm
 1124                             	.LVL121:
 1125                             	.LBB960:
 1126                             	.LBB953:
  70:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\imu.hpp **** 		return instance;
 1127                             		.loc 1 70 0
 1128 0114 58 7E                   		movu.B	[r7], r14
 1129 0116 61 0E                   		cmp	#0, r14
 1130 0118 21 A0                   		bne	.L104
 1131                             	.LVL122:
 1132                             		.balign 8,3,5
 1133                             	.L128:
 1134 011a FB 12 00 00 00 00       		mov.L	#__ZGVZN7MPU925011getInstanceEvE8instance, r1
 1135 0120 05 00 00 00             		bsr	___cxa_guard_acquire
 1136                             	.LVL123:
 1137 0124 61 01                   		cmp	#0, r1
 1138 0126 20 92                   		beq	.L104
 1139                             	.LVL124:
 1140                             	.LBE953:
 1141                             	.LBB954:
 1142                             	.LBB955:
 1143 0128 FB 12 00 00 00 00       		mov.L	#__ZGVZN7MPU925011getInstanceEvE8instance, r1
 1144 012e 05 00 00 00             		bsr	___cxa_guard_release
 1145                             	.LVL125:
 1146 0132 FB 32 00 00 00 00       		mov.L	#___dso_handle, r3
 1147 0138 FB 22 00 00 00 00       		mov.L	#__ZZN7MPU925011getInstanceEvE8instance, r2
 1148 013e FB 12 00 00 00 00       		mov.L	#__ZN7MPU9250D1Ev, r1
 1149 0144 05 00 00 00             		bsr	___cxa_atexit
 1150                             	.LVL126:
 1151 0148 38 70 FF                		bra	.L104
 1152                             	.LVL127:
 1153                             	.L129:
 1154                             	.LBE955:
 1155                             	.LBE954:
 1156                             	.LBE960:
 1157                             	.LBB961:
 1158                             	.LBB946:
 123:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****         return instance;
 1159                             		.loc 3 123 0
 1160 014b EF A1                   		mov.L	r10, r1
 1161 014d 05 00 00 00             		bsr	___cxa_guard_acquire
 1162                             	.LVL128:
 1163 0151 61 01                   		cmp	#0, r1
 1164 0153 3A 76 FF                		beq	.L106
 1165                             	.LVL129:
 1166                             	.LBE946:
 1167                             	.LBB947:
 1168                             	.LBB948:
 1169 0156 EF A1                   		mov.L	r10, r1
 1170 0158 05 00 00 00             		bsr	___cxa_guard_release
 1171                             	.LVL130:
 1172 015c FB 12 00 00 00 00       		mov.L	#__ZN6UMouseD1Ev, r1
 1173 0162 FB 22 00 00 00 00       		mov.L	#__ZZN6UMouse11getInstanceEvE8instance, r2
 1174 0168 FB 32 00 00 00 00       		mov.L	#___dso_handle, r3
 1175 016e 05 00 00 00             		bsr	___cxa_atexit
 1176                             	.LVL131:
 1177 0172 38 57 FF                		bra	.L106
 1178                             	.LVL132:
 1179                             	.L124:
 1180                             	.LBE948:
 1181                             	.LBE947:
 1182                             	.LBE961:
 180:../src/main.cpp **** 
 1183                             		.loc 10 180 0 discriminator 1
 1184 0175 05 00 00 00             		bsr	__Z6famimav
 1185                             	.LVL133:
 1186                             	.LBB962:
 1187                             	.LBB934:
  70:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\imu.hpp **** 		return instance;
 1188                             		.loc 1 70 0 discriminator 1
 1189 0179 FB 72 00 00 00 00       		mov.L	#__ZGVZN7MPU925011getInstanceEvE8instance, r7
 1190 017f 58 7A                   		movu.B	[r7], r10
 1191 0181 61 0A                   		cmp	#0, r10
 1192 0183 3B C5 FE                		bne	.L92
 1193                             		.balign 8,3,1
 1194                             	.L125:
  70:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\imu.hpp **** 		return instance;
 1195                             		.loc 1 70 0 is_stmt 0
 1196 0186 EF 71                   		mov.L	r7, r1
 1197 0188 05 00 00 00             		bsr	___cxa_guard_acquire
 1198                             	.LVL134:
 1199 018c 61 01                   		cmp	#0, r1
 1200 018e 3A BA FE                		beq	.L92
 1201                             	.LVL135:
 1202                             	.LBE934:
 1203                             	.LBB935:
 1204                             	.LBB936:
 1205 0191 EF 71                   		mov.L	r7, r1
 1206 0193 05 00 00 00             		bsr	___cxa_guard_release
 1207                             	.LVL136:
 1208 0197 FB 12 00 00 00 00       		mov.L	#__ZN7MPU9250D1Ev, r1
 1209 019d FB 22 00 00 00 00       		mov.L	#__ZZN7MPU925011getInstanceEvE8instance, r2
 1210 01a3 FB 32 00 00 00 00       		mov.L	#___dso_handle, r3
 1211 01a9 05 00 00 00             		bsr	___cxa_atexit
 1212                             	.LVL137:
 1213                             	.LBE936:
 1214                             	.LBE935:
 1215                             	.LBE962:
 1216                             	.LBB963:
 1217                             	.LBB939:
  26:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\imu.hpp **** 		return instance;
 1218                             		.loc 1 26 0 is_stmt 1
 1219 01ad FB A2 00 00 00 00       		mov.L	#__ZGVZN9Icm20608G11getInstanceEvE8instance, r10
 1220 01b3 58 AE                   		movu.B	[r10], r14
 1221 01b5 61 0E                   		cmp	#0, r14
 1222 01b7 3B A1 FE                		bne	.L95
 1223                             	.LVL138:
 1224                             		.balign 8,3,1
 1225                             	.L126:
 1226 01ba EF A1                   		mov.L	r10, r1
 1227 01bc 05 00 00 00             		bsr	___cxa_guard_acquire
 1228                             	.LVL139:
 1229 01c0 61 01                   		cmp	#0, r1
 1230 01c2 3A 96 FE                		beq	.L95
 1231                             	.LVL140:
 1232                             	.LBE939:
 1233                             	.LBB940:
 1234                             	.LBB941:
 1235 01c5 EF A1                   		mov.L	r10, r1
 1236 01c7 05 00 00 00             		bsr	___cxa_guard_release
 1237                             	.LVL141:
 1238 01cb FB 12 00 00 00 00       		mov.L	#__ZN9Icm20608GD1Ev, r1
 1239 01d1 FB 22 00 00 00 00       		mov.L	#__ZZN9Icm20608G11getInstanceEvE8instance, r2
 1240 01d7 FB 32 00 00 00 00       		mov.L	#___dso_handle, r3
 1241 01dd 05 00 00 00             		bsr	___cxa_atexit
 1242                             	.LVL142:
 1243 01e1 38 77 FE                		bra	.L95
 1244                             	.LBE941:
 1245                             	.LBE940:
 1246                             	.LBE963:
 1247                             	.LBE931:
 1248                             	.LFE1467:
 1250 01e4 76 10 01 00             		.section	.text._ZNSt11_Deque_baseIsSaIsEED2Ev,"axG",@progbits,_ZNSt11_Deque_baseIsSaIsEED5Ev,comda
 1251                             		.weak	__ZNSt11_Deque_baseIsSaIsEED2Ev
 1253                             	__ZNSt11_Deque_baseIsSaIsEED2Ev:
 1254                             	.LFB1521:
 560:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****     ~_Deque_base()
 1255                             		.loc 7 560 0
 1256 0000 6E 7B                   		pushm	r7-r11
 1257                             	.LCFI12:
 560:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****     ~_Deque_base()
 1258                             		.loc 7 560 0
 1259 0002 EF 1B                   		mov.L	r1, r11
 1260                             	.LBB964:
 563:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	{
 1261                             		.loc 7 563 0
 1262 0004 EC 11                   		mov.L	[r1], r1
 1263 0006 61 01                   		cmp	#0, r1
 1264 0008 20 23                   		beq	.L130
 566:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	  _M_deallocate_map(this->_M_impl._M_map, this->_M_impl._M_map_size);
 1265                             		.loc 7 566 0
 1266 000a ED BA 09                		mov.L	36[r11], r10
 1267 000d ED B7 05                		mov.L	20[r11], r7
 1268 0010 62 4A                   		add	#4, r10
 1269                             	.LBB965:
 1270                             	.LBB966:
 1271                             		.loc 7 641 0
 1272 0012 47 A7                   		cmp	r10, r7
 1273 0014 22 11                   		bgeu	.L132
 1274 0016 EF 00                   		.balign 8,3,3
 1275                             	.L134:
 1276                             	.LBB967:
 1277                             	.LBB968:
 1278                             	.LBB969:
 1279                             		.loc 8 110 0
 1280 0018 FD 2A 71                		mov.L	[r7+], r1
 1281 001b 05 00 00 00             		bsr	__ZdlPv
 1282                             	.LBE969:
 1283                             	.LBE968:
 1284                             	.LBE967:
 1285                             		.loc 7 641 0
 1286 001f 47 7A                   		cmp	r7, r10
 1287 0021 24 F7                   		bgtu	.L134
 1288 0023 EC B1                   		mov.L	[r11], r1
 1289                             		.balign 8,3,1
 1290                             	.L132:
 1291                             	.LBE966:
 1292                             	.LBE965:
 1293                             	.LBE964:
 569:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
 1294                             		.loc 7 569 0
 1295 0025 6F 7B                   		popm	r7-r11
 1296                             	.LBB973:
 1297                             	.LBB970:
 1298                             	.LBB971:
 1299                             	.LBB972:
 1300                             		.loc 8 110 0
 1301 0027 04 00 00 00             		bra	__ZdlPv
 1302                             	.L130:
 1303                             	.LBE972:
 1304                             	.LBE971:
 1305                             	.LBE970:
 1306                             	.LBE973:
 569:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
 1307                             		.loc 7 569 0
 1308 002b 3F 7B 05                		rtsd	#20, r7-r11
 1309                             	.LFE1521:
 1311                             		.weak	__ZNSt11_Deque_baseIsSaIsEED1Ev
 1312                             		.set	__ZNSt11_Deque_baseIsSaIsEED1Ev,__ZNSt11_Deque_baseIsSaIsEED2Ev
 1313                             		.global	_abort
 1314 002e EF 00                   		.section	.text._ZNSt11_Deque_baseIP13BaseMoveEventSaIS1_EE17_M_initialize_mapEm,"axG",@progbits,_Z
 1315                             		.weak	__ZNSt11_Deque_baseIP13BaseMoveEventSaIS1_EE17_M_initialize_mapEm
 1317                             	__ZNSt11_Deque_baseIP13BaseMoveEventSaIS1_EE17_M_initialize_mapEm:
 1318                             	.LFB1595:
 581:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****     _M_initialize_map(size_t __num_elements)
 1319                             		.loc 7 581 0
 1320                             	.LVL143:
 1321 0000 6E 6A                   		pushm	r6-r10
 1322                             	.LCFI13:
 1323 0002 71 00 B8                		add	#0xffffffb8, r0
 1324                             	.LCFI14:
 581:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****     _M_initialize_map(size_t __num_elements)
 1325                             		.loc 7 581 0
 1326 0005 A3 89                   		mov.L	r1, 60[r0]
 1327 0007 A4 0A                   		mov.L	r2, 68[r0]
 1328 0009 EF 01                   		mov.L	r0, r1
 1329                             	.LVL144:
 1330 000b F9 02 06 00 00 00 00    		mov.L	#___gxx_personality_sj0, 24[r0]
 1331 0012 F9 02 07 00 00 00 00    		mov.L	#.LLSDA1595, 28[r0]
 1332 0019 A2 00                   		mov.L	r0, 32[r0]
 1333 001b F9 02 09 BF 00 00 00    		mov.L	#.L145, 36[r0]
 1334 0022 A2 80                   		mov.L	r0, 40[r0]
 1335 0024 05 00 00 00             		bsr	__Unwind_SjLj_Register
 1336                             	.LVL145:
 1337                             	.LBB1000:
 585:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
 1338                             		.loc 7 585 0
 1339 0028 ED 0E 11                		mov.L	68[r0], r14
 1340 002b 68 7E                   		shlr	#7, r14
 588:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       this->_M_impl._M_map = _M_allocate_map(this->_M_impl._M_map_size);
 1341                             		.loc 7 588 0
 1342 002d 71 E1 03                		add	#3, r14, r1
 1343 0030 61 81                   		cmp	#8, r1
 1344 0032 22 04                   		bgeu 1f
 1345 0034 66 81                   		mov #8, r1
 1346                             	1:
 587:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 					   size_t(__num_nodes + 2));
 1347                             		.loc 7 587 0
 1348 0036 AB 8F                   		mov.L	60[r0], r7
 1349 0038 A0 79                   		mov.L	r1, 4[r7]
 1350                             	.LBB1001:
 1351                             	.LBB1002:
 1352                             	.LBB1003:
 104:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h ****       }
 1353                             		.loc 8 104 0
 1354 003a F9 06 01 FF             		mov.L	#-1, 4[r0]
 1355 003e 6C 21                   		shll	#2, r1
 1356                             	.LBE1003:
 1357                             	.LBE1002:
 1358                             	.LBE1001:
 585:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
 1359                             		.loc 7 585 0
 1360 0040 62 1E                   		add	#1, r14
 1361 0042 E7 0E 0D                		mov.L	r14, 52[r0]
 1362                             	.LVL146:
 1363                             	.LBB1006:
 1364                             	.LBB1005:
 1365                             	.LBB1004:
 104:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h ****       }
 1366                             		.loc 8 104 0
 1367 0045 05 00 00 00             		bsr	__Znwm
 1368                             	.LVL147:
 1369                             	.LBE1004:
 1370                             	.LBE1005:
 1371                             	.LBE1006:
 597:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       _Tp** __nfinish = __nstart + __num_nodes;
 1372                             		.loc 7 597 0
 1373 0049 A8 7C                   		mov.L	4[r7], r4
 598:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
 1374                             		.loc 7 598 0
 1375 004b ED 0E 0D                		mov.L	52[r0], r14
 1376 004e 6C 2E                   		shll	#2, r14
 597:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       _Tp** __nfinish = __nstart + __num_nodes;
 1377                             		.loc 7 597 0
 1378 0050 ED 0A 0D                		mov.L	52[r0], r10
 1379 0053 43 A4                   		sub	r10, r4
 1380 0055 68 14                   		shlr	#1, r4
 1381 0057 6C 24                   		shll	#2, r4
 1382 0059 4B 14                   		add	r1, r4
 1383 005b A4 04                   		mov.L	r4, 64[r0]
 1384                             	.LVL148:
 589:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
 1385                             		.loc 7 589 0
 1386 005d E3 71                   		mov.L	r1, [r7]
 598:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
 1387                             		.loc 7 598 0
 1388 005f 4B 4E                   		add	r4, r14
 1389 0061 E7 0E 0E                		mov.L	r14, 56[r0]
 1390                             	.LVL149:
 1391                             	.LBB1007:
 1392                             	.LBB1008:
 626:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	    *__cur = this->_M_allocate_node();
 1393                             		.loc 7 626 0
 1394 0064 47 E4                   		cmp	r14, r4
 1395 0066 22 1E                   		bgeu	.L137
 1396 0068 A3 0C                   		mov.L	r4, 52[r0]
 1397                             	.LVL150:
 1398                             		.balign 8,3,4
 1399                             	.L138:
 1400                             	.LBB1009:
 1401                             	.LBB1010:
 1402                             	.LBB1011:
 104:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h ****       }
 1403                             		.loc 8 104 0
 1404 006a 3E 01 02                		mov.L	#2, 4[r0]
 1405 006d FB 1A 00 02             		mov.L	#0x200, r1
 1406 0071 05 00 00 00             		bsr	__Znwm
 1407                             	.LVL151:
 1408                             	.LBE1011:
 1409                             	.LBE1010:
 1410                             	.LBE1009:
 627:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	}
 1411                             		.loc 7 627 0
 1412 0075 ED 0A 0D                		mov.L	52[r0], r10
 1413 0078 FD 22 A1                		mov.L	r1, [r10+]
 1414 007b E7 0A 0D                		mov.L	r10, 52[r0]
 1415                             	.LVL152:
 626:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	    *__cur = this->_M_allocate_node();
 1416                             		.loc 7 626 0
 1417 007e AB 87                   		mov.L	56[r0], r7
 1418 0080 47 A7                   		cmp	r10, r7
 1419 0082 24 E8                   		bgtu	.L138
 1420                             	.LVL153:
 1421                             		.balign 8,3,1
 1422                             	.L137:
 1423                             	.LBE1008:
 1424                             	.LBE1007:
 1425                             	.LBB1019:
 1426                             	.LBB1020:
 236:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	_M_first = *__new_node;
 1427                             		.loc 7 236 0
 1428 0084 AB 8F                   		mov.L	60[r0], r7
 1429 0086 E5 07 10 05             		mov.L	64[r0], 20[r7]
 237:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	_M_last = _M_first + difference_type(_S_buffer_size());
 1430                             		.loc 7 237 0
 1431 008a ED 0A 10                		mov.L	64[r0], r10
 1432 008d EC AE                   		mov.L	[r10], r14
 1433                             	.LBE1020:
 1434                             	.LBE1019:
 611:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       this->_M_impl._M_start._M_cur = _M_impl._M_start._M_first;
 1435                             		.loc 7 611 0
 1436 008f AB 84                   		mov.L	56[r0], r4
 1437 0091 60 44                   		sub	#4, r4
 1438                             	.LBB1022:
 1439                             	.LBB1021:
 238:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       }
 1440                             		.loc 7 238 0
 1441 0093 72 E3 00 02             		add	#0x200, r14, r3
 237:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	_M_last = _M_first + difference_type(_S_buffer_size());
 1442                             		.loc 7 237 0
 1443 0097 E7 7E 03                		mov.L	r14, 12[r7]
 1444                             	.LVL154:
 238:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       }
 1445                             		.loc 7 238 0
 1446 009a A1 73                   		mov.L	r3, 16[r7]
 1447                             	.LVL155:
 1448                             	.LBE1021:
 1449                             	.LBE1022:
 1450                             	.LBB1023:
 1451                             	.LBB1024:
 236:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	_M_first = *__new_node;
 1452                             		.loc 7 236 0
 1453 009c A2 7C                   		mov.L	r4, 36[r7]
 237:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	_M_last = _M_first + difference_type(_S_buffer_size());
 1454                             		.loc 7 237 0
 1455 009e EC 44                   		mov.L	[r4], r4
 1456                             	.LBE1024:
 1457                             	.LBE1023:
 614:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 					% __deque_buf_size(sizeof(_Tp)));
 1458                             		.loc 7 614 0
 1459 00a0 AC 0B                   		mov.L	68[r0], r3
 1460 00a2 75 23 7F                		and #0x7f, r3
 1461 00a5 6C 23                   		shll	#2, r3
 1462                             	.LBB1027:
 1463                             	.LBB1025:
 238:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       }
 1464                             		.loc 7 238 0
 1465 00a7 72 42 00 02             		add	#0x200, r4, r2
 1466                             	.LBE1025:
 1467                             	.LBE1027:
 614:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 					% __deque_buf_size(sizeof(_Tp)));
 1468                             		.loc 7 614 0
 1469 00ab 4B 43                   		add	r4, r3
 1470                             	.LBB1028:
 1471                             	.LBB1026:
 237:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	_M_last = _M_first + difference_type(_S_buffer_size());
 1472                             		.loc 7 237 0
 1473 00ad A1 FC                   		mov.L	r4, 28[r7]
 238:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       }
 1474                             		.loc 7 238 0
 1475 00af A2 72                   		mov.L	r2, 32[r7]
 1476                             	.LBE1026:
 1477                             	.LBE1028:
 612:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       this->_M_impl._M_finish._M_cur = (this->_M_impl._M_finish._M_first
 1478                             		.loc 7 612 0
 1479 00b1 E7 7E 02                		mov.L	r14, 8[r7]
 1480                             	.LVL156:
 613:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 					+ __num_elements
 1481                             		.loc 7 613 0
 1482 00b4 A1 F3                   		mov.L	r3, 24[r7]
 1483 00b6 EF 01                   		mov.L	r0, r1
 1484 00b8 05 00 00 00             		bsr	__Unwind_SjLj_Unregister
 1485                             	.LVL157:
 1486                             	.LBE1000:
 616:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
 1487                             		.loc 7 616 0
 1488 00bc 3F 6A 17                		rtsd	#92, r6-r10
 1489                             	.LVL158:
 1490                             	.L145:
 1491 00bf E5 00 01 0E             		mov.L	4[r0], 56[r0]
 1492 00c3 E5 00 02 11             		mov.L	8[r0], 68[r0]
 1493 00c7 AB 87                   		mov.L	56[r0], r7
 1494 00c9 61 07                   		cmp	#0, r7
 1495 00cb 20 12                   		beq	.L146
 1496 00cd 60 17                   		sub	#1, r7
 1497 00cf A3 87                   		mov.L	r7, 56[r0]
 1498 00d1 20 42                   		beq	.L147
 1499 00d3 60 17                   		sub	#1, r7
 1500 00d5 A3 87                   		mov.L	r7, 56[r0]
 1501 00d7 20 17                   		beq	.L148
 1502 00d9 05 00 00 00             		bsr	_abort
 1503                             	.LVL159:
 1504                             	.L146:
 1505                             	.LBB1034:
 602:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	{
 1506                             		.loc 7 602 0
 1507 00dd 3E 01 00                		mov.L	#0, 4[r0]
 1508 00e0 05 00 00 00             		bsr	___cxa_end_catch
 1509                             	.LVL160:
 1510 00e4 AC 09                   		mov.L	68[r0], r1
 1511 00e6 F9 06 01 FF             		mov.L	#-1, 4[r0]
 1512 00ea 05 00 00 00             		bsr	__Unwind_SjLj_Resume
 1513                             	.LVL161:
 1514                             	.L148:
 1515                             	.LBB1029:
 1516                             	.LBB1017:
 629:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	{
 1517                             		.loc 7 629 0
 1518 00ee E5 00 0E 01             		mov.L	56[r0], 4[r0]
 1519 00f2 05 00 00 00             		bsr	___cxa_end_catch
 1520                             	.LVL162:
 1521                             	.LBE1017:
 1522                             	.LBE1029:
 602:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	{
 1523                             		.loc 7 602 0
 1524 00f6 AC 09                   		mov.L	68[r0], r1
 1525 00f8 05 00 00 00             		bsr	___cxa_begin_catch
 1526                             	.LVL163:
 1527                             	.LBB1030:
 1528                             	.LBB1031:
 1529                             	.LBB1032:
 1530                             		.loc 8 110 0
 1531 00fc ED 0A 0F                		mov.L	60[r0], r10
 1532 00ff EC A1                   		mov.L	[r10], r1
 1533 0101 05 00 00 00             		bsr	__ZdlPv
 1534                             	.LVL164:
 1535                             	.LBE1032:
 1536                             	.LBE1031:
 1537                             	.LBE1030:
 605:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	  this->_M_impl._M_map_size = 0;
 1538                             		.loc 7 605 0
 1539 0105 E1 0A 0E                		mov.L	56[r0], [r10]
 606:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	  __throw_exception_again;
 1540                             		.loc 7 606 0
 1541 0108 E5 0A 0E 01             		mov.L	56[r0], 4[r10]
 607:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	}
 1542                             		.loc 7 607 0
 1543 010c 3E 01 01                		mov.L	#1, 4[r0]
 1544 010f 05 00 00 00             		bsr	___cxa_rethrow
 1545                             	.LVL165:
 1546                             	.L147:
 1547                             	.LBB1033:
 1548                             	.LBB1018:
 629:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	{
 1549                             		.loc 7 629 0
 1550 0113 AC 09                   		mov.L	68[r0], r1
 1551 0115 05 00 00 00             		bsr	___cxa_begin_catch
 1552                             	.LVL166:
 1553                             	.LBB1012:
 1554                             	.LBB1013:
 1555                             		.loc 7 641 0
 1556 0119 AC 07                   		mov.L	64[r0], r7
 1557 011b ED 0A 0D                		mov.L	52[r0], r10
 1558 011e 47 A7                   		cmp	r10, r7
 1559 0120 22 18                   		bgeu	.L142
 1560                             	.LVL167:
 1561                             		.balign 8,3,1
 1562                             	.L149:
 1563                             	.LBB1014:
 1564                             	.LBB1015:
 1565                             	.LBB1016:
 1566                             		.loc 8 110 0
 1567 0122 AC 07                   		mov.L	64[r0], r7
 1568 0124 FD 2A 71                		mov.L	[r7+], r1
 1569 0127 A4 07                   		mov.L	r7, 64[r0]
 1570                             	.LVL168:
 1571 0129 05 00 00 00             		bsr	__ZdlPv
 1572                             	.LVL169:
 1573                             	.LBE1016:
 1574                             	.LBE1015:
 1575                             	.LBE1014:
 1576                             		.loc 7 641 0
 1577 012d ED 0A 0D                		mov.L	52[r0], r10
 1578 0130 47 A7                   		cmp	r10, r7
 1579 0132 23 F0                   		bltu	.L149
 1580                             	.LVL170:
 1581 0134 76 10 01 00             		.balign 8,3,4
 1582                             	.L142:
 1583                             	.LBE1013:
 1584                             	.LBE1012:
 632:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	}
 1585                             		.loc 7 632 0
 1586 0138 3E 01 03                		mov.L	#3, 4[r0]
 1587 013b 05 00 00 00             		bsr	___cxa_rethrow
 1588                             	.LVL171:
 1589                             	.LBE1018:
 1590                             	.LBE1033:
 1591                             	.LBE1034:
 1592                             	.LFE1595:
 1593                             		.section	.gcc_except_table._ZNSt11_Deque_baseIP13BaseMoveEventSaIS1_EE17_M_initialize_mapEm,"awG",
 1594                             		.balign 4
 1595                             	.LLSDA1595:
 1596 0000 FF                      		.byte	0xff
 1597 0001 00                      		.byte	0
 1598 0002 11                      		.uleb128 .LLSDATT1595-.LLSDATTD1595
 1599                             	.LLSDATTD1595:
 1600 0003 01                      		.byte	0x1
 1601 0004 06                      		.uleb128 .LLSDACSE1595-.LLSDACSB1595
 1602                             	.LLSDACSB1595:
 1603 0005 00                      		.uleb128 0
 1604 0006 00                      		.uleb128 0
 1605 0007 01                      		.uleb128 0x1
 1606 0008 01                      		.uleb128 0x1
 1607 0009 02                      		.uleb128 0x2
 1608 000a 03                      		.uleb128 0x3
 1609                             	.LLSDACSE1595:
 1610 000b 01                      		.byte	0x1
 1611 000c 00                      		.byte	0
 1612 000d 00                      		.byte	0
 1613 000e 7D                      		.byte	0x7d
 1614 000f 00                      		.balign 4
 1615 0010 00 00 00 00             		.long	0
 1616                             	.LLSDATT1595:
 1617                             		.section	.text._ZNSt11_Deque_baseIP13BaseMoveEventSaIS1_EE17_M_initialize_mapEm,"axG",@progbits,_Z
 1619 013f 03                      		.section	.text._ZNSt5dequeIsSaIsEE17_M_reallocate_mapEmb,"axG",@progbits,_ZNSt5dequeIsSaIsEE17_M_r
 1620                             		.weak	__ZNSt5dequeIsSaIsEE17_M_reallocate_mapEmb
 1622                             	__ZNSt5dequeIsSaIsEE17_M_reallocate_mapEmb:
 1623                             	.LFB1622:
 1624                             		.file 11 "c:\\progra~2\\gccfor~2.201\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\4.8.0.201602-gnurx\\bi
   1:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** // Deque implementation (out of line) -*- C++ -*-
   2:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 
   3:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** // Copyright (C) 2001-2013 Free Software Foundation, Inc.
   4:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** //
   5:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** // software; you can redistribute it and/or modify it under the
   7:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** // terms of the GNU General Public License as published by the
   8:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** // any later version.
  10:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 
  11:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** // This library is distributed in the hope that it will be useful,
  12:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** // GNU General Public License for more details.
  15:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 
  16:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** // 3.1, as published by the Free Software Foundation.
  19:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 
  20:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** // You should have received a copy of the GNU General Public License and
  21:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** // <http://www.gnu.org/licenses/>.
  24:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 
  25:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** /*
  26:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****  *
  27:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****  * Copyright (c) 1994
  28:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****  * Hewlett-Packard Company
  29:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****  *
  30:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****  * Permission to use, copy, modify, distribute and sell this software
  31:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****  * and its documentation for any purpose is hereby granted without fee,
  32:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****  * provided that the above copyright notice appear in all copies and
  33:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****  * that both that copyright notice and this permission notice appear
  34:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****  * representations about the suitability of this software for any
  36:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****  *
  38:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****  *
  39:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****  * Copyright (c) 1997
  40:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****  * Silicon Graphics Computer Systems, Inc.
  41:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****  *
  42:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****  * Permission to use, copy, modify, distribute and sell this software
  43:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****  * and its documentation for any purpose is hereby granted without fee,
  44:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****  * provided that the above copyright notice appear in all copies and
  45:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****  * that both that copyright notice and this permission notice appear
  46:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****  * in supporting documentation.  Silicon Graphics makes no
  47:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****  * representations about the suitability of this software for any
  48:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****  */
  50:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 
  51:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** /** @file bits/deque.tcc
  52:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****  *  This is an internal header file, included by other library headers.
  53:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****  *  Do not attempt to use it directly. @headername{deque}
  54:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****  */
  55:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 
  56:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** #ifndef _DEQUE_TCC
  57:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** #define _DEQUE_TCC 1
  58:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 
  59:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** namespace std _GLIBCXX_VISIBILITY(default)
  60:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** {
  61:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
  62:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 
  63:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** #if __cplusplus >= 201103L
  64:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****   template <typename _Tp, typename _Alloc>
  65:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****     void
  66:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****     deque<_Tp, _Alloc>::
  67:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****     _M_default_initialize()
  68:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****     {
  69:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       _Map_pointer __cur;
  70:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       __try
  71:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****         {
  72:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****           for (__cur = this->_M_impl._M_start._M_node;
  73:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	       __cur < this->_M_impl._M_finish._M_node;
  74:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	       ++__cur)
  75:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****             std::__uninitialized_default_a(*__cur, *__cur + _S_buffer_size(),
  76:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 					   _M_get_Tp_allocator());
  77:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****           std::__uninitialized_default_a(this->_M_impl._M_finish._M_first,
  78:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 					 this->_M_impl._M_finish._M_cur,
  79:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 					 _M_get_Tp_allocator());
  80:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****         }
  81:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       __catch(...)
  82:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****         {
  83:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****           std::_Destroy(this->_M_impl._M_start, iterator(*__cur, __cur),
  84:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 			_M_get_Tp_allocator());
  85:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****           __throw_exception_again;
  86:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****         }
  87:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****     }
  88:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** #endif
  89:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 
  90:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****   template <typename _Tp, typename _Alloc>
  91:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****     deque<_Tp, _Alloc>&
  92:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****     deque<_Tp, _Alloc>::
  93:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****     operator=(const deque& __x)
  94:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****     {
  95:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       const size_type __len = size();
  96:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       if (&__x != this)
  97:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	{
  98:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	  if (__len >= __x.size())
  99:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	    _M_erase_at_end(std::copy(__x.begin(), __x.end(),
 100:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 				      this->_M_impl._M_start));
 101:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	  else
 102:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	    {
 103:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	      const_iterator __mid = __x.begin() + difference_type(__len);
 104:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	      std::copy(__x.begin(), __mid, this->_M_impl._M_start);
 105:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	      insert(this->_M_impl._M_finish, __mid, __x.end());
 106:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	    }
 107:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	}
 108:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       return *this;
 109:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****     }
 110:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 
 111:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** #if __cplusplus >= 201103L
 112:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****   template<typename _Tp, typename _Alloc>
 113:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****     template<typename... _Args>
 114:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       void
 115:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       deque<_Tp, _Alloc>::
 116:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       emplace_front(_Args&&... __args)
 117:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       {
 118:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	if (this->_M_impl._M_start._M_cur != this->_M_impl._M_start._M_first)
 119:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	  {
 120:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	    this->_M_impl.construct(this->_M_impl._M_start._M_cur - 1,
 121:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 				    std::forward<_Args>(__args)...);
 122:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	    --this->_M_impl._M_start._M_cur;
 123:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	  }
 124:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	else
 125:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	  _M_push_front_aux(std::forward<_Args>(__args)...);
 126:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       }
 127:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 
 128:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****   template<typename _Tp, typename _Alloc>
 129:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****     template<typename... _Args>
 130:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       void
 131:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       deque<_Tp, _Alloc>::
 132:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       emplace_back(_Args&&... __args)
 133:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       {
 134:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	if (this->_M_impl._M_finish._M_cur
 135:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	    != this->_M_impl._M_finish._M_last - 1)
 136:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	  {
 137:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	    this->_M_impl.construct(this->_M_impl._M_finish._M_cur,
 138:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 				    std::forward<_Args>(__args)...);
 139:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	    ++this->_M_impl._M_finish._M_cur;
 140:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	  }
 141:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	else
 142:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	  _M_push_back_aux(std::forward<_Args>(__args)...);
 143:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       }
 144:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** #endif
 145:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 
 146:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****   template <typename _Tp, typename _Alloc>
 147:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****     typename deque<_Tp, _Alloc>::iterator
 148:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****     deque<_Tp, _Alloc>::
 149:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****     insert(iterator __position, const value_type& __x)
 150:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****     {
 151:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       if (__position._M_cur == this->_M_impl._M_start._M_cur)
 152:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	{
 153:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	  push_front(__x);
 154:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	  return this->_M_impl._M_start;
 155:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	}
 156:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       else if (__position._M_cur == this->_M_impl._M_finish._M_cur)
 157:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	{
 158:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	  push_back(__x);
 159:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	  iterator __tmp = this->_M_impl._M_finish;
 160:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	  --__tmp;
 161:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	  return __tmp;
 162:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	}
 163:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       else
 164:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****         return _M_insert_aux(__position, __x);
 165:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****     }
 166:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 
 167:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** #if __cplusplus >= 201103L
 168:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****   template<typename _Tp, typename _Alloc>
 169:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****     template<typename... _Args>
 170:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       typename deque<_Tp, _Alloc>::iterator
 171:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       deque<_Tp, _Alloc>::
 172:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       emplace(iterator __position, _Args&&... __args)
 173:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       {
 174:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	if (__position._M_cur == this->_M_impl._M_start._M_cur)
 175:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	  {
 176:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	    emplace_front(std::forward<_Args>(__args)...);
 177:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	    return this->_M_impl._M_start;
 178:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	  }
 179:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	else if (__position._M_cur == this->_M_impl._M_finish._M_cur)
 180:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	  {
 181:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	    emplace_back(std::forward<_Args>(__args)...);
 182:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	    iterator __tmp = this->_M_impl._M_finish;
 183:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	    --__tmp;
 184:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	    return __tmp;
 185:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	  }
 186:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	else
 187:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	  return _M_insert_aux(__position, std::forward<_Args>(__args)...);
 188:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       }
 189:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** #endif
 190:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 
 191:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****   template <typename _Tp, typename _Alloc>
 192:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****     typename deque<_Tp, _Alloc>::iterator
 193:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****     deque<_Tp, _Alloc>::
 194:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****     erase(iterator __position)
 195:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****     {
 196:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       iterator __next = __position;
 197:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       ++__next;
 198:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       const difference_type __index = __position - begin();
 199:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       if (static_cast<size_type>(__index) < (size() >> 1))
 200:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	{
 201:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	  if (__position != begin())
 202:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	    _GLIBCXX_MOVE_BACKWARD3(begin(), __position, __next);
 203:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	  pop_front();
 204:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	}
 205:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       else
 206:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	{
 207:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	  if (__next != end())
 208:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	    _GLIBCXX_MOVE3(__next, end(), __position);
 209:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	  pop_back();
 210:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	}
 211:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       return begin() + __index;
 212:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****     }
 213:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 
 214:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****   template <typename _Tp, typename _Alloc>
 215:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****     typename deque<_Tp, _Alloc>::iterator
 216:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****     deque<_Tp, _Alloc>::
 217:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****     erase(iterator __first, iterator __last)
 218:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****     {
 219:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       if (__first == __last)
 220:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	return __first;
 221:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       else if (__first == begin() && __last == end())
 222:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	{
 223:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	  clear();
 224:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	  return end();
 225:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	}
 226:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       else
 227:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	{
 228:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	  const difference_type __n = __last - __first;
 229:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	  const difference_type __elems_before = __first - begin();
 230:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	  if (static_cast<size_type>(__elems_before) <= (size() - __n) / 2)
 231:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	    {
 232:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	      if (__first != begin())
 233:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 		_GLIBCXX_MOVE_BACKWARD3(begin(), __first, __last);
 234:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	      _M_erase_at_begin(begin() + __n);
 235:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	    }
 236:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	  else
 237:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	    {
 238:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	      if (__last != end())
 239:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 		_GLIBCXX_MOVE3(__last, end(), __first);
 240:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	      _M_erase_at_end(end() - __n);
 241:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	    }
 242:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	  return begin() + __elems_before;
 243:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	}
 244:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****     }
 245:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 
 246:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****   template <typename _Tp, class _Alloc>
 247:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****     template <typename _InputIterator>
 248:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       void
 249:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       deque<_Tp, _Alloc>::
 250:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       _M_assign_aux(_InputIterator __first, _InputIterator __last,
 251:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 		    std::input_iterator_tag)
 252:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       {
 253:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****         iterator __cur = begin();
 254:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****         for (; __first != __last && __cur != end(); ++__cur, ++__first)
 255:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****           *__cur = *__first;
 256:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****         if (__first == __last)
 257:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****           _M_erase_at_end(__cur);
 258:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****         else
 259:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****           insert(end(), __first, __last);
 260:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       }
 261:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 
 262:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****   template <typename _Tp, typename _Alloc>
 263:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****     void
 264:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****     deque<_Tp, _Alloc>::
 265:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****     _M_fill_insert(iterator __pos, size_type __n, const value_type& __x)
 266:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****     {
 267:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       if (__pos._M_cur == this->_M_impl._M_start._M_cur)
 268:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	{
 269:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	  iterator __new_start = _M_reserve_elements_at_front(__n);
 270:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	  __try
 271:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	    {
 272:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	      std::__uninitialized_fill_a(__new_start, this->_M_impl._M_start,
 273:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 					  __x, _M_get_Tp_allocator());
 274:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	      this->_M_impl._M_start = __new_start;
 275:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	    }
 276:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	  __catch(...)
 277:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	    {
 278:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	      _M_destroy_nodes(__new_start._M_node,
 279:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 			       this->_M_impl._M_start._M_node);
 280:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	      __throw_exception_again;
 281:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	    }
 282:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	}
 283:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       else if (__pos._M_cur == this->_M_impl._M_finish._M_cur)
 284:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	{
 285:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	  iterator __new_finish = _M_reserve_elements_at_back(__n);
 286:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	  __try
 287:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	    {
 288:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	      std::__uninitialized_fill_a(this->_M_impl._M_finish,
 289:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 					  __new_finish, __x,
 290:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 					  _M_get_Tp_allocator());
 291:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	      this->_M_impl._M_finish = __new_finish;
 292:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	    }
 293:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	  __catch(...)
 294:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	    {
 295:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	      _M_destroy_nodes(this->_M_impl._M_finish._M_node + 1,
 296:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 			       __new_finish._M_node + 1);
 297:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	      __throw_exception_again;
 298:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	    }
 299:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	}
 300:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       else
 301:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****         _M_insert_aux(__pos, __n, __x);
 302:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****     }
 303:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 
 304:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** #if __cplusplus >= 201103L
 305:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****   template <typename _Tp, typename _Alloc>
 306:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****     void
 307:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****     deque<_Tp, _Alloc>::
 308:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****     _M_default_append(size_type __n)
 309:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****     {
 310:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       if (__n)
 311:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	{
 312:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	  iterator __new_finish = _M_reserve_elements_at_back(__n);
 313:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	  __try
 314:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	    {
 315:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	      std::__uninitialized_default_a(this->_M_impl._M_finish,
 316:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 					     __new_finish,
 317:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 					     _M_get_Tp_allocator());
 318:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	      this->_M_impl._M_finish = __new_finish;
 319:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	    }
 320:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	  __catch(...)
 321:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	    {
 322:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	      _M_destroy_nodes(this->_M_impl._M_finish._M_node + 1,
 323:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 			       __new_finish._M_node + 1);
 324:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	      __throw_exception_again;
 325:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	    }
 326:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	}
 327:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****     }
 328:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 
 329:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****   template <typename _Tp, typename _Alloc>
 330:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****     bool
 331:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****     deque<_Tp, _Alloc>::
 332:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****     _M_shrink_to_fit()
 333:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****     {
 334:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       const difference_type __front_capacity
 335:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	= (this->_M_impl._M_start._M_cur - this->_M_impl._M_start._M_first);
 336:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       if (__front_capacity == 0)
 337:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	return false;
 338:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 
 339:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       const difference_type __back_capacity
 340:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	= (this->_M_impl._M_finish._M_last - this->_M_impl._M_finish._M_cur);
 341:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       if (__front_capacity + __back_capacity < _S_buffer_size())
 342:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	return false;
 343:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 
 344:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       return std::__shrink_to_fit_aux<deque>::_S_do_it(*this);
 345:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****     }
 346:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** #endif
 347:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 
 348:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****   template <typename _Tp, typename _Alloc>
 349:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****     void
 350:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****     deque<_Tp, _Alloc>::
 351:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****     _M_fill_initialize(const value_type& __value)
 352:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****     {
 353:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       _Map_pointer __cur;
 354:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       __try
 355:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****         {
 356:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****           for (__cur = this->_M_impl._M_start._M_node;
 357:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	       __cur < this->_M_impl._M_finish._M_node;
 358:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	       ++__cur)
 359:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****             std::__uninitialized_fill_a(*__cur, *__cur + _S_buffer_size(),
 360:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 					__value, _M_get_Tp_allocator());
 361:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****           std::__uninitialized_fill_a(this->_M_impl._M_finish._M_first,
 362:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 				      this->_M_impl._M_finish._M_cur,
 363:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 				      __value, _M_get_Tp_allocator());
 364:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****         }
 365:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       __catch(...)
 366:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****         {
 367:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****           std::_Destroy(this->_M_impl._M_start, iterator(*__cur, __cur),
 368:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 			_M_get_Tp_allocator());
 369:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****           __throw_exception_again;
 370:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****         }
 371:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****     }
 372:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 
 373:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****   template <typename _Tp, typename _Alloc>
 374:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****     template <typename _InputIterator>
 375:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       void
 376:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       deque<_Tp, _Alloc>::
 377:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       _M_range_initialize(_InputIterator __first, _InputIterator __last,
 378:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****                           std::input_iterator_tag)
 379:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       {
 380:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****         this->_M_initialize_map(0);
 381:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****         __try
 382:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****           {
 383:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****             for (; __first != __last; ++__first)
 384:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** #if __cplusplus >= 201103L
 385:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	      emplace_back(*__first);
 386:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** #else
 387:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****               push_back(*__first);
 388:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** #endif
 389:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****           }
 390:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****         __catch(...)
 391:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****           {
 392:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****             clear();
 393:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****             __throw_exception_again;
 394:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****           }
 395:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       }
 396:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 
 397:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****   template <typename _Tp, typename _Alloc>
 398:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****     template <typename _ForwardIterator>
 399:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       void
 400:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       deque<_Tp, _Alloc>::
 401:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       _M_range_initialize(_ForwardIterator __first, _ForwardIterator __last,
 402:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****                           std::forward_iterator_tag)
 403:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       {
 404:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****         const size_type __n = std::distance(__first, __last);
 405:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****         this->_M_initialize_map(__n);
 406:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 
 407:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****         _Map_pointer __cur_node;
 408:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****         __try
 409:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****           {
 410:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****             for (__cur_node = this->_M_impl._M_start._M_node;
 411:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****                  __cur_node < this->_M_impl._M_finish._M_node;
 412:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****                  ++__cur_node)
 413:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	      {
 414:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 		_ForwardIterator __mid = __first;
 415:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 		std::advance(__mid, _S_buffer_size());
 416:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 		std::__uninitialized_copy_a(__first, __mid, *__cur_node,
 417:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 					    _M_get_Tp_allocator());
 418:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 		__first = __mid;
 419:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	      }
 420:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****             std::__uninitialized_copy_a(__first, __last,
 421:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 					this->_M_impl._M_finish._M_first,
 422:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 					_M_get_Tp_allocator());
 423:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****           }
 424:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****         __catch(...)
 425:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****           {
 426:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****             std::_Destroy(this->_M_impl._M_start,
 427:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 			  iterator(*__cur_node, __cur_node),
 428:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 			  _M_get_Tp_allocator());
 429:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****             __throw_exception_again;
 430:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****           }
 431:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       }
 432:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 
 433:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****   // Called only if _M_impl._M_finish._M_cur == _M_impl._M_finish._M_last - 1.
 434:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****   template<typename _Tp, typename _Alloc>
 435:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** #if __cplusplus >= 201103L
 436:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****     template<typename... _Args>
 437:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       void
 438:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       deque<_Tp, _Alloc>::
 439:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       _M_push_back_aux(_Args&&... __args)
 440:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** #else
 441:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       void
 442:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       deque<_Tp, _Alloc>::
 443:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       _M_push_back_aux(const value_type& __t)
 444:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** #endif
 445:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       {
 446:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	_M_reserve_map_at_back();
 447:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	*(this->_M_impl._M_finish._M_node + 1) = this->_M_allocate_node();
 448:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	__try
 449:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	  {
 450:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** #if __cplusplus >= 201103L
 451:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	    this->_M_impl.construct(this->_M_impl._M_finish._M_cur,
 452:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 				    std::forward<_Args>(__args)...);
 453:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** #else
 454:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	    this->_M_impl.construct(this->_M_impl._M_finish._M_cur, __t);
 455:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** #endif
 456:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	    this->_M_impl._M_finish._M_set_node(this->_M_impl._M_finish._M_node
 457:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 						+ 1);
 458:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	    this->_M_impl._M_finish._M_cur = this->_M_impl._M_finish._M_first;
 459:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	  }
 460:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	__catch(...)
 461:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	  {
 462:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	    _M_deallocate_node(*(this->_M_impl._M_finish._M_node + 1));
 463:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	    __throw_exception_again;
 464:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	  }
 465:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       }
 466:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 
 467:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****   // Called only if _M_impl._M_start._M_cur == _M_impl._M_start._M_first.
 468:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****   template<typename _Tp, typename _Alloc>
 469:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** #if __cplusplus >= 201103L
 470:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****     template<typename... _Args>
 471:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       void
 472:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       deque<_Tp, _Alloc>::
 473:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       _M_push_front_aux(_Args&&... __args)
 474:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** #else
 475:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       void
 476:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       deque<_Tp, _Alloc>::
 477:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       _M_push_front_aux(const value_type& __t)
 478:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** #endif
 479:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       {
 480:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	_M_reserve_map_at_front();
 481:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	*(this->_M_impl._M_start._M_node - 1) = this->_M_allocate_node();
 482:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	__try
 483:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	  {
 484:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	    this->_M_impl._M_start._M_set_node(this->_M_impl._M_start._M_node
 485:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 					       - 1);
 486:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	    this->_M_impl._M_start._M_cur = this->_M_impl._M_start._M_last - 1;
 487:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** #if __cplusplus >= 201103L
 488:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	    this->_M_impl.construct(this->_M_impl._M_start._M_cur,
 489:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 				    std::forward<_Args>(__args)...);
 490:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** #else
 491:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	    this->_M_impl.construct(this->_M_impl._M_start._M_cur, __t);
 492:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** #endif
 493:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	  }
 494:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	__catch(...)
 495:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	  {
 496:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	    ++this->_M_impl._M_start;
 497:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	    _M_deallocate_node(*(this->_M_impl._M_start._M_node - 1));
 498:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	    __throw_exception_again;
 499:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	  }
 500:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       }
 501:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 
 502:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****   // Called only if _M_impl._M_finish._M_cur == _M_impl._M_finish._M_first.
 503:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****   template <typename _Tp, typename _Alloc>
 504:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****     void deque<_Tp, _Alloc>::
 505:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****     _M_pop_back_aux()
 506:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****     {
 507:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       _M_deallocate_node(this->_M_impl._M_finish._M_first);
 508:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       this->_M_impl._M_finish._M_set_node(this->_M_impl._M_finish._M_node - 1);
 509:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       this->_M_impl._M_finish._M_cur = this->_M_impl._M_finish._M_last - 1;
 510:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       this->_M_impl.destroy(this->_M_impl._M_finish._M_cur);
 511:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****     }
 512:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 
 513:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****   // Called only if _M_impl._M_start._M_cur == _M_impl._M_start._M_last - 1.
 514:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****   // Note that if the deque has at least one element (a precondition for this
 515:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****   // member function), and if
 516:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****   //   _M_impl._M_start._M_cur == _M_impl._M_start._M_last,
 517:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****   // then the deque must have at least two nodes.
 518:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****   template <typename _Tp, typename _Alloc>
 519:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****     void deque<_Tp, _Alloc>::
 520:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****     _M_pop_front_aux()
 521:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****     {
 522:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       this->_M_impl.destroy(this->_M_impl._M_start._M_cur);
 523:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       _M_deallocate_node(this->_M_impl._M_start._M_first);
 524:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       this->_M_impl._M_start._M_set_node(this->_M_impl._M_start._M_node + 1);
 525:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       this->_M_impl._M_start._M_cur = this->_M_impl._M_start._M_first;
 526:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****     }
 527:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 
 528:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****   template <typename _Tp, typename _Alloc>
 529:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****     template <typename _InputIterator>
 530:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       void
 531:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       deque<_Tp, _Alloc>::
 532:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       _M_range_insert_aux(iterator __pos,
 533:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****                           _InputIterator __first, _InputIterator __last,
 534:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****                           std::input_iterator_tag)
 535:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       { std::copy(__first, __last, std::inserter(*this, __pos)); }
 536:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 
 537:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****   template <typename _Tp, typename _Alloc>
 538:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****     template <typename _ForwardIterator>
 539:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       void
 540:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       deque<_Tp, _Alloc>::
 541:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       _M_range_insert_aux(iterator __pos,
 542:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****                           _ForwardIterator __first, _ForwardIterator __last,
 543:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****                           std::forward_iterator_tag)
 544:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       {
 545:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****         const size_type __n = std::distance(__first, __last);
 546:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****         if (__pos._M_cur == this->_M_impl._M_start._M_cur)
 547:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	  {
 548:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	    iterator __new_start = _M_reserve_elements_at_front(__n);
 549:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	    __try
 550:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	      {
 551:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 		std::__uninitialized_copy_a(__first, __last, __new_start,
 552:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 					    _M_get_Tp_allocator());
 553:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 		this->_M_impl._M_start = __new_start;
 554:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	      }
 555:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	    __catch(...)
 556:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	      {
 557:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 		_M_destroy_nodes(__new_start._M_node,
 558:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 				 this->_M_impl._M_start._M_node);
 559:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 		__throw_exception_again;
 560:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	      }
 561:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	  }
 562:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****         else if (__pos._M_cur == this->_M_impl._M_finish._M_cur)
 563:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	  {
 564:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	    iterator __new_finish = _M_reserve_elements_at_back(__n);
 565:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	    __try
 566:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	      {
 567:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 		std::__uninitialized_copy_a(__first, __last,
 568:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 					    this->_M_impl._M_finish,
 569:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 					    _M_get_Tp_allocator());
 570:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 		this->_M_impl._M_finish = __new_finish;
 571:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	      }
 572:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	    __catch(...)
 573:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	      {
 574:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 		_M_destroy_nodes(this->_M_impl._M_finish._M_node + 1,
 575:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 				 __new_finish._M_node + 1);
 576:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 		__throw_exception_again;
 577:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	      }
 578:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	  }
 579:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****         else
 580:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****           _M_insert_aux(__pos, __first, __last, __n);
 581:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       }
 582:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 
 583:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****   template<typename _Tp, typename _Alloc>
 584:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** #if __cplusplus >= 201103L
 585:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****     template<typename... _Args>
 586:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       typename deque<_Tp, _Alloc>::iterator
 587:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       deque<_Tp, _Alloc>::
 588:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       _M_insert_aux(iterator __pos, _Args&&... __args)
 589:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       {
 590:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	value_type __x_copy(std::forward<_Args>(__args)...); // XXX copy
 591:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** #else
 592:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****     typename deque<_Tp, _Alloc>::iterator
 593:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       deque<_Tp, _Alloc>::
 594:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       _M_insert_aux(iterator __pos, const value_type& __x)
 595:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       {
 596:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	value_type __x_copy = __x; // XXX copy
 597:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** #endif
 598:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	difference_type __index = __pos - this->_M_impl._M_start;
 599:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	if (static_cast<size_type>(__index) < size() / 2)
 600:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	  {
 601:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	    push_front(_GLIBCXX_MOVE(front()));
 602:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	    iterator __front1 = this->_M_impl._M_start;
 603:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	    ++__front1;
 604:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	    iterator __front2 = __front1;
 605:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	    ++__front2;
 606:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	    __pos = this->_M_impl._M_start + __index;
 607:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	    iterator __pos1 = __pos;
 608:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	    ++__pos1;
 609:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	    _GLIBCXX_MOVE3(__front2, __pos1, __front1);
 610:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	  }
 611:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	else
 612:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	  {
 613:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	    push_back(_GLIBCXX_MOVE(back()));
 614:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	    iterator __back1 = this->_M_impl._M_finish;
 615:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	    --__back1;
 616:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	    iterator __back2 = __back1;
 617:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	    --__back2;
 618:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	    __pos = this->_M_impl._M_start + __index;
 619:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	    _GLIBCXX_MOVE_BACKWARD3(__pos, __back2, __back1);
 620:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	  }
 621:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	*__pos = _GLIBCXX_MOVE(__x_copy);
 622:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	return __pos;
 623:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       }
 624:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 
 625:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****   template <typename _Tp, typename _Alloc>
 626:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****     void
 627:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****     deque<_Tp, _Alloc>::
 628:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****     _M_insert_aux(iterator __pos, size_type __n, const value_type& __x)
 629:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****     {
 630:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       const difference_type __elems_before = __pos - this->_M_impl._M_start;
 631:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       const size_type __length = this->size();
 632:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       value_type __x_copy = __x;
 633:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       if (__elems_before < difference_type(__length / 2))
 634:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	{
 635:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	  iterator __new_start = _M_reserve_elements_at_front(__n);
 636:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	  iterator __old_start = this->_M_impl._M_start;
 637:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	  __pos = this->_M_impl._M_start + __elems_before;
 638:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	  __try
 639:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	    {
 640:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	      if (__elems_before >= difference_type(__n))
 641:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 		{
 642:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 		  iterator __start_n = (this->_M_impl._M_start
 643:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 					+ difference_type(__n));
 644:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 		  std::__uninitialized_move_a(this->_M_impl._M_start,
 645:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 					      __start_n, __new_start,
 646:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 					      _M_get_Tp_allocator());
 647:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 		  this->_M_impl._M_start = __new_start;
 648:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 		  _GLIBCXX_MOVE3(__start_n, __pos, __old_start);
 649:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 		  std::fill(__pos - difference_type(__n), __pos, __x_copy);
 650:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 		}
 651:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	      else
 652:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 		{
 653:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 		  std::__uninitialized_move_fill(this->_M_impl._M_start,
 654:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 						 __pos, __new_start,
 655:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 						 this->_M_impl._M_start,
 656:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 						 __x_copy,
 657:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 						 _M_get_Tp_allocator());
 658:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 		  this->_M_impl._M_start = __new_start;
 659:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 		  std::fill(__old_start, __pos, __x_copy);
 660:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 		}
 661:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	    }
 662:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	  __catch(...)
 663:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	    {
 664:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	      _M_destroy_nodes(__new_start._M_node,
 665:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 			       this->_M_impl._M_start._M_node);
 666:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	      __throw_exception_again;
 667:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	    }
 668:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	}
 669:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       else
 670:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	{
 671:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	  iterator __new_finish = _M_reserve_elements_at_back(__n);
 672:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	  iterator __old_finish = this->_M_impl._M_finish;
 673:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	  const difference_type __elems_after =
 674:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	    difference_type(__length) - __elems_before;
 675:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	  __pos = this->_M_impl._M_finish - __elems_after;
 676:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	  __try
 677:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	    {
 678:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	      if (__elems_after > difference_type(__n))
 679:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 		{
 680:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 		  iterator __finish_n = (this->_M_impl._M_finish
 681:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 					 - difference_type(__n));
 682:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 		  std::__uninitialized_move_a(__finish_n,
 683:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 					      this->_M_impl._M_finish,
 684:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 					      this->_M_impl._M_finish,
 685:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 					      _M_get_Tp_allocator());
 686:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 		  this->_M_impl._M_finish = __new_finish;
 687:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 		  _GLIBCXX_MOVE_BACKWARD3(__pos, __finish_n, __old_finish);
 688:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 		  std::fill(__pos, __pos + difference_type(__n), __x_copy);
 689:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 		}
 690:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	      else
 691:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 		{
 692:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 		  std::__uninitialized_fill_move(this->_M_impl._M_finish,
 693:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 						 __pos + difference_type(__n),
 694:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 						 __x_copy, __pos,
 695:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 						 this->_M_impl._M_finish,
 696:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 						 _M_get_Tp_allocator());
 697:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 		  this->_M_impl._M_finish = __new_finish;
 698:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 		  std::fill(__pos, __old_finish, __x_copy);
 699:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 		}
 700:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	    }
 701:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	  __catch(...)
 702:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	    {
 703:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	      _M_destroy_nodes(this->_M_impl._M_finish._M_node + 1,
 704:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 			       __new_finish._M_node + 1);
 705:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	      __throw_exception_again;
 706:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	    }
 707:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	}
 708:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****     }
 709:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 
 710:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****   template <typename _Tp, typename _Alloc>
 711:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****     template <typename _ForwardIterator>
 712:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       void
 713:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       deque<_Tp, _Alloc>::
 714:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       _M_insert_aux(iterator __pos,
 715:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****                     _ForwardIterator __first, _ForwardIterator __last,
 716:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****                     size_type __n)
 717:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       {
 718:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****         const difference_type __elemsbefore = __pos - this->_M_impl._M_start;
 719:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****         const size_type __length = size();
 720:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****         if (static_cast<size_type>(__elemsbefore) < __length / 2)
 721:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	  {
 722:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	    iterator __new_start = _M_reserve_elements_at_front(__n);
 723:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	    iterator __old_start = this->_M_impl._M_start;
 724:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	    __pos = this->_M_impl._M_start + __elemsbefore;
 725:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	    __try
 726:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	      {
 727:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 		if (__elemsbefore >= difference_type(__n))
 728:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 		  {
 729:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 		    iterator __start_n = (this->_M_impl._M_start
 730:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 					  + difference_type(__n));
 731:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 		    std::__uninitialized_move_a(this->_M_impl._M_start,
 732:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 						__start_n, __new_start,
 733:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 						_M_get_Tp_allocator());
 734:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 		    this->_M_impl._M_start = __new_start;
 735:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 		    _GLIBCXX_MOVE3(__start_n, __pos, __old_start);
 736:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 		    std::copy(__first, __last, __pos - difference_type(__n));
 737:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 		  }
 738:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 		else
 739:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 		  {
 740:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 		    _ForwardIterator __mid = __first;
 741:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 		    std::advance(__mid, difference_type(__n) - __elemsbefore);
 742:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 		    std::__uninitialized_move_copy(this->_M_impl._M_start,
 743:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 						   __pos, __first, __mid,
 744:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 						   __new_start,
 745:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 						   _M_get_Tp_allocator());
 746:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 		    this->_M_impl._M_start = __new_start;
 747:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 		    std::copy(__mid, __last, __old_start);
 748:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 		  }
 749:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	      }
 750:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	    __catch(...)
 751:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	      {
 752:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 		_M_destroy_nodes(__new_start._M_node,
 753:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 				 this->_M_impl._M_start._M_node);
 754:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 		__throw_exception_again;
 755:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	      }
 756:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	  }
 757:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****         else
 758:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****         {
 759:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****           iterator __new_finish = _M_reserve_elements_at_back(__n);
 760:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****           iterator __old_finish = this->_M_impl._M_finish;
 761:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****           const difference_type __elemsafter =
 762:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****             difference_type(__length) - __elemsbefore;
 763:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****           __pos = this->_M_impl._M_finish - __elemsafter;
 764:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****           __try
 765:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****             {
 766:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****               if (__elemsafter > difference_type(__n))
 767:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 		{
 768:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 		  iterator __finish_n = (this->_M_impl._M_finish
 769:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 					 - difference_type(__n));
 770:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 		  std::__uninitialized_move_a(__finish_n,
 771:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 					      this->_M_impl._M_finish,
 772:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 					      this->_M_impl._M_finish,
 773:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 					      _M_get_Tp_allocator());
 774:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 		  this->_M_impl._M_finish = __new_finish;
 775:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 		  _GLIBCXX_MOVE_BACKWARD3(__pos, __finish_n, __old_finish);
 776:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 		  std::copy(__first, __last, __pos);
 777:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 		}
 778:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****               else
 779:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 		{
 780:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 		  _ForwardIterator __mid = __first;
 781:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 		  std::advance(__mid, __elemsafter);
 782:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 		  std::__uninitialized_copy_move(__mid, __last, __pos,
 783:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 						 this->_M_impl._M_finish,
 784:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 						 this->_M_impl._M_finish,
 785:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 						 _M_get_Tp_allocator());
 786:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 		  this->_M_impl._M_finish = __new_finish;
 787:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 		  std::copy(__first, __mid, __pos);
 788:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 		}
 789:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****             }
 790:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****           __catch(...)
 791:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****             {
 792:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****               _M_destroy_nodes(this->_M_impl._M_finish._M_node + 1,
 793:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 			       __new_finish._M_node + 1);
 794:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****               __throw_exception_again;
 795:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****             }
 796:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****         }
 797:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       }
 798:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 
 799:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****    template<typename _Tp, typename _Alloc>
 800:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****      void
 801:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****      deque<_Tp, _Alloc>::
 802:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****      _M_destroy_data_aux(iterator __first, iterator __last)
 803:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****      {
 804:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****        for (_Map_pointer __node = __first._M_node + 1;
 805:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	    __node < __last._M_node; ++__node)
 806:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	 std::_Destroy(*__node, *__node + _S_buffer_size(),
 807:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 		       _M_get_Tp_allocator());
 808:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 
 809:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****        if (__first._M_node != __last._M_node)
 810:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	 {
 811:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	   std::_Destroy(__first._M_cur, __first._M_last,
 812:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 			 _M_get_Tp_allocator());
 813:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	   std::_Destroy(__last._M_first, __last._M_cur,
 814:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 			 _M_get_Tp_allocator());
 815:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	 }
 816:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****        else
 817:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	 std::_Destroy(__first._M_cur, __last._M_cur,
 818:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 		       _M_get_Tp_allocator());
 819:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****      }
 820:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 
 821:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****   template <typename _Tp, typename _Alloc>
 822:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****     void
 823:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****     deque<_Tp, _Alloc>::
 824:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****     _M_new_elements_at_front(size_type __new_elems)
 825:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****     {
 826:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       if (this->max_size() - this->size() < __new_elems)
 827:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	__throw_length_error(__N("deque::_M_new_elements_at_front"));
 828:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 
 829:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       const size_type __new_nodes = ((__new_elems + _S_buffer_size() - 1)
 830:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 				     / _S_buffer_size());
 831:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       _M_reserve_map_at_front(__new_nodes);
 832:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       size_type __i;
 833:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       __try
 834:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****         {
 835:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****           for (__i = 1; __i <= __new_nodes; ++__i)
 836:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****             *(this->_M_impl._M_start._M_node - __i) = this->_M_allocate_node();
 837:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****         }
 838:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       __catch(...)
 839:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****         {
 840:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****           for (size_type __j = 1; __j < __i; ++__j)
 841:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****             _M_deallocate_node(*(this->_M_impl._M_start._M_node - __j));
 842:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****           __throw_exception_again;
 843:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****         }
 844:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****     }
 845:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 
 846:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****   template <typename _Tp, typename _Alloc>
 847:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****     void
 848:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****     deque<_Tp, _Alloc>::
 849:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****     _M_new_elements_at_back(size_type __new_elems)
 850:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****     {
 851:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       if (this->max_size() - this->size() < __new_elems)
 852:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	__throw_length_error(__N("deque::_M_new_elements_at_back"));
 853:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 
 854:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       const size_type __new_nodes = ((__new_elems + _S_buffer_size() - 1)
 855:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 				     / _S_buffer_size());
 856:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       _M_reserve_map_at_back(__new_nodes);
 857:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       size_type __i;
 858:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       __try
 859:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****         {
 860:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****           for (__i = 1; __i <= __new_nodes; ++__i)
 861:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****             *(this->_M_impl._M_finish._M_node + __i) = this->_M_allocate_node();
 862:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****         }
 863:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       __catch(...)
 864:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****         {
 865:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****           for (size_type __j = 1; __j < __i; ++__j)
 866:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****             _M_deallocate_node(*(this->_M_impl._M_finish._M_node + __j));
 867:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****           __throw_exception_again;
 868:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****         }
 869:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****     }
 870:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 
 871:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****   template <typename _Tp, typename _Alloc>
 872:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****     void
 873:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****     deque<_Tp, _Alloc>::
 1625                             		.loc 11 873 0
 1626                             	.LVL172:
 1627 0000 6E 6D                   		pushm	r6-r13
 1628                             	.LCFI15:
 1629                             		.loc 11 873 0
 1630 0002 EF 17                   		mov.L	r1, r7
 1631                             	.LBB1072:
 874:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****     _M_reallocate_map(size_type __nodes_to_add, bool __add_at_front)
 875:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****     {
 876:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       const size_type __old_num_nodes
 877:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	= this->_M_impl._M_finish._M_node - this->_M_impl._M_start._M_node + 1;
 1632                             		.loc 11 877 0
 1633 0004 AA 19                   		mov.L	36[r1], r1
 1634                             	.LVL173:
 1635 0006 A9 7C                   		mov.L	20[r7], r4
 1636                             	.LBE1072:
 873:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****     _M_reallocate_map(size_type __nodes_to_add, bool __add_at_front)
 1637                             		.loc 11 873 0
 1638 0008 EF 2C                   		mov.L	r2, r12
 1639                             	.LBB1147:
 1640                             		.loc 11 877 0
 1641 000a FF 0D 41                		sub	r4, r1, r13
 1642 000d 6A 2D                   		shar	#2, r13
 1643 000f 62 1D                   		add	#1, r13
 1644                             	.LVL174:
 878:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       const size_type __new_num_nodes = __old_num_nodes + __nodes_to_add;
 1645                             		.loc 11 878 0
 1646 0011 FF 2B 2D                		add	r2, r13, r11
 1647                             	.LVL175:
 1648                             	.LBB1073:
 879:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 
 880:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       _Map_pointer __new_nstart;
 881:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       if (this->_M_impl._M_map_size > 2 * __new_num_nodes)
 1649                             		.loc 11 881 0
 1650 0014 ED 7E 01                		mov.L	4[r7], r14
 1651 0017 FF 2A BB                		add	r11, r11, r10
 1652                             	.LBE1073:
 1653                             	.LBE1147:
 873:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****     _M_reallocate_map(size_type __nodes_to_add, bool __add_at_front)
 1654                             		.loc 11 873 0
 1655 001a CF 39                   		mov.B	r3, r9
 1656                             	.LBB1148:
 1657                             	.LBB1139:
 1658                             		.loc 11 881 0
 1659 001c 47 AE                   		cmp	r10, r14
 1660 001e 25 2C                   		bleu	.L153
 882:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	{
 883:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	  __new_nstart = this->_M_impl._M_map + (this->_M_impl._M_map_size
 884:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 					 - __new_num_nodes) / 2
 885:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	                 + (__add_at_front ? __nodes_to_add : 0);
 1661                             		.loc 11 885 0
 1662 0020 FF 0B BE                		sub	r11, r14, r11
 1663                             	.LVL176:
 1664 0023 68 1B                   		shlr	#1, r11
 1665 0025 5B 39                   		movu.B	r3, r9
 1666 0027 EC 7A                   		mov.L	[r7], r10
 1667 0029 6C 2B                   		shll	#2, r11
 1668 002b 61 09                   		cmp	#0, r9
 1669 002d 14                      		beq	.L154
 1670                             		.loc 11 885 0 is_stmt 0 discriminator 1
 1671 002e FD C2 29                		shll	#2, r2, r9
 1672                             		.balign 8,3,1
 1673                             	.L154:
 1674                             		.loc 11 885 0 discriminator 3
 1675 0031 4B B9                   		add	r11, r9
 883:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 					 - __new_num_nodes) / 2
 1676                             		.loc 11 883 0 is_stmt 1 discriminator 3
 1677 0033 4B 9A                   		add	r9, r10
 1678                             	.LVL177:
 886:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	  if (__new_nstart < this->_M_impl._M_start._M_node)
 887:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	    std::copy(this->_M_impl._M_start._M_node,
 888:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 		      this->_M_impl._M_finish._M_node + 1,
 889:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 		      __new_nstart);
 1679                             		.loc 11 889 0 discriminator 3
 1680 0035 71 13 04                		add	#4, r1, r3
 1681                             	.LVL178:
 1682                             	.LBB1074:
 1683                             	.LBB1075:
 1684                             	.LBB1076:
 1685                             	.LBB1077:
 1686                             	.LBB1078:
 1687                             	.LBB1079:
 1688                             		.file 12 "c:\\progra~2\\gccfor~2.201\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\4.8.0.201602-gnurx\\bi
   1:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** // Core algorithmic facilities -*- C++ -*-
   2:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 
   3:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** // Copyright (C) 2001-2013 Free Software Foundation, Inc.
   4:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** //
   5:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** // software; you can redistribute it and/or modify it under the
   7:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** // terms of the GNU General Public License as published by the
   8:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** // any later version.
  10:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 
  11:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** // This library is distributed in the hope that it will be useful,
  12:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** // GNU General Public License for more details.
  15:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 
  16:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 
  20:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** // You should have received a copy of the GNU General Public License and
  21:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** // <http://www.gnu.org/licenses/>.
  24:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 
  25:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** /*
  26:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****  *
  27:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****  * Copyright (c) 1994
  28:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****  * Hewlett-Packard Company
  29:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****  *
  30:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****  * provided that the above copyright notice appear in all copies and
  33:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****  * that both that copyright notice and this permission notice appear
  34:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****  * representations about the suitability of this software for any
  36:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****  *
  38:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****  *
  39:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****  * Copyright (c) 1996-1998
  40:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****  * Silicon Graphics Computer Systems, Inc.
  41:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****  *
  42:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****  * provided that the above copyright notice appear in all copies and
  45:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****  * that both that copyright notice and this permission notice appear
  46:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****  * representations about the suitability of this software for any
  48:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****  */
  50:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 
  51:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** /** @file bits/stl_algobase.h
  52:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****  *  This is an internal header file, included by other library headers.
  53:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****  *  Do not attempt to use it directly. @headername{algorithm}
  54:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****  */
  55:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 
  56:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** #ifndef _STL_ALGOBASE_H
  57:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** #define _STL_ALGOBASE_H 1
  58:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 
  59:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** #include <bits/c++config.h>
  60:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** #include <bits/functexcept.h>
  61:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** #include <bits/cpp_type_traits.h>
  62:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** #include <ext/type_traits.h>
  63:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** #include <ext/numeric_traits.h>
  64:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** #include <bits/stl_pair.h>
  65:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** #include <bits/stl_iterator_base_types.h>
  66:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** #include <bits/stl_iterator_base_funcs.h>
  67:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** #include <bits/stl_iterator.h>
  68:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** #include <bits/concept_check.h>
  69:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** #include <debug/debug.h>
  70:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** #include <bits/move.h> // For std::swap and _GLIBCXX_MOVE
  71:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 
  72:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** namespace std _GLIBCXX_VISIBILITY(default)
  73:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** {
  74:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  75:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 
  76:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** #if __cplusplus < 201103L
  77:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****   // See http://gcc.gnu.org/ml/libstdc++/2004-08/msg00167.html: in a
  78:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****   // nutshell, we are partially implementing the resolution of DR 187,
  79:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****   // when it's safe, i.e., the value_types are equal.
  80:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****   template<bool _BoolType>
  81:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****     struct __iter_swap
  82:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****     {
  83:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****       template<typename _ForwardIterator1, typename _ForwardIterator2>
  84:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****         static void
  85:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****         iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
  86:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****         {
  87:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****           typedef typename iterator_traits<_ForwardIterator1>::value_type
  88:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****             _ValueType1;
  89:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****           _ValueType1 __tmp = _GLIBCXX_MOVE(*__a);
  90:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****           *__a = _GLIBCXX_MOVE(*__b);
  91:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****           *__b = _GLIBCXX_MOVE(__tmp);
  92:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 	}
  93:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****     };
  94:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 
  95:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****   template<>
  96:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****     struct __iter_swap<true>
  97:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****     {
  98:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****       template<typename _ForwardIterator1, typename _ForwardIterator2>
  99:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****         static void 
 100:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****         iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 101:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****         {
 102:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****           swap(*__a, *__b);
 103:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****         }
 104:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****     };
 105:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** #endif
 106:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 
 107:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****   /**
 108:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****    *  @brief Swaps the contents of two iterators.
 109:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****    *  @ingroup mutating_algorithms
 110:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****    *  @param  __a  An iterator.
 111:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****    *  @param  __b  Another iterator.
 112:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****    *  @return   Nothing.
 113:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****    *
 114:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****    *  This function swaps the values pointed to by two iterators, not the
 115:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****    *  iterators themselves.
 116:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****   */
 117:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
 118:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****     inline void
 119:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****     iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 120:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****     {
 121:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****       // concept requirements
 122:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 123:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 				  _ForwardIterator1>)
 124:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 125:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 				  _ForwardIterator2>)
 126:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 
 127:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** #if __cplusplus < 201103L
 128:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator1>::value_type
 129:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 	_ValueType1;
 130:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator2>::value_type
 131:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 	_ValueType2;
 132:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 
 133:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<_ValueType1,
 134:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 				  _ValueType2>)
 135:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<_ValueType2,
 136:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 				  _ValueType1>)
 137:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 
 138:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator1>::reference
 139:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 	_ReferenceType1;
 140:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator2>::reference
 141:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 	_ReferenceType2;
 142:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****       std::__iter_swap<__are_same<_ValueType1, _ValueType2>::__value
 143:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 	&& __are_same<_ValueType1&, _ReferenceType1>::__value
 144:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 	&& __are_same<_ValueType2&, _ReferenceType2>::__value>::
 145:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 	iter_swap(__a, __b);
 146:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** #else
 147:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****       swap(*__a, *__b);
 148:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** #endif
 149:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****     }
 150:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 
 151:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****   /**
 152:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****    *  @brief Swap the elements of two sequences.
 153:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****    *  @ingroup mutating_algorithms
 154:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****    *  @param  __first1  A forward iterator.
 155:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****    *  @param  __last1   A forward iterator.
 156:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****    *  @param  __first2  A forward iterator.
 157:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****    *  @return   An iterator equal to @p first2+(last1-first1).
 158:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****    *
 159:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****    *  Swaps each element in the range @p [first1,last1) with the
 160:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****    *  corresponding element in the range @p [first2,(last1-first1)).
 161:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****    *  The ranges must not overlap.
 162:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****   */
 163:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
 164:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****     _ForwardIterator2
 165:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****     swap_ranges(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
 166:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 		_ForwardIterator2 __first2)
 167:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****     {
 168:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****       // concept requirements
 169:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 170:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 				  _ForwardIterator1>)
 171:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 172:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 				  _ForwardIterator2>)
 173:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****       __glibcxx_requires_valid_range(__first1, __last1);
 174:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 
 175:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****       for (; __first1 != __last1; ++__first1, ++__first2)
 176:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 	std::iter_swap(__first1, __first2);
 177:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****       return __first2;
 178:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****     }
 179:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 
 180:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****   /**
 181:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****    *  @brief This does what you think it does.
 182:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****    *  @ingroup sorting_algorithms
 183:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 184:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 185:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****    *  @return   The lesser of the parameters.
 186:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****    *
 187:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****    *  This is the simple classic generic implementation.  It will work on
 188:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****    *  temporary expressions, since they are only evaluated once, unlike a
 189:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****    *  preprocessor macro.
 190:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****   */
 191:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****   template<typename _Tp>
 192:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****     inline const _Tp&
 193:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****     min(const _Tp& __a, const _Tp& __b)
 194:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****     {
 195:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****       // concept requirements
 196:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
 197:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****       //return __b < __a ? __b : __a;
 198:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****       if (__b < __a)
 199:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 	return __b;
 200:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****       return __a;
 201:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****     }
 202:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 
 203:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****   /**
 204:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****    *  @brief This does what you think it does.
 205:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****    *  @ingroup sorting_algorithms
 206:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 207:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 208:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****    *  @return   The greater of the parameters.
 209:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****    *
 210:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****    *  This is the simple classic generic implementation.  It will work on
 211:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****    *  temporary expressions, since they are only evaluated once, unlike a
 212:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****    *  preprocessor macro.
 213:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****   */
 214:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****   template<typename _Tp>
 215:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****     inline const _Tp&
 216:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****     max(const _Tp& __a, const _Tp& __b)
 217:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****     {
 218:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****       // concept requirements
 219:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
 220:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****       //return  __a < __b ? __b : __a;
 221:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****       if (__a < __b)
 222:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 	return __b;
 223:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****       return __a;
 224:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****     }
 225:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 
 226:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****   /**
 227:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****    *  @brief This does what you think it does.
 228:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****    *  @ingroup sorting_algorithms
 229:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 230:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 231:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****    *  @param  __comp  A @link comparison_functors comparison functor@endlink.
 232:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****    *  @return   The lesser of the parameters.
 233:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****    *
 234:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****    *  This will work on temporary expressions, since they are only evaluated
 235:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****    *  once, unlike a preprocessor macro.
 236:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****   */
 237:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****   template<typename _Tp, typename _Compare>
 238:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****     inline const _Tp&
 239:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****     min(const _Tp& __a, const _Tp& __b, _Compare __comp)
 240:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****     {
 241:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****       //return __comp(__b, __a) ? __b : __a;
 242:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****       if (__comp(__b, __a))
 243:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 	return __b;
 244:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****       return __a;
 245:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****     }
 246:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 
 247:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****   /**
 248:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****    *  @brief This does what you think it does.
 249:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****    *  @ingroup sorting_algorithms
 250:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 251:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 252:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****    *  @param  __comp  A @link comparison_functors comparison functor@endlink.
 253:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****    *  @return   The greater of the parameters.
 254:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****    *
 255:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****    *  This will work on temporary expressions, since they are only evaluated
 256:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****    *  once, unlike a preprocessor macro.
 257:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****   */
 258:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****   template<typename _Tp, typename _Compare>
 259:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****     inline const _Tp&
 260:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****     max(const _Tp& __a, const _Tp& __b, _Compare __comp)
 261:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****     {
 262:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****       //return __comp(__a, __b) ? __b : __a;
 263:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****       if (__comp(__a, __b))
 264:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 	return __b;
 265:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****       return __a;
 266:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****     }
 267:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 
 268:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****   // If _Iterator is a __normal_iterator return its base (a plain pointer,
 269:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****   // normally) otherwise return it untouched.  See copy, fill, ... 
 270:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****   template<typename _Iterator>
 271:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****     struct _Niter_base
 272:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****     : _Iter_base<_Iterator, __is_normal_iterator<_Iterator>::__value>
 273:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****     { };
 274:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 
 275:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****   template<typename _Iterator>
 276:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****     inline typename _Niter_base<_Iterator>::iterator_type
 277:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****     __niter_base(_Iterator __it)
 278:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****     { return std::_Niter_base<_Iterator>::_S_base(__it); }
 279:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 
 280:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****   // Likewise, for move_iterator.
 281:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****   template<typename _Iterator>
 282:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****     struct _Miter_base
 283:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****     : _Iter_base<_Iterator, __is_move_iterator<_Iterator>::__value>
 284:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****     { };
 285:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 
 286:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****   template<typename _Iterator>
 287:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****     inline typename _Miter_base<_Iterator>::iterator_type
 288:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****     __miter_base(_Iterator __it)
 289:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****     { return std::_Miter_base<_Iterator>::_S_base(__it); }
 290:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 
 291:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****   // All of these auxiliary structs serve two purposes.  (1) Replace
 292:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****   // calls to copy with memmove whenever possible.  (Memmove, not memcpy,
 293:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****   // because the input and output ranges are permitted to overlap.)
 294:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****   // (2) If we're using random access iterators, then write the loop as
 295:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****   // a for loop with an explicit count.
 296:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 
 297:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****   template<bool, bool, typename>
 298:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****     struct __copy_move
 299:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****     {
 300:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****       template<typename _II, typename _OI>
 301:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****         static _OI
 302:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****         __copy_m(_II __first, _II __last, _OI __result)
 303:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****         {
 304:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 	  for (; __first != __last; ++__result, ++__first)
 305:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 	    *__result = *__first;
 306:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 	  return __result;
 307:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 	}
 308:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****     };
 309:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 
 310:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** #if __cplusplus >= 201103L
 311:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****   template<typename _Category>
 312:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****     struct __copy_move<true, false, _Category>
 313:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****     {
 314:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****       template<typename _II, typename _OI>
 315:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****         static _OI
 316:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****         __copy_m(_II __first, _II __last, _OI __result)
 317:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****         {
 318:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 	  for (; __first != __last; ++__result, ++__first)
 319:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 	    *__result = std::move(*__first);
 320:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 	  return __result;
 321:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 	}
 322:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****     };
 323:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** #endif
 324:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 
 325:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****   template<>
 326:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****     struct __copy_move<false, false, random_access_iterator_tag>
 327:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****     {
 328:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****       template<typename _II, typename _OI>
 329:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****         static _OI
 330:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****         __copy_m(_II __first, _II __last, _OI __result)
 331:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****         { 
 332:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 	  typedef typename iterator_traits<_II>::difference_type _Distance;
 333:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 	  for(_Distance __n = __last - __first; __n > 0; --__n)
 334:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 	    {
 335:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 	      *__result = *__first;
 336:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 	      ++__first;
 337:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 	      ++__result;
 338:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 	    }
 339:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 	  return __result;
 340:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 	}
 341:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****     };
 342:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 
 343:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** #if __cplusplus >= 201103L
 344:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****   template<>
 345:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****     struct __copy_move<true, false, random_access_iterator_tag>
 346:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****     {
 347:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****       template<typename _II, typename _OI>
 348:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****         static _OI
 349:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****         __copy_m(_II __first, _II __last, _OI __result)
 350:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****         { 
 351:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 	  typedef typename iterator_traits<_II>::difference_type _Distance;
 352:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 	  for(_Distance __n = __last - __first; __n > 0; --__n)
 353:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 	    {
 354:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 	      *__result = std::move(*__first);
 355:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 	      ++__first;
 356:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 	      ++__result;
 357:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 	    }
 358:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 	  return __result;
 359:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 	}
 360:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****     };
 361:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** #endif
 362:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 
 363:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****   template<bool _IsMove>
 364:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****     struct __copy_move<_IsMove, true, random_access_iterator_tag>
 365:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****     {
 366:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****       template<typename _Tp>
 367:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****         static _Tp*
 368:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****         __copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
 369:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****         {
 370:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 	  const ptrdiff_t _Num = __last - __first;
 1689                             		.loc 12 370 0 discriminator 3
 1690 0038 43 43                   		sub	r4, r3
 1691                             	.LBE1079:
 1692                             	.LBE1078:
 1693                             	.LBE1077:
 1694                             	.LBE1076:
 1695                             	.LBE1075:
 1696                             	.LBE1074:
 886:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	  if (__new_nstart < this->_M_impl._M_start._M_node)
 1697                             		.loc 11 886 0 discriminator 3
 1698 003a 47 A4                   		cmp	r10, r4
 1699 003c 24 05 38 87 00          		bleu	.L155
 1700                             	.LVL179:
 1701                             	.LBB1090:
 1702                             	.LBB1088:
 1703                             	.LBB1086:
 1704                             	.LBB1084:
 1705                             	.LBB1082:
 1706                             	.LBB1080:
 1707                             		.loc 12 370 0
 1708 0041 6A 23                   		shar	#2, r3
 1709                             	.LVL180:
 371:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 	  if (_Num)
 1710                             		.loc 12 371 0
 1711 0043 3B 99 00                		bne	.L156
 1712 0046 6C 2D                   		shll	#2, r13
 1713                             	.LVL181:
 1714 0048 2E 58                   		bra	.L157
 1715                             	.LVL182:
 1716                             	.L153:
 1717                             	.LBE1080:
 1718                             	.LBE1082:
 1719                             	.LBE1084:
 1720                             	.LBE1086:
 1721                             	.LBE1088:
 1722                             	.LBE1090:
 1723                             	.LBB1091:
 890:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	  else
 891:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	    std::copy_backward(this->_M_impl._M_start._M_node,
 892:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 			       this->_M_impl._M_finish._M_node + 1,
 893:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 			       __new_nstart + __old_num_nodes);
 894:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	}
 895:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       else
 896:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	{
 897:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	  size_type __new_map_size = this->_M_impl._M_map_size
 898:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	                             + std::max(this->_M_impl._M_map_size,
 899:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 						__nodes_to_add) + 2;
 1724                             		.loc 11 899 0
 1725 004a 71 E8 02                		add	#2, r14, r8
 1726 004d 47 E2                   		cmp	r14, r2
 1727 004f 23 04                   		bltu 1f
 1728 0051 EF 2E                   		mov r2, r14
 1729                             	1:
 1730 0053 4B E8                   		add	r14, r8
 1731                             	.LVL183:
 1732                             	.LBB1092:
 1733                             	.LBB1093:
 1734                             	.LBB1094:
 101:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h **** 	  std::__throw_bad_alloc();
 1735                             		.loc 8 101 0
 1736 0055 74 08 FF FF FF 3F       		cmp	#0x3fffffff, r8
 1737 005b 25 05 38 8D 00          		bgtu	.L171
 104:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h ****       }
 1738                             		.loc 8 104 0
 1739 0060 FD C2 81                		shll	#2, r8, r1
 1740 0063 05 00 00 00             		bsr	__Znwm
 1741                             	.LVL184:
 1742 0067 EF 16                   		mov.L	r1, r6
 1743                             	.LBE1094:
 1744                             	.LBE1093:
 1745                             	.LBE1092:
 900:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 
 901:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	  _Map_pointer __new_map = this->_M_allocate_map(__new_map_size);
 902:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	  __new_nstart = __new_map + (__new_map_size - __new_num_nodes) / 2
 903:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	                 + (__add_at_front ? __nodes_to_add : 0);
 1746                             		.loc 11 903 0
 1747 0069 FF 0B B8                		sub	r11, r8, r11
 1748                             	.LVL185:
 1749 006c 68 1B                   		shlr	#1, r11
 1750 006e 5B 99                   		movu.B	r9, r9
 1751 0070 6C 2B                   		shll	#2, r11
 1752 0072 61 09                   		cmp	#0, r9
 1753 0074 14                      		beq	.L159
 1754                             		.loc 11 903 0 is_stmt 0 discriminator 1
 1755 0075 FD C2 C9                		shll	#2, r12, r9
 1756                             	.LVL186:
 1757                             		.balign 8,3,1
 1758                             	.L159:
 904:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	  std::copy(this->_M_impl._M_start._M_node,
 905:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 		    this->_M_impl._M_finish._M_node + 1,
 906:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 		    __new_nstart);
 1759                             		.loc 11 906 0 is_stmt 1 discriminator 3
 1760 0078 AA 7B                   		mov.L	36[r7], r3
 1761 007a A9 7A                   		mov.L	20[r7], r2
 1762 007c 62 43                   		add	#4, r3
 1763                             	.LBB1097:
 1764                             	.LBB1098:
 1765                             	.LBB1099:
 1766                             	.LBB1100:
 1767                             	.LBB1101:
 1768                             	.LBB1102:
 370:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 	  if (_Num)
 1769                             		.loc 12 370 0 discriminator 3
 1770 007e 43 23                   		sub	r2, r3
 1771                             	.LBE1102:
 1772                             	.LBE1101:
 1773                             	.LBE1100:
 1774                             	.LBE1099:
 1775                             	.LBE1098:
 1776                             	.LBE1097:
 903:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	  std::copy(this->_M_impl._M_start._M_node,
 1777                             		.loc 11 903 0 discriminator 3
 1778 0080 FF 2A B9                		add	r11, r9, r10
 1779                             	.LBB1113:
 1780                             	.LBB1111:
 1781                             	.LBB1109:
 1782                             	.LBB1107:
 1783                             	.LBB1105:
 1784                             	.LBB1103:
 370:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 	  if (_Num)
 1785                             		.loc 12 370 0 discriminator 3
 1786 0083 6A 23                   		shar	#2, r3
 1787                             	.LBE1103:
 1788                             	.LBE1105:
 1789                             	.LBE1107:
 1790                             	.LBE1109:
 1791                             	.LBE1111:
 1792                             	.LBE1113:
 902:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	                 + (__add_at_front ? __nodes_to_add : 0);
 1793                             		.loc 11 902 0 discriminator 3
 1794 0085 4B 6A                   		add	r6, r10
 1795                             	.LVL187:
 1796                             	.LBB1114:
 1797                             	.LBB1112:
 1798                             	.LBB1110:
 1799                             	.LBB1108:
 1800                             	.LBB1106:
 1801                             	.LBB1104:
 1802                             		.loc 12 371 0 discriminator 3
 1803 0087 61 03                   		cmp	#0, r3
 1804 0089 11                      		beq	.L160
 372:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 1805                             		.loc 12 372 0
 1806 008a EF A1                   		mov.L	r10, r1
 1807 008c 6C 23                   		shll	#2, r3
 1808                             	.LVL188:
 1809 008e 05 00 00 00             		bsr	_memmove
 1810                             	.LVL189:
 1811                             		.balign 8,3,1
 1812                             	.L160:
 1813                             	.LBE1104:
 1814                             	.LBE1106:
 1815                             	.LBE1108:
 1816                             	.LBE1110:
 1817                             	.LBE1112:
 1818                             	.LBE1114:
 1819                             	.LBB1115:
 1820                             	.LBB1116:
 1821                             	.LBB1117:
 1822                             		.loc 8 110 0
 1823 0092 EC 71                   		mov.L	[r7], r1
 1824 0094 6C 2D                   		shll	#2, r13
 1825                             	.LVL190:
 1826 0096 05 00 00 00             		bsr	__ZdlPv
 1827                             	.LVL191:
 1828                             	.LBE1117:
 1829                             	.LBE1116:
 1830                             	.LBE1115:
 907:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	  _M_deallocate_map(this->_M_impl._M_map, this->_M_impl._M_map_size);
 908:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 
 909:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	  this->_M_impl._M_map = __new_map;
 1831                             		.loc 11 909 0
 1832 009a E3 76                   		mov.L	r6, [r7]
 910:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	  this->_M_impl._M_map_size = __new_map_size;
 1833                             		.loc 11 910 0
 1834 009c E7 78 01                		mov.L	r8, 4[r7]
 1835                             	.LVL192:
 1836 009f 03                      		.balign 8,3,5
 1837                             	.L157:
 1838                             	.LBE1091:
 1839                             	.LBE1139:
 1840                             	.LBB1140:
 1841                             	.LBB1141:
 236:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	_M_first = *__new_node;
 1842                             		.loc 7 236 0
 1843 00a0 E7 7A 05                		mov.L	r10, 20[r7]
 237:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	_M_last = _M_first + difference_type(_S_buffer_size());
 1844                             		.loc 7 237 0
 1845 00a3 EC AB                   		mov.L	[r10], r11
 1846                             	.LBE1141:
 1847                             	.LBE1140:
 911:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	}
 912:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 
 913:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       this->_M_impl._M_start._M_set_node(__new_nstart);
 914:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       this->_M_impl._M_finish._M_set_node(__new_nstart + __old_num_nodes - 1);
 1848                             		.loc 11 914 0
 1849 00a5 60 4D                   		sub	#4, r13
 1850 00a7 4B DA                   		add	r13, r10
 1851                             	.LVL193:
 1852                             	.LBB1143:
 1853                             	.LBB1142:
 238:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       }
 1854                             		.loc 7 238 0
 1855 00a9 72 BC 00 02             		add	#0x200, r11, r12
 1856                             	.LVL194:
 237:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	_M_last = _M_first + difference_type(_S_buffer_size());
 1857                             		.loc 7 237 0
 1858 00ad E7 7B 03                		mov.L	r11, 12[r7]
 1859                             	.LVL195:
 238:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       }
 1860                             		.loc 7 238 0
 1861 00b0 E7 7C 04                		mov.L	r12, 16[r7]
 1862                             	.LVL196:
 1863                             	.LBE1142:
 1864                             	.LBE1143:
 1865                             	.LBB1144:
 1866                             	.LBB1145:
 236:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	_M_first = *__new_node;
 1867                             		.loc 7 236 0
 1868 00b3 E7 7A 09                		mov.L	r10, 36[r7]
 237:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	_M_last = _M_first + difference_type(_S_buffer_size());
 1869                             		.loc 7 237 0
 1870 00b6 EC AA                   		mov.L	[r10], r10
 1871                             	.LVL197:
 238:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       }
 1872                             		.loc 7 238 0
 1873 00b8 72 AB 00 02             		add	#0x200, r10, r11
 237:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	_M_last = _M_first + difference_type(_S_buffer_size());
 1874                             		.loc 7 237 0
 1875 00bc E7 7A 07                		mov.L	r10, 28[r7]
 238:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       }
 1876                             		.loc 7 238 0
 1877 00bf E7 7B 08                		mov.L	r11, 32[r7]
 1878                             	.LBE1145:
 1879                             	.LBE1144:
 1880                             	.LBE1148:
 915:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****     }
 1881                             		.loc 11 915 0
 1882 00c2 3F 6D 08                		rtsd	#32, r6-r13
 1883                             	.LVL198:
 1884                             	.L155:
 1885                             	.LBB1149:
 1886                             	.LBB1146:
 1887                             	.LBB1119:
 1888                             	.LBB1120:
 1889                             	.LBB1121:
 1890                             	.LBB1122:
 1891                             	.LBB1123:
 1892                             	.LBB1124:
 373:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 	  return __result + _Num;
 374:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 	}
 375:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****     };
 376:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 
 377:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****   template<bool _IsMove, typename _II, typename _OI>
 378:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****     inline _OI
 379:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****     __copy_move_a(_II __first, _II __last, _OI __result)
 380:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****     {
 381:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****       typedef typename iterator_traits<_II>::value_type _ValueTypeI;
 382:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****       typedef typename iterator_traits<_OI>::value_type _ValueTypeO;
 383:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****       typedef typename iterator_traits<_II>::iterator_category _Category;
 384:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****       const bool __simple = (__is_trivial(_ValueTypeI)
 385:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 	                     && __is_pointer<_II>::__value
 386:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 	                     && __is_pointer<_OI>::__value
 387:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 			     && __are_same<_ValueTypeI, _ValueTypeO>::__value);
 388:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 
 389:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****       return std::__copy_move<_IsMove, __simple,
 390:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 	                      _Category>::__copy_m(__first, __last, __result);
 391:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****     }
 392:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 
 393:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****   // Helpers for streambuf iterators (either istream or ostream).
 394:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****   // NB: avoid including <iosfwd>, relatively large.
 395:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****   template<typename _CharT>
 396:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****     struct char_traits;
 397:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 
 398:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****   template<typename _CharT, typename _Traits>
 399:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****     class istreambuf_iterator;
 400:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 
 401:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****   template<typename _CharT, typename _Traits>
 402:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****     class ostreambuf_iterator;
 403:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 
 404:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 405:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, 
 406:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 	     ostreambuf_iterator<_CharT, char_traits<_CharT> > >::__type
 407:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****     __copy_move_a2(_CharT*, _CharT*,
 408:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 		   ostreambuf_iterator<_CharT, char_traits<_CharT> >);
 409:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 
 410:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 411:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, 
 412:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 	     ostreambuf_iterator<_CharT, char_traits<_CharT> > >::__type
 413:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****     __copy_move_a2(const _CharT*, const _CharT*,
 414:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 		   ostreambuf_iterator<_CharT, char_traits<_CharT> >);
 415:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 
 416:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 417:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value,
 418:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 				    _CharT*>::__type
 419:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****     __copy_move_a2(istreambuf_iterator<_CharT, char_traits<_CharT> >,
 420:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 		   istreambuf_iterator<_CharT, char_traits<_CharT> >, _CharT*);
 421:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 
 422:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****   template<bool _IsMove, typename _II, typename _OI>
 423:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****     inline _OI
 424:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****     __copy_move_a2(_II __first, _II __last, _OI __result)
 425:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****     {
 426:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****       return _OI(std::__copy_move_a<_IsMove>(std::__niter_base(__first),
 427:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 					     std::__niter_base(__last),
 428:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 					     std::__niter_base(__result)));
 429:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****     }
 430:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 
 431:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****   /**
 432:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****    *  @brief Copies the range [first,last) into result.
 433:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****    *  @ingroup mutating_algorithms
 434:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****    *  @param  __first  An input iterator.
 435:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****    *  @param  __last   An input iterator.
 436:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****    *  @param  __result An output iterator.
 437:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****    *  @return   result + (first - last)
 438:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****    *
 439:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 440:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 441:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 442:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****    *  optimizations such as unrolling).  Result may not be contained within
 443:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****    *  [first,last); the copy_backward function should be used instead.
 444:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****    *
 445:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****    *  Note that the end of the output range is permitted to be contained
 446:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****    *  within [first,last).
 447:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****   */
 448:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****   template<typename _II, typename _OI>
 449:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****     inline _OI
 450:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****     copy(_II __first, _II __last, _OI __result)
 451:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****     {
 452:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****       // concept requirements
 453:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****       __glibcxx_function_requires(_InputIteratorConcept<_II>)
 454:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OI,
 455:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 	    typename iterator_traits<_II>::value_type>)
 456:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****       __glibcxx_requires_valid_range(__first, __last);
 457:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 
 458:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****       return (std::__copy_move_a2<__is_move_iterator<_II>::__value>
 459:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 	      (std::__miter_base(__first), std::__miter_base(__last),
 460:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 	       __result));
 461:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****     }
 462:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 
 463:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** #if __cplusplus >= 201103L
 464:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****   /**
 465:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****    *  @brief Moves the range [first,last) into result.
 466:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****    *  @ingroup mutating_algorithms
 467:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****    *  @param  __first  An input iterator.
 468:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****    *  @param  __last   An input iterator.
 469:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****    *  @param  __result An output iterator.
 470:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****    *  @return   result + (first - last)
 471:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****    *
 472:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 473:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 474:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 475:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****    *  optimizations such as unrolling).  Result may not be contained within
 476:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****    *  [first,last); the move_backward function should be used instead.
 477:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****    *
 478:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****    *  Note that the end of the output range is permitted to be contained
 479:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****    *  within [first,last).
 480:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****   */
 481:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****   template<typename _II, typename _OI>
 482:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****     inline _OI
 483:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****     move(_II __first, _II __last, _OI __result)
 484:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****     {
 485:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****       // concept requirements
 486:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****       __glibcxx_function_requires(_InputIteratorConcept<_II>)
 487:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OI,
 488:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 	    typename iterator_traits<_II>::value_type>)
 489:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****       __glibcxx_requires_valid_range(__first, __last);
 490:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 
 491:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****       return std::__copy_move_a2<true>(std::__miter_base(__first),
 492:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 				       std::__miter_base(__last), __result);
 493:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****     }
 494:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 
 495:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** #define _GLIBCXX_MOVE3(_Tp, _Up, _Vp) std::move(_Tp, _Up, _Vp)
 496:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** #else
 497:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** #define _GLIBCXX_MOVE3(_Tp, _Up, _Vp) std::copy(_Tp, _Up, _Vp)
 498:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** #endif
 499:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 
 500:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****   template<bool, bool, typename>
 501:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****     struct __copy_move_backward
 502:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****     {
 503:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****       template<typename _BI1, typename _BI2>
 504:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****         static _BI2
 505:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****         __copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
 506:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****         {
 507:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 	  while (__first != __last)
 508:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 	    *--__result = *--__last;
 509:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 	  return __result;
 510:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 	}
 511:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****     };
 512:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 
 513:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** #if __cplusplus >= 201103L
 514:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****   template<typename _Category>
 515:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****     struct __copy_move_backward<true, false, _Category>
 516:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****     {
 517:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****       template<typename _BI1, typename _BI2>
 518:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****         static _BI2
 519:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****         __copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
 520:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****         {
 521:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 	  while (__first != __last)
 522:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 	    *--__result = std::move(*--__last);
 523:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 	  return __result;
 524:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 	}
 525:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****     };
 526:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** #endif
 527:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 
 528:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****   template<>
 529:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****     struct __copy_move_backward<false, false, random_access_iterator_tag>
 530:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****     {
 531:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****       template<typename _BI1, typename _BI2>
 532:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****         static _BI2
 533:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****         __copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
 534:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****         {
 535:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 	  typename iterator_traits<_BI1>::difference_type __n;
 536:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 	  for (__n = __last - __first; __n > 0; --__n)
 537:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 	    *--__result = *--__last;
 538:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 	  return __result;
 539:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 	}
 540:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****     };
 541:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 
 542:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** #if __cplusplus >= 201103L
 543:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****   template<>
 544:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****     struct __copy_move_backward<true, false, random_access_iterator_tag>
 545:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****     {
 546:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****       template<typename _BI1, typename _BI2>
 547:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****         static _BI2
 548:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****         __copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
 549:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****         {
 550:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 	  typename iterator_traits<_BI1>::difference_type __n;
 551:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 	  for (__n = __last - __first; __n > 0; --__n)
 552:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 	    *--__result = std::move(*--__last);
 553:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 	  return __result;
 554:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 	}
 555:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****     };
 556:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** #endif
 557:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 
 558:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****   template<bool _IsMove>
 559:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****     struct __copy_move_backward<_IsMove, true, random_access_iterator_tag>
 560:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****     {
 561:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****       template<typename _Tp>
 562:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****         static _Tp*
 563:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****         __copy_move_b(const _Tp* __first, const _Tp* __last, _Tp* __result)
 564:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h ****         {
 565:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 	  const ptrdiff_t _Num = __last - __first;
 1893                             		.loc 12 565 0
 1894 00c5 6A 23                   		shar	#2, r3
 1895                             	.LBE1124:
 1896                             	.LBE1123:
 1897                             	.LBE1122:
 1898                             	.LBE1121:
 1899                             	.LBE1120:
 1900                             	.LBE1119:
 893:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	}
 1901                             		.loc 11 893 0
 1902 00c7 6C 2D                   		shll	#2, r13
 1903                             	.LVL199:
 1904                             	.LBB1135:
 1905                             	.LBB1133:
 1906                             	.LBB1131:
 1907                             	.LBB1129:
 1908                             	.LBB1127:
 1909                             	.LBB1125:
 566:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 	  if (_Num)
 1910                             		.loc 12 566 0
 1911 00c9 61 03                   		cmp	#0, r3
 1912 00cb 20 D5                   		beq	.L157
 567:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 	    __builtin_memmove(__result - _Num, __first, sizeof(_Tp) * _Num);
 1913                             		.loc 12 567 0
 1914 00cd 6C 23                   		shll	#2, r3
 1915                             	.LVL200:
 1916                             	.LBE1125:
 1917                             	.LBE1127:
 1918                             	.LBE1129:
 1919                             	.LBE1131:
 1920                             	.LBE1133:
 1921                             	.LBE1135:
 893:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	}
 1922                             		.loc 11 893 0
 1923 00cf FF 21 DA                		add	r13, r10, r1
 1924                             	.LVL201:
 1925                             	.LBB1136:
 1926                             	.LBB1134:
 1927                             	.LBB1132:
 1928                             	.LBB1130:
 1929                             	.LBB1128:
 1930                             	.LBB1126:
 1931                             		.loc 12 567 0
 1932 00d2 43 31                   		sub	r3, r1
 1933                             	.LVL202:
 1934 00d4 EF 42                   		mov.L	r4, r2
 1935                             	.LVL203:
 1936 00d6 05 00 00 00             		bsr	_memmove
 1937                             	.LVL204:
 1938 00da 2E C6                   		bra	.L157
 1939                             	.LVL205:
 1940                             	.L156:
 1941                             	.LBE1126:
 1942                             	.LBE1128:
 1943                             	.LBE1130:
 1944                             	.LBE1132:
 1945                             	.LBE1134:
 1946                             	.LBE1136:
 1947                             	.LBB1137:
 1948                             	.LBB1089:
 1949                             	.LBB1087:
 1950                             	.LBB1085:
 1951                             	.LBB1083:
 1952                             	.LBB1081:
 372:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_algobase.h **** 	  return __result + _Num;
 1953                             		.loc 12 372 0
 1954 00dc EF A1                   		mov.L	r10, r1
 1955 00de EF 42                   		mov.L	r4, r2
 1956                             	.LVL206:
 1957 00e0 6C 23                   		shll	#2, r3
 1958                             	.LVL207:
 1959 00e2 05 00 00 00             		bsr	_memmove
 1960                             	.LVL208:
 1961 00e6 6C 2D                   		shll	#2, r13
 1962                             	.LVL209:
 1963 00e8 2E B8                   		bra	.L157
 1964                             	.LVL210:
 1965                             	.L171:
 1966                             	.LBE1081:
 1967                             	.LBE1083:
 1968                             	.LBE1085:
 1969                             	.LBE1087:
 1970                             	.LBE1089:
 1971                             	.LBE1137:
 1972                             	.LBB1138:
 1973                             	.LBB1118:
 1974                             	.LBB1096:
 1975                             	.LBB1095:
 102:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h **** 
 1976                             		.loc 8 102 0
 1977 00ea 05 00 00 00             		bsr	__ZSt17__throw_bad_allocv
 1978                             	.LVL211:
 1979                             	.LBE1095:
 1980                             	.LBE1096:
 1981                             	.LBE1118:
 1982                             	.LBE1138:
 1983                             	.LBE1146:
 1984                             	.LBE1149:
 1985                             	.LFE1622:
 1987                             		.global	___umoddi3
 1988 00ee EF 00                   		.section P,"ax"
 1989                             		.global	_timeInterrupt
 1991                             	_timeInterrupt:
 1992                             	.LFB1466:
  75:../src/main.cpp ****     //http://japan.renesasrulz.com/cafe_rene/f/69/t/1515.aspx 多重割り込み　資料
 1993                             		.loc 10 75 0
 1994 0262 6E 6D                   		pushm	r6-r13
 1995                             	.LCFI16:
 1996 0264 71 00 90                		add	#0xffffff90, r0
 1997                             	.LCFI17:
 1998 0267 F9 02 10 00 00 00 00    		mov.L	#___gxx_personality_sj0, 64[r0]
 1999 026e F9 02 11 00 00 00 00    		mov.L	#.LLSDA1466, 68[r0]
 2000 0275 A4 80                   		mov.L	r0, 72[r0]
 2001 0277 F9 02 13 37 16 00 00    		mov.L	#.L343, 76[r0]
 2002 027e A5 00                   		mov.L	r0, 80[r0]
 2003 0280 71 01 28                		add	#40, r0, r1
 2004 0283 05 00 00 00             		bsr	__Unwind_SjLj_Register
 2005                             	.LVL212:
 2006                             	.LBB1643:
  77:../src/main.cpp **** 
 2007                             		.loc 10 77 0
 2008 0287 7F A8                   		setpsw	I
 2009                             	.LBB1644:
 2010                             	.LBB1645:
  70:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\imu.hpp **** 		return instance;
 2011                             		.loc 1 70 0
 2012 0289 FB 32 00 00 00 00       		mov.L	#__ZGVZN7MPU925011getInstanceEvE8instance, r3
 2013 028f 58 3E                   		movu.B	[r3], r14
 2014 0291 61 0E                   		cmp	#0, r14
 2015 0293 3A 37 08                		beq	.L478
 2016 0296 EF 00                   		.balign 8,3,5
 2017                             	.L174:
 2018                             	.LBE1645:
 2019                             	.LBE1644:
 2020                             	.LBB1649:
 2021                             	.LBB1650:
  26:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\imu.hpp **** 		return instance;
 2022                             		.loc 1 26 0
 2023 0298 FB 42 00 00 00 00       		mov.L	#__ZGVZN9Icm20608G11getInstanceEvE8instance, r4
 2024 029e 58 4E                   		movu.B	[r4], r14
 2025 02a0 61 0E                   		cmp	#0, r14
 2026 02a2 3A FA 07                		beq	.L479
 2027 02a5 FC 13 00                		.balign 8,3,5
 2028                             	.L177:
 2029                             	.LBE1650:
 2030                             	.LBE1649:
 2031                             	.LBB1654:
 2032                             	.LBB1655:
  13:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\tactsw.h **** 
  14:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\tactsw.h **** public:
  15:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\tactsw.h **** 	bool getState(){
  16:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\tactsw.h **** 		if( on_time_msec >5) return true;
  17:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\tactsw.h **** 		else return false;
  18:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\tactsw.h **** 	};
  19:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\tactsw.h **** 
  20:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\tactsw.h **** 	uint16_t getOntime(){
  21:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\tactsw.h **** 		return on_time_msec;
  22:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\tactsw.h **** 	};
  23:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\tactsw.h **** 
  24:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\tactsw.h **** 	void update(){
  25:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\tactsw.h **** 		if(PORTE.PIDR.BIT.B3 == 0)on_time_msec++;
  26:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\tactsw.h **** 		else on_time_msec = 0;
  27:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\tactsw.h **** 	}
  28:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\tactsw.h **** 
  29:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\tactsw.h **** 	static TactSw& getInstance(){
  30:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\tactsw.h **** 		static TactSw instance;
 2033                             		.loc 2 30 0
 2034 02a8 FB 72 00 00 00 00       		mov.L	#__ZGVZN6TactSw11getInstanceEvE8instance, r7
 2035 02ae 58 77                   		movu.B	[r7], r7
 2036 02b0 A5 8F                   		mov.L	r7, 92[r0]
 2037 02b2 61 07                   		cmp	#0, r7
 2038 02b4 3A AE 07                		beq	.L480
 2039 02b7 03                      		.balign 8,3,5
 2040                             	.L180:
 2041                             	.LBE1655:
 2042                             	.LBE1654:
 2043                             	.LBB1661:
 2044                             	.LBB1662:
  26:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\fcled.h **** 		return instance;
 2045                             		.loc 5 26 0
 2046 02b8 FB 12 00 00 00 00       		mov.L	#__ZGVZN5FcLed11getInstanceEvE8instance, r1
 2047 02be 58 1B                   		movu.B	[r1], r11
 2048 02c0 E7 0B 17                		mov.L	r11, 92[r0]
 2049 02c3 61 0B                   		cmp	#0, r11
 2050 02c5 3A 36 07                		beq	.L481
 2051                             		.balign 8,3,5
 2052                             	.L183:
 2053                             	.LBE1662:
 2054                             	.LBE1661:
 2055                             	.LBB1676:
 2056                             	.LBB1677:
  53:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp **** public:
  54:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp **** 
  55:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****     int16_t ahead_on;
  56:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****     int16_t left_on;
  57:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****     int16_t right_on;
  58:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp **** 
  59:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****     int16_t ahead_off;
  60:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****     int16_t left_off;
  61:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****     int16_t right_off;
  62:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp **** 
  63:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****     deque<int16_t> ahead;
  64:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****     deque<int16_t> left;
  65:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****     deque<int16_t> right;
  66:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp **** 
  67:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****     void turnOffAllLed(){
  68:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****         PORTD.PODR.BIT.B3 = 0;
  69:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****         PORTD.PODR.BIT.B4 = 0;
  70:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****         PORTD.PODR.BIT.B5 = 0;
  71:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****         PORTE.PODR.BIT.B2 = 0;
  72:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****     };
  73:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp **** 
  74:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****     void turnOnAllLed(){
  75:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****         if(enable == true){
  76:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****             PORTD.PODR.BIT.B3 = 1; //右
  77:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****             PORTD.PODR.BIT.B4 = 1; //前
  78:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****             PORTD.PODR.BIT.B5 = 1;   //左
  79:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****             //PORTE.PODR.BIT.B2 = 1; //未配線
  80:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****         }
  81:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****         else{
  82:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****             turnOffAllLed();
  83:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****         }
  84:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****     }
  85:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp **** 
  86:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****     void updateAllOffVal(){
  87:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****         right_off = startAD_AN001(); //右センサ
  88:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****         left_off  = startAD_AN002(); //左センサ
  89:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****         ahead_off = startAD_AN110(); //前センサ
  90:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****     };
  91:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp **** 
  92:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****     void updateAllOnVal(){
  93:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****         right_on = startAD_AN001(); //右センサ
  94:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****         left_on  = startAD_AN002(); //左センサ
  95:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****         ahead_on = startAD_AN110(); //前センサ
  96:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****     }
  97:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp **** 
  98:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****     void turnOnAheadLed(){
  99:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****         PORTD.PODR.BIT.B4 = 1; //前
 100:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****     };
 101:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****     void turnOnLeftLed(){
 102:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****         PORTD.PODR.BIT.B5 = 1; //左
 103:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****     };
 104:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****     void turnOnRightLed(){
 105:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****         PORTD.PODR.BIT.B3 = 1; //右
 106:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****     };
 107:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp **** 
 108:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****     void updateAheadOnVal(){
 109:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****         ahead_on = startAD_AN110(); //前センサ
 110:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****     };
 111:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****     void updateLeftOnVal(){
 112:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****         left_on  = startAD_AN002(); //左センサ
 113:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****     };
 114:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****     void updateRightOnVal(){
 115:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****         right_on = startAD_AN001(); //右センサ
 116:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****     };
 117:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp **** 
 118:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****     void modulateVal(){
 119:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****         int16_t ah_mod = ahead_on - ahead_off;
 120:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****         int16_t l_mod  = left_on - left_off;
 121:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****         int16_t r_mod  = right_on - right_off;
 122:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp **** 
 123:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****         ahead.push_front(ah_mod);
 124:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****         left.push_front(l_mod);
 125:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****         right.push_front(r_mod);
 126:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp **** 
 127:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****         ahead.pop_back();
 128:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****         left.pop_back();
 129:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****         right.pop_back();
 130:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****     };
 131:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp **** 
 132:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****     static WallSensor& getInstance(){
 133:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****         static WallSensor instance;
 2057                             		.loc 9 133 0
 2058 02c8 FB 12 00 00 00 00       		mov.L	#__ZGVZN10WallSensor11getInstanceEvE8instance, r1
 2059 02ce 58 1C                   		movu.B	[r1], r12
 2060 02d0 E7 0C 18                		mov.L	r12, 96[r0]
 2061 02d3 61 0C                   		cmp	#0, r12
 2062 02d5 3A DE 01                		beq	.L482
 2063                             		.balign 8,3,5
 2064                             	.L186:
 2065                             	.LBE1677:
 2066                             	.LBE1676:
 2067                             	.LBB1919:
 2068                             	.LBB1920:
  29:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****         return instance;
 2069                             		.loc 4 29 0
 2070 02d8 FB B2 00 00 00 00       		mov.L	#__ZGVZN7Gamepad11getInstanceEvE8instance, r11
 2071 02de 58 BB                   		movu.B	[r11], r11
 2072 02e0 E7 0B 18                		mov.L	r11, 96[r0]
 2073 02e3 61 0B                   		cmp	#0, r11
 2074 02e5 3A 13 05                		beq	.L483
 2075                             		.balign 8,3,5
 2076                             	.L220:
 2077                             	.LBE1920:
 2078                             	.LBE1919:
 2079                             	.LBB1926:
 2080                             	.LBB1927:
 976:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         return instance;
 2081                             		.loc 6 976 0
 2082 02e8 FB 12 00 00 00 00       		mov.L	#__ZGVZN9EventList11getInstanceEvE8instance, r1
 2083 02ee 58 14                   		movu.B	[r1], r4
 2084 02f0 A5 8C                   		mov.L	r4, 92[r0]
 2085 02f2 61 04                   		cmp	#0, r4
 2086 02f4 3A 7F 05                		beq	.L484
 2087 02f7 03                      		.balign 8,3,5
 2088                             	.L227:
 2089                             	.LBE1927:
 2090                             	.LBE1926:
 2091                             	.LBB2015:
 2092                             	.LBB2016:
 123:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****         return instance;
 2093                             		.loc 3 123 0
 2094 02f8 FB 42 00 00 00 00       		mov.L	#__ZGVZN6UMouse11getInstanceEvE8instance, r4
 2095 02fe 58 4E                   		movu.B	[r4], r14
 2096 0300 61 0E                   		cmp	#0, r14
 2097 0302 3A A6 06                		beq	.L485
 2098 0305 FC 13 00                		.balign 8,3,5
 2099                             	.L234:
 2100                             	.LBE2016:
 2101                             	.LBE2015:
  92:../src/main.cpp ****         sendDatafromTransBuff();
 2102                             		.loc 10 92 0
 2103 0308 FB 72 00 00 00 00       		mov.L	#__ZZ13timeInterruptE11countIntNum, r7
 2104 030e EC 71                   		mov.L	[r7], r1
 2105 0310 A8 7A                   		mov.L	4[r7], r2
 2106 0312 66 73                   		mov.L	#7, r3
 2107 0314 66 04                   		mov.L	#0, r4
 2108 0316 05 00 00 00             		bsr	___umoddi3
 2109                             	.LVL213:
 2110 031a 57 12                   		or	r1, r2
 2111 031c 3A D4 06                		beq	.L486
 2112 031f 03                      		.balign 8,3,4
 2113                             	.L236:
  95:../src/main.cpp **** 
 2114                             		.loc 10 95 0
 2115 0320 F9 06 0B FF             		mov.L	#-1, 44[r0]
 2116 0324 05 00 00 00             		bsr	__Z20retrieveDatafromFRDRv
 2117                             	.LVL214:
  98:../src/main.cpp ****         sendPeriodicMsg();
 2118                             		.loc 10 98 0
 2119 0328 FB A2 00 00 00 00       		mov.L	#__ZZ13timeInterruptE11countIntNum, r10
 2120 032e E4 A0 18                		mov.L	[r10], 96[r0]
 2121 0331 E5 A0 01 17             		mov.L	4[r10], 92[r0]
 2122 0335 AE 01                   		mov.L	96[r0], r1
 2123 0337 AD 8A                   		mov.L	92[r0], r2
 2124 0339 75 43 78                		mov.L	#0x78, r3
 2125 033c 66 04                   		mov.L	#0, r4
 2126 033e 05 00 00 00             		bsr	___umoddi3
 2127                             	.LVL215:
 2128 0342 57 12                   		or	r1, r2
 2129 0344 3A EB 0B                		beq	.L487
 2130 0347 AD 8A                   		mov.L	92[r0], r2
 2131                             		.balign 8,3,1
 2132                             	.L237:
 102:../src/main.cpp ****         if(getElapsedMsec()>5000){
 2133                             		.loc 10 102 0
 2134 0349 ED 0E 18                		mov.L	96[r0], r14
 2135 034c 64 3E                   		and	#3, r14
 2136 034e 3A AA 07                		beq	.L488
 2137                             		.balign 8,3,1
 2138                             	.L238:
 108:../src/main.cpp **** 
 2139                             		.loc 10 108 0
 2140 0351 61 1E                   		cmp	#1, r14
 2141 0353 3A CD 07                		beq	.L468
 2142                             	.L499:
 2143 0356 F9 02 17 00 00 00 00    		mov.L	#__ZZN7Gamepad11getInstanceEvE8instance, 92[r0]
 2144                             		.balign 8,3,1
 2145                             	.L240:
 115:../src/main.cpp ****         mouse.update();
 2146                             		.loc 10 115 0
 2147 035d 61 2E                   		cmp	#2, r14
 2148 035f 3A F1 09                		beq	.L489
 2149                             		.balign 8,3,1
 2150                             	.L283:
 121:../src/main.cpp ****         if(vol_f < 6.8)famima();
 2151                             		.loc 10 121 0
 2152 0362 AE 01                   		mov.L	96[r0], r1
 2153 0364 FB 3A E8 03             		mov.L	#0x3e8, r3
 2154 0368 66 04                   		mov.L	#0, r4
 120:../src/main.cpp ****     if (countIntNum % 1000 == 0){
 2155                             		.loc 10 120 0
 2156 036a FB EE 00 90 08          		mov.L	#0x89000, r14
 2157 036f D5 E0 10 32             		mov.W	32[r14], 100[r0]
 2158                             	.LVL216:
 121:../src/main.cpp ****         if(vol_f < 6.8)famima();
 2159                             		.loc 10 121 0
 2160 0373 05 00 00 00             		bsr	___umoddi3
 2161                             	.LVL217:
 2162 0377 57 12                   		or	r1, r2
 2163 0379 21 29                   		bne	.L299
 120:../src/main.cpp ****     if (countIntNum % 1000 == 0){
 2164                             		.loc 10 120 0
 2165 037b 5D 0E 32                		movu.W	100[r0], r14
 2166 037e FC 47 EE                		itof	r14, r14
 2167 0381 FD 72 3E 7E 7D 3D 40    		fmul	#0x403d7d7e, r14
 2168 0388 FD 72 3E 33 33 53 40    		fmul	#0x40533333, r14
 2169 038f FD 72 3E 00 00 80 39    		fmul	#0x39800000, r14
 122:../src/main.cpp ****     }
 2170                             		.loc 10 122 0
 2171 0396 FD 72 1E 9A 99 D9 40    		fcmp	#0x40d9999a, r14
 2172 039d 26 05 38 9D 0B          		bn	.L490
 2173                             		.balign 8,3,1
 2174                             	.L299:
 126:../src/main.cpp ****        gamepad.LB >0 &&
 2175                             		.loc 10 126 0
 2176 03a2 ED 0A 17                		mov.L	92[r0], r10
 2177 03a5 ED AE 08                		mov.L	32[r10], r14
 2178 03a8 FB 42 00 00 00 00       		mov.L	#__ZZN7Gamepad11getInstanceEvE8instance, r4
 127:../src/main.cpp ****        gamepad.LT >0 ){
 2179                             		.loc 10 127 0
 2180 03ae 61 0E                   		cmp	#0, r14
 2181 03b0 20 20                   		beq	.L301
 2182                             		.balign 8,3,1
 2183                             	.L514:
 127:../src/main.cpp ****        gamepad.LT >0 ){
 2184                             		.loc 10 127 0 is_stmt 0 discriminator 1
 2185 03b2 ED 4E 07                		mov.L	28[r4], r14
 126:../src/main.cpp ****        gamepad.LB >0 &&
 2186                             		.loc 10 126 0 is_stmt 1 discriminator 1
 2187 03b5 61 0E                   		cmp	#0, r14
 2188 03b7 20 19                   		beq	.L301
 127:../src/main.cpp ****        gamepad.LT >0 ){
 2189                             		.loc 10 127 0
 2190 03b9 59 4E 07                		movu.B	7[r4], r14
 2191 03bc 61 0E                   		cmp	#0, r14
 2192 03be 20 12                   		beq	.L301
 129:../src/main.cpp ****        SYSTEM.SWRR = 0xA501;
 2193                             		.loc 10 129 0
 2194 03c0 FB EE 00 00 08          		mov.L	#0x80000, r14
 2195 03c5 FA E9 FF 01 02 A5       		mov.W	#0xffffa502, 1022[r14]
 2196                             	.LVL218:
 130:../src/main.cpp ****     }
 2197                             		.loc 10 130 0
 2198 03cb F9 E9 61 01 A5          		mov.W	#0xffffa501, 194[r14]
 2199                             		.balign 8,3,1
 2200                             	.L301:
 134:../src/main.cpp ****        gamepad.RT > 0 &&
 2201                             		.loc 10 134 0
 2202 03d0 ED 0B 17                		mov.L	92[r0], r11
 2203 03d3 ED BE 06                		mov.L	24[r11], r14
 2204 03d6 FB 42 00 00 00 00       		mov.L	#__ZZN7Gamepad11getInstanceEvE8instance, r4
 135:../src/main.cpp ****        gamepad.START > 0){
 2205                             		.loc 10 135 0
 2206 03dc 61 0E                   		cmp	#0, r14
 2207 03de 21 78                   		bne	.L491
 2208                             		.balign 8,3,1
 2209                             	.L303:
 143:../src/main.cpp ****         case 0:
 2210                             		.loc 10 143 0
 2211 03e0 ED 0E 18                		mov.L	96[r0], r14
 2212 03e3 64 3E                   		and #3, r14
 2213                             	.LBB2020:
 2214                             	.LBB2021:
  87:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****         left_off  = startAD_AN002(); //左センサ
 2215                             		.loc 9 87 0
 2216 03e5 F9 06 0B FF             		mov.L	#-1, 44[r0]
 2217                             	.LBE2021:
 2218                             	.LBE2020:
 143:../src/main.cpp ****         case 0:
 2219                             		.loc 10 143 0
 2220 03e9 61 2E                   		cmp	#2, r14
 2221 03eb 3A 96 00                		beq	.L473
 2222                             		.balign 8,3,1
 2223                             	.L492:
 2224 03ee 61 3E                   		cmp	#3, r14
 2225 03f0 3A C8 0B                		beq	.L474
 2226 03f3 61 1E                   		cmp	#1, r14
 2227 03f5 3A 96 0C                		beq	.L475
 2228                             	.LVL219:
 2229                             	.LBB2025:
 2230                             	.LBB2022:
  87:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****         left_off  = startAD_AN002(); //左センサ
 2231                             		.loc 9 87 0
 2232 03f8 05 00 00 00             		bsr	__Z13startAD_AN001v
 2233                             	.LVL220:
 2234 03fc FB C2 00 00 00 00       		mov.L	#__ZZN10WallSensor11getInstanceEvE8instance, r12
 2235 0402 D7 C1 06                		mov.W	r1, 12[r12]
  88:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****         ahead_off = startAD_AN110(); //前センサ
 2236                             		.loc 9 88 0
 2237 0405 05 00 00 00             		bsr	__Z13startAD_AN002v
 2238                             	.LVL221:
 2239 0409 D7 C1 05                		mov.W	r1, 10[r12]
  89:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****     };
 2240                             		.loc 9 89 0
 2241 040c 05 00 00 00             		bsr	__Z13startAD_AN110v
 2242                             	.LVL222:
 2243                             	.LBE2022:
 2244                             	.LBE2025:
 2245                             	.LBB2026:
 2246                             	.LBB2027:
 102:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****     };
 2247                             		.loc 9 102 0
 2248 0410 FB EE 0D C0 08          		mov.L	#0x8c00d, r14
 2249 0415 CD E4 20                		mov.B	32[r14], r4
 2250                             	.LBE2027:
 2251                             	.LBE2026:
 2252                             	.LBB2029:
 2253                             	.LBB2023:
  89:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****     };
 2254                             		.loc 9 89 0
 2255 0418 D7 C1 04                		mov.W	r1, 8[r12]
 2256                             	.LVL223:
 2257                             	.LBE2023:
 2258                             	.LBE2029:
 2259                             	.LBB2030:
 2260                             	.LBB2028:
 102:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****     };
 2261                             		.loc 9 102 0
 2262 041b 78 54                   		bset #5, r4
 2263 041d C7 E4 20                		mov.B	r4, 32[r14]
 2264                             	.LVL224:
 2265                             		.balign 8,3,4
 2266                             	.L312:
 2267                             	.LBE2028:
 2268                             	.LBE2030:
 166:../src/main.cpp ****     startAD_AN000(); //電源
 2269                             		.loc 10 166 0
 2270 0420 F9 06 0B FF             		mov.L	#-1, 44[r0]
 2271 0424 05 00 00 00             		bsr	__Z11soundUpdatev
 2272                             	.LVL225:
 167:../src/main.cpp **** 
 2273                             		.loc 10 167 0
 2274 0428 05 00 00 00             		bsr	__Z13startAD_AN000v
 2275                             	.LVL226:
 169:../src/main.cpp ****     endTimeuCountIntCMT0();
 2276                             		.loc 10 169 0
 2277 042c FB 32 00 00 00 00       		mov.L	#__ZZ13timeInterruptE11countIntNum, r3
 2278 0432 EC 3E                   		mov.L	[r3], r14
 2279 0434 A8 3B                   		mov.L	4[r3], r3
 2280 0436 71 E4 01                		add	#1, r14, r4
 2281 0439 FD 74 23 00             		adc	#0, r3
 2282 043d FB A2 00 00 00 00       		mov.L	#__ZZ13timeInterruptE11countIntNum, r10
 2283 0443 E3 A4                   		mov.L	r4, [r10]
 2284 0445 E7 A3 01                		mov.L	r3, 4[r10]
 170:../src/main.cpp **** 
 2285                             		.loc 10 170 0
 2286 0448 05 00 00 00             		bsr	__Z20endTimeuCountIntCMT0v
 2287                             	.LVL227:
 2288 044c 71 01 28                		add	#40, r0, r1
 2289 044f 05 00 00 00             		bsr	__Unwind_SjLj_Unregister
 2290                             	.LVL228:
 2291                             	.LBE1643:
 172:../src/main.cpp **** 
 2292                             		.loc 10 172 0
 2293 0453 3F 6D 24                		rtsd	#144, r6-r13
 2294                             	.L491:
 2295                             	.LBB2316:
 134:../src/main.cpp ****        gamepad.RT > 0 &&
 2296                             		.loc 10 134 0 discriminator 1
 2297 0456 59 4E 06                		movu.B	6[r4], r14
 2298 0459 61 0E                   		cmp	#0, r14
 2299 045b 20 85                   		beq	.L303
 136:../src/main.cpp ****         PORTD.PODR.BIT.B7 = 0; //PICの入力ピンをローにする
 2300                             		.loc 10 136 0
 2301 045d ED 4E 09                		mov.L	36[r4], r14
 135:../src/main.cpp ****        gamepad.START > 0){
 2302                             		.loc 10 135 0
 2303 0460 61 0E                   		cmp	#0, r14
 2304 0462 3A 7E FF                		beq	.L303
 137:../src/main.cpp ****     }
 2305                             		.loc 10 137 0
 2306 0465 FB EE 0D C0 08          		mov.L	#0x8c00d, r14
 2307 046a CD E7 20                		mov.B	32[r14], r7
 2308 046d 75 27 7F                		and #0x7f, r7
 2309 0470 C7 E7 20                		mov.B	r7, 32[r14]
 143:../src/main.cpp ****         case 0:
 2310                             		.loc 10 143 0
 2311 0473 ED 0E 18                		mov.L	96[r0], r14
 2312 0476 64 3E                   		and #3, r14
 2313                             	.LBB2031:
 2314                             	.LBB2024:
  87:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****         left_off  = startAD_AN002(); //左センサ
 2315                             		.loc 9 87 0
 2316 0478 F9 06 0B FF             		mov.L	#-1, 44[r0]
 2317                             	.LBE2024:
 2318                             	.LBE2031:
 143:../src/main.cpp ****         case 0:
 2319                             		.loc 10 143 0
 2320 047c 61 2E                   		cmp	#2, r14
 2321 047e 3B 70 FF                		bne	.L492
 2322                             		.balign 8,3,3
 2323                             	.L473:
 2324                             	.LVL229:
 2325                             	.LBB2032:
 2326                             	.LBB2033:
 115:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****     };
 2327                             		.loc 9 115 0
 2328 0481 05 00 00 00             		bsr	__Z13startAD_AN001v
 2329                             	.LVL230:
 2330                             	.LBE2033:
 2331                             	.LBE2032:
 2332                             	.LBB2035:
 2333                             	.LBB2036:
  68:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****         PORTD.PODR.BIT.B4 = 0;
 2334                             		.loc 9 68 0
 2335 0485 FB EE 0D C0 08          		mov.L	#0x8c00d, r14
 2336 048a CD E3 20                		mov.B	32[r14], r3
  71:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****     };
 2337                             		.loc 9 71 0
 2338 048d FB 4E 0E C0 08          		mov.L	#0x8c00e, r4
  68:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****         PORTD.PODR.BIT.B4 = 0;
 2339                             		.loc 9 68 0
 2340 0492 7A 33                   		bclr #3, r3
 2341 0494 C7 E3 20                		mov.B	r3, 32[r14]
  69:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****         PORTD.PODR.BIT.B5 = 0;
 2342                             		.loc 9 69 0
 2343 0497 F1 EC 20                		bclr #4, 32[r14].B
  70:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****         PORTE.PODR.BIT.B2 = 0;
 2344                             		.loc 9 70 0
 2345 049a CD E3 20                		mov.B	32[r14], r3
 2346                             	.LBE2036:
 2347                             	.LBE2035:
 2348                             	.LBB2038:
 2349                             	.LBB2034:
 115:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****     };
 2350                             		.loc 9 115 0
 2351 049d FB 22 00 00 00 00       		mov.L	#__ZZN10WallSensor11getInstanceEvE8instance+6, r2
 2352 04a3 D3 21                   		mov.W	r1, [r2]
 2353                             	.LVL231:
 2354                             	.LBE2034:
 2355                             	.LBE2038:
 2356                             	.LBB2039:
 2357                             	.LBB2037:
  70:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****         PORTE.PODR.BIT.B2 = 0;
 2358                             		.loc 9 70 0
 2359 04a5 7A 53                   		bclr #5, r3
 2360 04a7 C7 E3 20                		mov.B	r3, 32[r14]
  71:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****     };
 2361                             		.loc 9 71 0
 2362 04aa F1 4A 20                		bclr #2, 32[r4].B
 2363                             	.LVL232:
 2364                             	.LBE2037:
 2365                             	.LBE2039:
 2366                             	.LBB2040:
 2367                             	.LBB2041:
  99:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****     };
 2368                             		.loc 9 99 0
 2369 04ad F1 E4 20                		bset #4, 32[r14].B
 2370 04b0 38 70 FF                		bra	.L312
 2371                             	.L482:
 2372                             	.LBE2041:
 2373                             	.LBE2040:
 2374                             	.LBB2042:
 2375                             	.LBB1916:
 2376                             		.loc 9 133 0
 2377 04b3 05 00 00 00             		bsr	___cxa_guard_acquire
 2378                             	.LVL233:
 2379 04b7 61 01                   		cmp	#0, r1
 2380 04b9 3A 1F FE                		beq	.L186
 2381                             	.LVL234:
 2382                             	.LBB1678:
 2383                             	.LBB1679:
  18:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****         enable = true;
 2384                             		.loc 9 18 0
 2385 04bc F9 02 17 00 00 00 00    		mov.L	#__ZZN10WallSensor11getInstanceEvE8instance, 92[r0]
 2386 04c3 AD 8B                   		mov.L	92[r0], r3
 2387 04c5 F8 34 05                		mov.B	#5, [r3]
 2388                             	.LVL235:
 2389                             	.LBB1680:
 2390                             	.LBB1681:
 2391                             	.LBB1682:
 2392                             	.LBB1683:
 502:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	{ }
 2393                             		.loc 7 502 0
 2394 04c8 E5 03 18 04             		mov.L	96[r0], 16[r3]
 2395                             	.LVL236:
 2396                             	.LBB1684:
 2397                             	.LBB1685:
 133:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
 2398                             		.loc 7 133 0
 2399 04cc E5 03 18 06             		mov.L	96[r0], 24[r3]
 2400 04d0 E5 03 18 07             		mov.L	96[r0], 28[r3]
 2401 04d4 E5 03 18 08             		mov.L	96[r0], 32[r3]
 2402 04d8 E5 03 18 09             		mov.L	96[r0], 36[r3]
 2403                             	.LVL237:
 2404                             	.LBE1685:
 2405                             	.LBE1684:
 2406                             	.LBB1686:
 2407                             	.LBB1687:
 2408 04dc E5 03 18 0A             		mov.L	96[r0], 40[r3]
 2409 04e0 E5 03 18 0B             		mov.L	96[r0], 44[r3]
 2410 04e4 E5 03 18 0C             		mov.L	96[r0], 48[r3]
 2411 04e8 E5 03 18 0D             		mov.L	96[r0], 52[r3]
 2412                             	.LVL238:
 2413                             	.LBE1687:
 2414                             	.LBE1686:
 2415                             	.LBE1683:
 2416                             	.LBE1682:
 2417                             	.LBB1688:
 2418                             	.LBB1689:
 587:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 					   size_t(__num_nodes + 2));
 2419                             		.loc 7 587 0
 2420 04ec 3E 35 08                		mov.L	#8, 20[r3]
 2421                             	.LVL239:
 2422                             	.LBB1690:
 2423                             	.LBB1691:
 2424                             	.LBB1692:
 104:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h ****       }
 2425                             		.loc 8 104 0
 2426 04ef 3E 0B 02                		mov.L	#2, 44[r0]
 2427 04f2 75 41 20                		mov.L	#32, r1
 2428 04f5 05 00 00 00             		bsr	__Znwm
 2429                             	.LVL240:
 2430 04f9 EF 1E                   		mov.L	r1, r14
 2431                             	.LBE1692:
 2432                             	.LBE1691:
 2433                             	.LBE1690:
 597:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       _Tp** __nfinish = __nstart + __num_nodes;
 2434                             		.loc 7 597 0
 2435 04fb AD 8F                   		mov.L	92[r0], r7
 2436 04fd A9 7C                   		mov.L	20[r7], r4
 589:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
 2437                             		.loc 7 589 0
 2438 04ff A1 71                   		mov.L	r1, 16[r7]
 597:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       _Tp** __nfinish = __nstart + __num_nodes;
 2439                             		.loc 7 597 0
 2440 0501 60 14                   		sub	#1, r4
 2441 0503 68 14                   		shlr	#1, r4
 2442 0505 6C 24                   		shll	#2, r4
 2443                             	.LBB1693:
 2444                             	.LBB1694:
 2445                             	.LBB1695:
 2446                             	.LBB1696:
 2447                             	.LBB1697:
 104:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h ****       }
 2448                             		.loc 8 104 0
 2449 0507 3E 0B 07                		mov.L	#7, 44[r0]
 2450 050a FB 1A 00 02             		mov.L	#0x200, r1
 2451                             	.LBE1697:
 2452                             	.LBE1696:
 2453                             	.LBE1695:
 2454                             	.LBE1694:
 2455                             	.LBE1693:
 597:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       _Tp** __nfinish = __nstart + __num_nodes;
 2456                             		.loc 7 597 0
 2457 050e 4B E4                   		add	r14, r4
 2458 0510 A6 04                   		mov.L	r4, 96[r0]
 2459                             	.LVL241:
 2460                             	.LBB1703:
 2461                             	.LBB1701:
 2462                             	.LBB1700:
 2463                             	.LBB1699:
 2464                             	.LBB1698:
 104:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h ****       }
 2465                             		.loc 8 104 0
 2466 0512 05 00 00 00             		bsr	__Znwm
 2467                             	.LVL242:
 2468                             	.LBE1698:
 2469                             	.LBE1699:
 2470                             	.LBE1700:
 627:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	}
 2471                             		.loc 7 627 0
 2472 0516 ED 0A 18                		mov.L	96[r0], r10
 2473 0519 E3 A1                   		mov.L	r1, [r10]
 2474                             	.LVL243:
 2475                             	.LBE1701:
 2476                             	.LBE1703:
 2477                             	.LBB1704:
 2478                             	.LBB1705:
 236:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	_M_first = *__new_node;
 2479                             		.loc 7 236 0
 2480 051b E7 7A 09                		mov.L	r10, 36[r7]
 237:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	_M_last = _M_first + difference_type(_S_buffer_size());
 2481                             		.loc 7 237 0
 2482 051e EC A4                   		mov.L	[r10], r4
 2483                             	.LBE1705:
 2484                             	.LBE1704:
 2485                             	.LBB1707:
 2486                             	.LBB1708:
 236:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	_M_first = *__new_node;
 2487                             		.loc 7 236 0
 2488 0520 E7 7A 0D                		mov.L	r10, 52[r7]
 2489                             	.LBE1708:
 2490                             	.LBE1707:
 2491                             	.LBB1711:
 2492                             	.LBB1706:
 238:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       }
 2493                             		.loc 7 238 0
 2494 0523 72 4E 00 02             		add	#0x200, r4, r14
 237:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	_M_last = _M_first + difference_type(_S_buffer_size());
 2495                             		.loc 7 237 0
 2496 0527 A1 FC                   		mov.L	r4, 28[r7]
 2497                             	.LVL244:
 238:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       }
 2498                             		.loc 7 238 0
 2499 0529 E7 7E 08                		mov.L	r14, 32[r7]
 2500                             	.LVL245:
 2501                             	.LBE1706:
 2502                             	.LBE1711:
 2503                             	.LBB1712:
 2504                             	.LBB1709:
 237:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	_M_last = _M_first + difference_type(_S_buffer_size());
 2505                             		.loc 7 237 0
 2506 052c EC AE                   		mov.L	[r10], r14
 2507                             	.LBE1709:
 2508                             	.LBE1712:
 612:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       this->_M_impl._M_finish._M_cur = (this->_M_impl._M_finish._M_first
 2509                             		.loc 7 612 0
 2510 052e A1 F4                   		mov.L	r4, 24[r7]
 2511                             	.LBB1713:
 2512                             	.LBB1710:
 238:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       }
 2513                             		.loc 7 238 0
 2514 0530 72 E4 00 02             		add	#0x200, r14, r4
 237:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	_M_last = _M_first + difference_type(_S_buffer_size());
 2515                             		.loc 7 237 0
 2516 0534 E7 7E 0B                		mov.L	r14, 44[r7]
 2517                             	.LVL246:
 238:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       }
 2518                             		.loc 7 238 0
 2519 0537 A3 74                   		mov.L	r4, 48[r7]
 2520                             	.LBE1710:
 2521                             	.LBE1713:
 613:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 					+ __num_elements
 2522                             		.loc 7 613 0
 2523 0539 E7 7E 0A                		mov.L	r14, 40[r7]
 2524                             	.LVL247:
 2525                             	.LBE1689:
 2526                             	.LBE1688:
 2527                             	.LBE1681:
 2528                             	.LBE1680:
 2529                             	.LBB1724:
 2530                             	.LBB1725:
 2531                             	.LBB1726:
 2532                             	.LBB1727:
 502:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	{ }
 2533                             		.loc 7 502 0
 2534 053c 3E 7E 00                		mov.L	#0, 56[r7]
 2535                             	.LVL248:
 2536                             	.LBB1728:
 2537                             	.LBB1729:
 133:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
 2538                             		.loc 7 133 0
 2539 053f 3E F0 00                		mov.L	#0, 64[r7]
 2540 0542 3E F1 00                		mov.L	#0, 68[r7]
 2541 0545 3E F2 00                		mov.L	#0, 72[r7]
 2542 0548 3E F3 00                		mov.L	#0, 76[r7]
 2543                             	.LVL249:
 2544                             	.LBE1729:
 2545                             	.LBE1728:
 2546                             	.LBB1730:
 2547                             	.LBB1731:
 2548 054b 3E F4 00                		mov.L	#0, 80[r7]
 2549 054e 3E F5 00                		mov.L	#0, 84[r7]
 2550 0551 3E F6 00                		mov.L	#0, 88[r7]
 2551 0554 3E F7 00                		mov.L	#0, 92[r7]
 2552                             	.LVL250:
 2553                             	.LBE1731:
 2554                             	.LBE1730:
 2555                             	.LBE1727:
 2556                             	.LBE1726:
 2557                             	.LBB1732:
 2558                             	.LBB1733:
 587:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 					   size_t(__num_nodes + 2));
 2559                             		.loc 7 587 0
 2560 0557 3E 7F 08                		mov.L	#8, 60[r7]
 2561                             	.LVL251:
 2562                             	.LBB1734:
 2563                             	.LBB1735:
 2564                             	.LBB1736:
 104:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h ****       }
 2565                             		.loc 8 104 0
 2566 055a 3E 0B 03                		mov.L	#3, 44[r0]
 2567 055d 75 41 20                		mov.L	#32, r1
 2568 0560 05 00 00 00             		bsr	__Znwm
 2569                             	.LVL252:
 2570 0564 EF 1E                   		mov.L	r1, r14
 2571                             	.LBE1736:
 2572                             	.LBE1735:
 2573                             	.LBE1734:
 597:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       _Tp** __nfinish = __nstart + __num_nodes;
 2574                             		.loc 7 597 0
 2575 0566 AB FC                   		mov.L	60[r7], r4
 589:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
 2576                             		.loc 7 589 0
 2577 0568 A3 F1                   		mov.L	r1, 56[r7]
 597:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       _Tp** __nfinish = __nstart + __num_nodes;
 2578                             		.loc 7 597 0
 2579 056a 60 14                   		sub	#1, r4
 2580 056c 68 14                   		shlr	#1, r4
 2581 056e 6C 24                   		shll	#2, r4
 2582                             	.LBB1737:
 2583                             	.LBB1738:
 2584                             	.LBB1739:
 2585                             	.LBB1740:
 2586                             	.LBB1741:
 104:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h ****       }
 2587                             		.loc 8 104 0
 2588 0570 3E 0B 0A                		mov.L	#10, 44[r0]
 2589 0573 FB 1A 00 02             		mov.L	#0x200, r1
 2590                             	.LBE1741:
 2591                             	.LBE1740:
 2592                             	.LBE1739:
 2593                             	.LBE1738:
 2594                             	.LBE1737:
 597:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       _Tp** __nfinish = __nstart + __num_nodes;
 2595                             		.loc 7 597 0
 2596 0577 4B E4                   		add	r14, r4
 2597 0579 A6 04                   		mov.L	r4, 96[r0]
 2598                             	.LVL253:
 2599                             	.LBB1747:
 2600                             	.LBB1745:
 2601                             	.LBB1744:
 2602                             	.LBB1743:
 2603                             	.LBB1742:
 104:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h ****       }
 2604                             		.loc 8 104 0
 2605 057b 05 00 00 00             		bsr	__Znwm
 2606                             	.LVL254:
 2607                             	.LBE1742:
 2608                             	.LBE1743:
 2609                             	.LBE1744:
 627:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	}
 2610                             		.loc 7 627 0
 2611 057f ED 0C 18                		mov.L	96[r0], r12
 2612 0582 E3 C1                   		mov.L	r1, [r12]
 2613                             	.LVL255:
 2614                             	.LBE1745:
 2615                             	.LBE1747:
 2616                             	.LBB1748:
 2617                             	.LBB1749:
 236:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	_M_first = *__new_node;
 2618                             		.loc 7 236 0
 2619 0584 AD 8B                   		mov.L	92[r0], r3
 2620 0586 E7 3C 13                		mov.L	r12, 76[r3]
 237:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	_M_last = _M_first + difference_type(_S_buffer_size());
 2621                             		.loc 7 237 0
 2622 0589 EC C4                   		mov.L	[r12], r4
 2623                             	.LBE1749:
 2624                             	.LBE1748:
 2625                             	.LBB1751:
 2626                             	.LBB1752:
 236:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	_M_first = *__new_node;
 2627                             		.loc 7 236 0
 2628 058b E7 3C 17                		mov.L	r12, 92[r3]
 2629                             	.LBE1752:
 2630                             	.LBE1751:
 2631                             	.LBB1755:
 2632                             	.LBB1750:
 238:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       }
 2633                             		.loc 7 238 0
 2634 058e 72 4E 00 02             		add	#0x200, r4, r14
 237:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	_M_last = _M_first + difference_type(_S_buffer_size());
 2635                             		.loc 7 237 0
 2636 0592 A4 3C                   		mov.L	r4, 68[r3]
 238:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       }
 2637                             		.loc 7 238 0
 2638 0594 E7 3E 12                		mov.L	r14, 72[r3]
 2639                             	.LVL256:
 2640                             	.LBE1750:
 2641                             	.LBE1755:
 2642                             	.LBB1756:
 2643                             	.LBB1753:
 237:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	_M_last = _M_first + difference_type(_S_buffer_size());
 2644                             		.loc 7 237 0
 2645 0597 EC CE                   		mov.L	[r12], r14
 2646                             	.LBE1753:
 2647                             	.LBE1756:
 612:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       this->_M_impl._M_finish._M_cur = (this->_M_impl._M_finish._M_first
 2648                             		.loc 7 612 0
 2649 0599 A4 34                   		mov.L	r4, 64[r3]
 2650                             	.LBB1757:
 2651                             	.LBB1754:
 238:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       }
 2652                             		.loc 7 238 0
 2653 059b 72 E4 00 02             		add	#0x200, r14, r4
 237:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	_M_last = _M_first + difference_type(_S_buffer_size());
 2654                             		.loc 7 237 0
 2655 059f E7 3E 15                		mov.L	r14, 84[r3]
 238:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       }
 2656                             		.loc 7 238 0
 2657 05a2 A5 B4                   		mov.L	r4, 88[r3]
 2658                             	.LBE1754:
 2659                             	.LBE1757:
 613:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 					+ __num_elements
 2660                             		.loc 7 613 0
 2661 05a4 E7 3E 14                		mov.L	r14, 80[r3]
 2662                             	.LVL257:
 2663                             	.LBE1733:
 2664                             	.LBE1732:
 2665                             	.LBE1725:
 2666                             	.LBE1724:
 2667                             	.LBB1765:
 2668                             	.LBB1766:
 2669                             	.LBB1767:
 2670                             	.LBB1768:
 502:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	{ }
 2671                             		.loc 7 502 0
 2672 05a7 3E B8 00                		mov.L	#0, 96[r3]
 2673                             	.LVL258:
 2674                             	.LBB1769:
 2675                             	.LBB1770:
 133:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
 2676                             		.loc 7 133 0
 2677 05aa 3E BA 00                		mov.L	#0, 104[r3]
 2678 05ad 3E BB 00                		mov.L	#0, 108[r3]
 2679 05b0 3E BC 00                		mov.L	#0, 112[r3]
 2680 05b3 3E BD 00                		mov.L	#0, 116[r3]
 2681                             	.LVL259:
 2682                             	.LBE1770:
 2683                             	.LBE1769:
 2684                             	.LBB1771:
 2685                             	.LBB1772:
 2686 05b6 3E BE 00                		mov.L	#0, 120[r3]
 2687 05b9 3E BF 00                		mov.L	#0, 124[r3]
 2688 05bc F9 36 20 00             		mov.L	#0, 128[r3]
 2689 05c0 F9 36 21 00             		mov.L	#0, 132[r3]
 2690                             	.LVL260:
 2691                             	.LBE1772:
 2692                             	.LBE1771:
 2693                             	.LBE1768:
 2694                             	.LBE1767:
 2695                             	.LBB1773:
 2696                             	.LBB1774:
 587:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 					   size_t(__num_nodes + 2));
 2697                             		.loc 7 587 0
 2698 05c4 3E B9 08                		mov.L	#8, 100[r3]
 2699                             	.LVL261:
 2700                             	.LBB1775:
 2701                             	.LBB1776:
 2702                             	.LBB1777:
 104:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h ****       }
 2703                             		.loc 8 104 0
 2704 05c7 3E 0B 04                		mov.L	#4, 44[r0]
 2705 05ca 75 41 20                		mov.L	#32, r1
 2706 05cd 05 00 00 00             		bsr	__Znwm
 2707                             	.LVL262:
 2708 05d1 EF 1E                   		mov.L	r1, r14
 2709                             	.LBE1777:
 2710                             	.LBE1776:
 2711                             	.LBE1775:
 597:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       _Tp** __nfinish = __nstart + __num_nodes;
 2712                             		.loc 7 597 0
 2713 05d3 AD 8F                   		mov.L	92[r0], r7
 2714 05d5 AE 7C                   		mov.L	100[r7], r4
 589:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
 2715                             		.loc 7 589 0
 2716 05d7 A6 71                   		mov.L	r1, 96[r7]
 597:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       _Tp** __nfinish = __nstart + __num_nodes;
 2717                             		.loc 7 597 0
 2718 05d9 60 14                   		sub	#1, r4
 2719 05db 68 14                   		shlr	#1, r4
 2720 05dd 6C 24                   		shll	#2, r4
 2721                             	.LBB1778:
 2722                             	.LBB1779:
 2723                             	.LBB1780:
 2724                             	.LBB1781:
 2725                             	.LBB1782:
 104:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h ****       }
 2726                             		.loc 8 104 0
 2727 05df 3E 0B 0D                		mov.L	#13, 44[r0]
 2728 05e2 FB 1A 00 02             		mov.L	#0x200, r1
 2729                             	.LBE1782:
 2730                             	.LBE1781:
 2731                             	.LBE1780:
 2732                             	.LBE1779:
 2733                             	.LBE1778:
 597:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       _Tp** __nfinish = __nstart + __num_nodes;
 2734                             		.loc 7 597 0
 2735 05e6 4B E4                   		add	r14, r4
 2736 05e8 A6 04                   		mov.L	r4, 96[r0]
 2737                             	.LVL263:
 2738                             	.LBB1788:
 2739                             	.LBB1786:
 2740                             	.LBB1785:
 2741                             	.LBB1784:
 2742                             	.LBB1783:
 104:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h ****       }
 2743                             		.loc 8 104 0
 2744 05ea 05 00 00 00             		bsr	__Znwm
 2745                             	.LVL264:
 2746                             	.LBE1783:
 2747                             	.LBE1784:
 2748                             	.LBE1785:
 627:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	}
 2749                             		.loc 7 627 0
 2750 05ee ED 0B 18                		mov.L	96[r0], r11
 2751 05f1 E3 B1                   		mov.L	r1, [r11]
 2752                             	.LVL265:
 2753                             	.LBE1786:
 2754                             	.LBE1788:
 2755                             	.LBB1789:
 2756                             	.LBB1790:
 236:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	_M_first = *__new_node;
 2757                             		.loc 7 236 0
 2758 05f3 ED 0C 17                		mov.L	92[r0], r12
 2759 05f6 E7 CB 1D                		mov.L	r11, 116[r12]
 237:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	_M_last = _M_first + difference_type(_S_buffer_size());
 2760                             		.loc 7 237 0
 2761 05f9 EC B4                   		mov.L	[r11], r4
 2762                             	.LBE1790:
 2763                             	.LBE1789:
 2764                             	.LBB1792:
 2765                             	.LBB1793:
 236:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	_M_first = *__new_node;
 2766                             		.loc 7 236 0
 2767 05fb E7 CB 21                		mov.L	r11, 132[r12]
 2768                             	.LBE1793:
 2769                             	.LBE1792:
 2770                             	.LBB1796:
 2771                             	.LBB1791:
 238:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       }
 2772                             		.loc 7 238 0
 2773 05fe 72 4E 00 02             		add	#0x200, r4, r14
 237:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	_M_last = _M_first + difference_type(_S_buffer_size());
 2774                             		.loc 7 237 0
 2775 0602 E7 C4 1B                		mov.L	r4, 108[r12]
 238:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       }
 2776                             		.loc 7 238 0
 2777 0605 E7 CE 1C                		mov.L	r14, 112[r12]
 2778                             	.LVL266:
 2779                             	.LBE1791:
 2780                             	.LBE1796:
 2781                             	.LBB1797:
 2782                             	.LBB1794:
 237:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	_M_last = _M_first + difference_type(_S_buffer_size());
 2783                             		.loc 7 237 0
 2784 0608 EC BE                   		mov.L	[r11], r14
 2785                             	.LBE1794:
 2786                             	.LBE1797:
 2787                             	.LBE1774:
 2788                             	.LBE1773:
 2789                             	.LBE1766:
 2790                             	.LBE1765:
 2791                             	.LBB1809:
 2792                             	.LBB1810:
  27:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****             ahead.push_front(0);
 2793                             		.loc 9 27 0
 2794 060a 58 C3                   		movu.B	[r12], r3
 2795                             	.LBE1810:
 2796                             	.LBE1809:
 2797                             	.LBB1897:
 2798                             	.LBB1807:
 2799                             	.LBB1805:
 2800                             	.LBB1803:
 2801                             	.LBB1798:
 2802                             	.LBB1795:
 238:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       }
 2803                             		.loc 7 238 0
 2804 060c 72 E2 00 02             		add	#0x200, r14, r2
 237:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	_M_last = _M_first + difference_type(_S_buffer_size());
 2805                             		.loc 7 237 0
 2806 0610 E7 CE 1F                		mov.L	r14, 124[r12]
 238:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       }
 2807                             		.loc 7 238 0
 2808 0613 E7 C2 20                		mov.L	r2, 128[r12]
 2809                             	.LBE1795:
 2810                             	.LBE1798:
 612:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       this->_M_impl._M_finish._M_cur = (this->_M_impl._M_finish._M_first
 2811                             		.loc 7 612 0
 2812 0616 E7 C4 1A                		mov.L	r4, 104[r12]
 613:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 					+ __num_elements
 2813                             		.loc 7 613 0
 2814 0619 E7 CE 1E                		mov.L	r14, 120[r12]
 2815                             	.LBE1803:
 2816                             	.LBE1805:
 2817                             	.LBE1807:
 2818                             	.LBE1897:
 2819                             	.LBB1898:
  19:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****         ahead_on = 0;
 2820                             		.loc 9 19 0
 2821 061c F9 C4 01 01             		mov.B	#1, 1[r12]
  20:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****         left_on  = 0;
 2822                             		.loc 9 20 0
 2823 0620 F9 C5 01 00             		mov.W	#0, 2[r12]
  21:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****         right_on = 0;
 2824                             		.loc 9 21 0
 2825 0624 F9 C5 02 00             		mov.W	#0, 4[r12]
  22:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp **** 
 2826                             		.loc 9 22 0
 2827 0628 F9 C5 03 00             		mov.W	#0, 6[r12]
  24:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****         left_off = 0;
 2828                             		.loc 9 24 0
 2829 062c F9 C5 04 00             		mov.W	#0, 8[r12]
  25:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****         right_off = 0;
 2830                             		.loc 9 25 0
 2831 0630 F9 C5 05 00             		mov.W	#0, 10[r12]
  26:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****         for(uint8_t i=0;i<BUFF_SIZE;i++){
 2832                             		.loc 9 26 0
 2833 0634 F9 C5 06 00             		mov.W	#0, 12[r12]
 2834                             	.LVL267:
 2835                             	.LBB1895:
  27:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****             ahead.push_front(0);
 2836                             		.loc 9 27 0
 2837 0638 F9 04 60 00             		mov.B	#0, 96[r0]
 2838                             	.LVL268:
 2839 063c 61 03                   		cmp	#0, r3
 2840 063e 21 5A                   		bne	.L465
 2841 0640 38 88 01                		bra	.L200
 2842                             	.LVL269:
 2843                             	.L493:
 2844                             	.LBB1811:
 2845                             	.LBB1812:
 2846                             	.LBB1813:
 120:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 				    std::forward<_Args>(__args)...);
 2847                             		.loc 11 120 0
 2848 0643 60 2E                   		sub	#2, r14
 2849                             	.LVL270:
 2850                             	.LBB1814:
 2851                             	.LBB1815:
 111:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h **** 
 112:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h ****       size_type
 113:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h ****       max_size() const _GLIBCXX_USE_NOEXCEPT
 114:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h ****       { return size_t(-1) / sizeof(_Tp); }
 115:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h **** 
 116:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h **** #if __cplusplus >= 201103L
 117:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h ****       template<typename _Up, typename... _Args>
 118:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h ****         void
 119:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h ****         construct(_Up* __p, _Args&&... __args)
 120:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h **** 	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 2852                             		.loc 8 120 0
 2853 0645 14                      		beq	.L206
 2854 0646 F8 E5 00                		mov.W	#0, [r14]
 2855                             		.balign 8,3,1
 2856                             	.L206:
 2857                             	.LBE1815:
 2858                             	.LBE1814:
 122:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	  }
 2859                             		.loc 11 122 0
 2860 0649 ED 0A 17                		mov.L	92[r0], r10
 2861 064c E7 AE 06                		mov.L	r14, 24[r10]
 2862                             	.LVL271:
 2863 064f 03                      		.balign 8,3,1
 2864                             	.L207:
 2865                             	.LBE1813:
 2866                             	.LBE1812:
 2867                             	.LBE1811:
 2868                             	.LBB1837:
 2869                             	.LBB1838:
 2870                             	.LBB1839:
 118:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	  {
 2871                             		.loc 11 118 0
 2872 0650 ED 0A 17                		mov.L	92[r0], r10
 2873 0653 ED AE 1A                		mov.L	104[r10], r14
 2874 0656 06 85 AE 1B             		cmp	108[r10].L, r14
 2875 065a 3A A6 00                		beq	.L209
 2876                             		.balign 8,3,1
 2877                             	.L495:
 120:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 				    std::forward<_Args>(__args)...);
 2878                             		.loc 11 120 0
 2879 065d 60 2E                   		sub	#2, r14
 2880                             	.LVL272:
 2881                             	.LBB1840:
 2882                             	.LBB1841:
 2883                             		.loc 8 120 0
 2884 065f 14                      		beq	.L210
 2885 0660 F8 E5 00                		mov.W	#0, [r14]
 2886                             		.balign 8,3,1
 2887                             	.L210:
 2888                             	.LBE1841:
 2889                             	.LBE1840:
 122:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	  }
 2890                             		.loc 11 122 0
 2891 0663 ED 0B 17                		mov.L	92[r0], r11
 2892 0666 E7 BE 1A                		mov.L	r14, 104[r11]
 2893                             	.LVL273:
 2894                             		.balign 8,3,1
 2895                             	.L211:
 2896                             	.LBE1839:
 2897                             	.LBE1838:
 2898                             	.LBE1837:
 2899                             	.LBB1863:
 2900                             	.LBB1864:
 2901                             	.LBB1865:
 118:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	  {
 2902                             		.loc 11 118 0
 2903 0669 ED 0A 17                		mov.L	92[r0], r10
 2904 066c ED AE 10                		mov.L	64[r10], r14
 2905 066f 06 85 AE 11             		cmp	68[r10].L, r14
 2906 0673 3A ED 00                		beq	.L213
 2907                             		.balign 8,3,1
 2908                             	.L497:
 120:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 				    std::forward<_Args>(__args)...);
 2909                             		.loc 11 120 0
 2910 0676 60 2E                   		sub	#2, r14
 2911                             	.LVL274:
 2912                             	.LBB1866:
 2913                             	.LBB1867:
 2914                             		.loc 8 120 0
 2915 0678 14                      		beq	.L214
 2916 0679 F8 E5 00                		mov.W	#0, [r14]
 2917                             		.balign 8,3,1
 2918                             	.L214:
 2919                             	.LBE1867:
 2920                             	.LBE1866:
 122:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	  }
 2921                             		.loc 11 122 0
 2922 067c ED 0B 17                		mov.L	92[r0], r11
 2923 067f E7 BE 10                		mov.L	r14, 64[r11]
 2924                             	.LVL275:
 2925                             		.balign 8,3,5
 2926                             	.L215:
 2927                             	.LBE1865:
 2928                             	.LBE1864:
 2929                             	.LBE1863:
  27:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****             ahead.push_front(0);
 2930                             		.loc 9 27 0
 2931 0682 CD 0E 60                		mov.B	96[r0], r14
 2932 0685 62 1E                   		add	#1, r14
 2933 0687 ED 0A 17                		mov.L	92[r0], r10
 2934 068a 58 A4                   		movu.B	[r10], r4
 2935 068c 5B E3                   		movu.B	r14, r3
 2936 068e C7 0E 60                		mov.B	r14, 96[r0]
 2937                             	.LVL276:
 2938 0691 47 43                   		cmp	r4, r3
 2939 0693 23 05 38 33 01          		bgeu	.L200
 2940                             	.LVL277:
 2941                             		.balign 8,3,1
 2942                             	.L465:
 2943                             	.LBB1889:
 2944                             	.LBB1835:
 2945                             	.LBB1833:
 118:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	  {
 2946                             		.loc 11 118 0
 2947 0698 AD 8F                   		mov.L	92[r0], r7
 2948 069a ED 7E 06                		mov.L	24[r7], r14
 2949 069d 06 85 7E 07             		cmp	28[r7].L, r14
 2950 06a1 21 A2                   		bne	.L493
 2951                             	.LVL278:
 2952                             	.LBB1816:
 2953                             	.LBB1817:
 2954                             	.LBB1818:
 2955                             	.LBB1819:
 642:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	_M_deallocate_node(*__n);
 643:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****     }
 644:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
 645:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****   /**
 646:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****    *  @brief  A standard container using fixed-size memory allocation and
 647:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****    *  constant-time manipulation of elements at either end.
 648:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****    *
 649:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****    *  @ingroup sequences
 650:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****    *
 651:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****    *  @tparam _Tp  Type of element.
 652:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****    *  @tparam _Alloc  Allocator type, defaults to allocator<_Tp>.
 653:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****    *
 654:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
 655:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****    *  <a href="tables.html#66">reversible container</a>, and a
 656:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****    *  <a href="tables.html#67">sequence</a>, including the
 657:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****    *  <a href="tables.html#68">optional sequence requirements</a>.
 658:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****    *
 659:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****    *  In previous HP/SGI versions of deque, there was an extra template
 660:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****    *  parameter so users could control the node size.  This extension turned
 661:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****    *  out to violate the C++ standard (it can be detected using template
 662:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****    *  template parameters), and it was removed.
 663:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****    *
 664:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****    *  Here's how a deque<Tp> manages memory.  Each deque has 4 members:
 665:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****    *
 666:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****    *  - Tp**        _M_map
 667:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****    *  - size_t      _M_map_size
 668:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****    *  - iterator    _M_start, _M_finish
 669:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****    *
 670:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****    *  map_size is at least 8.  %map is an array of map_size
 671:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****    *  pointers-to-@a nodes.  (The name %map has nothing to do with the
 672:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****    *  std::map class, and @b nodes should not be confused with
 673:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****    *  std::list's usage of @a node.)
 674:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****    *
 675:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****    *  A @a node has no specific type name as such, but it is referred
 676:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****    *  to as @a node in this file.  It is a simple array-of-Tp.  If Tp
 677:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****    *  is very large, there will be one Tp element per node (i.e., an
 678:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****    *  @a array of one).  For non-huge Tp's, node size is inversely
 679:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****    *  related to Tp size: the larger the Tp, the fewer Tp's will fit
 680:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****    *  in a node.  The goal here is to keep the total size of a node
 681:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****    *  relatively small and constant over different Tp's, to improve
 682:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****    *  allocator efficiency.
 683:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****    *
 684:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****    *  Not every pointer in the %map array will point to a node.  If
 685:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****    *  the initial number of elements in the deque is small, the
 686:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****    *  /middle/ %map pointers will be valid, and the ones at the edges
 687:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****    *  will be unused.  This same situation will arise as the %map
 688:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****    *  grows: available %map pointers, if any, will be on the ends.  As
 689:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****    *  new nodes are created, only a subset of the %map's pointers need
 690:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****    *  to be copied @a outward.
 691:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****    *
 692:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****    *  Class invariants:
 693:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****    * - For any nonsingular iterator i:
 694:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****    *    - i.node points to a member of the %map array.  (Yes, you read that
 695:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****    *      correctly:  i.node does not actually point to a node.)  The member of
 696:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****    *      the %map array is what actually points to the node.
 697:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****    *    - i.first == *(i.node)    (This points to the node (first Tp element).)
 698:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****    *    - i.last  == i.first + node_size
 699:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****    *    - i.cur is a pointer in the range [i.first, i.last).  NOTE:
 700:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****    *      the implication of this is that i.cur is always a dereferenceable
 701:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****    *      pointer, even if i is a past-the-end iterator.
 702:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****    * - Start and Finish are always nonsingular iterators.  NOTE: this
 703:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****    * means that an empty deque must have one node, a deque with <N
 704:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****    * elements (where N is the node buffer size) must have one node, a
 705:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****    * deque with N through (2N-1) elements must have two nodes, etc.
 706:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****    * - For every node other than start.node and finish.node, every
 707:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****    * element in the node is an initialized object.  If start.node ==
 708:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****    * finish.node, then [start.cur, finish.cur) are initialized
 709:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****    * objects, and the elements outside that range are uninitialized
 710:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****    * storage.  Otherwise, [start.cur, start.last) and [finish.first,
 711:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****    * finish.cur) are initialized objects, and [start.first, start.cur)
 712:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****    * and [finish.cur, finish.last) are uninitialized storage.
 713:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****    * - [%map, %map + map_size) is a valid, non-empty range.
 714:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****    * - [start.node, finish.node] is a valid range contained within
 715:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****    *   [%map, %map + map_size).
 716:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****    * - A pointer in the range [%map, %map + map_size) points to an allocated
 717:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****    *   node if and only if the pointer is in the range
 718:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****    *   [start.node, finish.node].
 719:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****    *
 720:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****    *  Here's the magic:  nothing in deque is @b aware of the discontiguous
 721:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****    *  storage!
 722:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****    *
 723:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****    *  The memory setup and layout occurs in the parent, _Base, and the iterator
 724:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****    *  class is entirely responsible for @a leaping from one node to the next.
 725:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****    *  All the implementation routines for deque itself work only through the
 726:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****    *  start and finish iterators.  This keeps the routines simple and sane,
 727:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****    *  and we can use other standard algorithms as well.
 728:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****   */
 729:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****   template<typename _Tp, typename _Alloc = std::allocator<_Tp> >
 730:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****     class deque : protected _Deque_base<_Tp, _Alloc>
 731:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****     {
 732:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       // concept requirements
 733:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       typedef typename _Alloc::value_type        _Alloc_value_type;
 734:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       __glibcxx_class_requires(_Tp, _SGIAssignableConcept)
 735:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       __glibcxx_class_requires2(_Tp, _Alloc_value_type, _SameTypeConcept)
 736:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
 737:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       typedef _Deque_base<_Tp, _Alloc>           _Base;
 738:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       typedef typename _Base::_Tp_alloc_type	 _Tp_alloc_type;
 739:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
 740:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****     public:
 741:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       typedef _Tp                                        value_type;
 742:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       typedef typename _Tp_alloc_type::pointer           pointer;
 743:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       typedef typename _Tp_alloc_type::const_pointer     const_pointer;
 744:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       typedef typename _Tp_alloc_type::reference         reference;
 745:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       typedef typename _Tp_alloc_type::const_reference   const_reference;
 746:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       typedef typename _Base::iterator                   iterator;
 747:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       typedef typename _Base::const_iterator             const_iterator;
 748:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       typedef std::reverse_iterator<const_iterator>      const_reverse_iterator;
 749:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       typedef std::reverse_iterator<iterator>            reverse_iterator;
 750:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       typedef size_t                             size_type;
 751:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       typedef ptrdiff_t                          difference_type;
 752:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       typedef _Alloc                             allocator_type;
 753:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
 754:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****     protected:
 755:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       typedef pointer*                           _Map_pointer;
 756:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
 757:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       static size_t _S_buffer_size()
 758:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       { return __deque_buf_size(sizeof(_Tp)); }
 759:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
 760:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       // Functions controlling memory layout, and nothing else.
 761:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       using _Base::_M_initialize_map;
 762:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       using _Base::_M_create_nodes;
 763:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       using _Base::_M_destroy_nodes;
 764:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       using _Base::_M_allocate_node;
 765:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       using _Base::_M_deallocate_node;
 766:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       using _Base::_M_allocate_map;
 767:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       using _Base::_M_deallocate_map;
 768:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       using _Base::_M_get_Tp_allocator;
 769:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
 770:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       /** 
 771:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  A total of four data members accumulated down the hierarchy.
 772:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  May be accessed via _M_impl.*
 773:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        */
 774:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       using _Base::_M_impl;
 775:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
 776:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****     public:
 777:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       // [23.2.1.1] construct/copy/destroy
 778:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       // (assign() and get_allocator() are also listed in this section)
 779:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       /**
 780:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  @brief  Default constructor creates no elements.
 781:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        */
 782:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       deque()
 783:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       : _Base() { }
 784:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
 785:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       /**
 786:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  @brief  Creates a %deque with no elements.
 787:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  @param  __a  An allocator object.
 788:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        */
 789:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       explicit
 790:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       deque(const allocator_type& __a)
 791:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       : _Base(__a, 0) { }
 792:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
 793:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** #if __cplusplus >= 201103L
 794:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       /**
 795:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  @brief  Creates a %deque with default constructed elements.
 796:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  @param  __n  The number of elements to initially create.
 797:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *
 798:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  This constructor fills the %deque with @a n default
 799:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  constructed elements.
 800:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        */
 801:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       explicit
 802:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       deque(size_type __n)
 803:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       : _Base(__n)
 804:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       { _M_default_initialize(); }
 805:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
 806:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       /**
 807:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  @brief  Creates a %deque with copies of an exemplar element.
 808:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  @param  __n  The number of elements to initially create.
 809:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  @param  __value  An element to copy.
 810:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  @param  __a  An allocator.
 811:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *
 812:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  This constructor fills the %deque with @a __n copies of @a __value.
 813:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        */
 814:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       deque(size_type __n, const value_type& __value,
 815:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	    const allocator_type& __a = allocator_type())
 816:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       : _Base(__a, __n)
 817:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       { _M_fill_initialize(__value); }
 818:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** #else
 819:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       /**
 820:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  @brief  Creates a %deque with copies of an exemplar element.
 821:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  @param  __n  The number of elements to initially create.
 822:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  @param  __value  An element to copy.
 823:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  @param  __a  An allocator.
 824:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *
 825:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  This constructor fills the %deque with @a __n copies of @a __value.
 826:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        */
 827:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       explicit
 828:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       deque(size_type __n, const value_type& __value = value_type(),
 829:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	    const allocator_type& __a = allocator_type())
 830:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       : _Base(__a, __n)
 831:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       { _M_fill_initialize(__value); }
 832:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** #endif
 833:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
 834:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       /**
 835:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  @brief  %Deque copy constructor.
 836:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  @param  __x  A %deque of identical element and allocator types.
 837:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *
 838:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  The newly-created %deque uses a copy of the allocation object used
 839:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  by @a __x.
 840:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        */
 841:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       deque(const deque& __x)
 842:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       : _Base(__x._M_get_Tp_allocator(), __x.size())
 843:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       { std::__uninitialized_copy_a(__x.begin(), __x.end(), 
 844:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 				    this->_M_impl._M_start,
 845:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 				    _M_get_Tp_allocator()); }
 846:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
 847:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** #if __cplusplus >= 201103L
 848:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       /**
 849:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  @brief  %Deque move constructor.
 850:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  @param  __x  A %deque of identical element and allocator types.
 851:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *
 852:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  The newly-created %deque contains the exact contents of @a __x.
 853:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  The contents of @a __x are a valid, but unspecified %deque.
 854:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        */
 855:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       deque(deque&& __x)
 856:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       : _Base(std::move(__x)) { }
 857:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
 858:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       /**
 859:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  @brief  Builds a %deque from an initializer list.
 860:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  @param  __l  An initializer_list.
 861:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  @param  __a  An allocator object.
 862:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *
 863:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  Create a %deque consisting of copies of the elements in the
 864:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  initializer_list @a __l.
 865:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *
 866:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  This will call the element type's copy constructor N times
 867:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  (where N is __l.size()) and do no memory reallocation.
 868:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        */
 869:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       deque(initializer_list<value_type> __l,
 870:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	    const allocator_type& __a = allocator_type())
 871:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       : _Base(__a)
 872:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       {
 873:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	_M_range_initialize(__l.begin(), __l.end(),
 874:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 			    random_access_iterator_tag());
 875:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       }
 876:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** #endif
 877:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
 878:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       /**
 879:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  @brief  Builds a %deque from a range.
 880:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  @param  __first  An input iterator.
 881:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  @param  __last  An input iterator.
 882:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  @param  __a  An allocator object.
 883:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *
 884:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  Create a %deque consisting of copies of the elements from [__first,
 885:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  __last).
 886:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *
 887:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  If the iterators are forward, bidirectional, or random-access, then
 888:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  this will call the elements' copy constructor N times (where N is
 889:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  distance(__first,__last)) and do no memory reallocation.  But if only
 890:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  input iterators are used, then this will do at most 2N calls to the
 891:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  copy constructor, and logN memory reallocations.
 892:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        */
 893:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** #if __cplusplus >= 201103L
 894:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       template<typename _InputIterator,
 895:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
 896:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****         deque(_InputIterator __first, _InputIterator __last,
 897:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	      const allocator_type& __a = allocator_type())
 898:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	: _Base(__a)
 899:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****         { _M_initialize_dispatch(__first, __last, __false_type()); }
 900:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** #else
 901:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       template<typename _InputIterator>
 902:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****         deque(_InputIterator __first, _InputIterator __last,
 903:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	      const allocator_type& __a = allocator_type())
 904:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	: _Base(__a)
 905:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****         {
 906:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	  // Check whether it's an integral type.  If so, it's not an iterator.
 907:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
 908:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	  _M_initialize_dispatch(__first, __last, _Integral());
 909:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	}
 910:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** #endif
 911:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
 912:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       /**
 913:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  The dtor only erases the elements, and note that if the elements
 914:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  themselves are pointers, the pointed-to memory is not touched in any
 915:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  way.  Managing the pointer is the user's responsibility.
 916:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        */
 917:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       ~deque() _GLIBCXX_NOEXCEPT
 918:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       { _M_destroy_data(begin(), end(), _M_get_Tp_allocator()); }
 919:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
 920:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       /**
 921:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  @brief  %Deque assignment operator.
 922:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  @param  __x  A %deque of identical element and allocator types.
 923:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *
 924:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  All the elements of @a x are copied, but unlike the copy constructor,
 925:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  the allocator object is not copied.
 926:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        */
 927:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       deque&
 928:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       operator=(const deque& __x);
 929:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
 930:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** #if __cplusplus >= 201103L
 931:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       /**
 932:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  @brief  %Deque move assignment operator.
 933:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  @param  __x  A %deque of identical element and allocator types.
 934:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *
 935:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  The contents of @a __x are moved into this deque (without copying).
 936:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  @a __x is a valid, but unspecified %deque.
 937:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        */
 938:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       deque&
 939:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       operator=(deque&& __x)
 940:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       {
 941:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	// NB: DR 1204.
 942:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	// NB: DR 675.
 943:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	this->clear();
 944:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	this->swap(__x);
 945:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	return *this;
 946:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       }
 947:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
 948:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       /**
 949:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  @brief  Assigns an initializer list to a %deque.
 950:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  @param  __l  An initializer_list.
 951:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *
 952:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  This function fills a %deque with copies of the elements in the
 953:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  initializer_list @a __l.
 954:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *
 955:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  Note that the assignment completely changes the %deque and that the
 956:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  resulting %deque's size is the same as the number of elements
 957:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  assigned.  Old data may be lost.
 958:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        */
 959:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       deque&
 960:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       operator=(initializer_list<value_type> __l)
 961:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       {
 962:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	this->assign(__l.begin(), __l.end());
 963:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	return *this;
 964:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       }
 965:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** #endif
 966:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
 967:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       /**
 968:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  @brief  Assigns a given value to a %deque.
 969:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  @param  __n  Number of elements to be assigned.
 970:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  @param  __val  Value to be assigned.
 971:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *
 972:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  This function fills a %deque with @a n copies of the given
 973:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  value.  Note that the assignment completely changes the
 974:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  %deque and that the resulting %deque's size is the same as
 975:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  the number of elements assigned.  Old data may be lost.
 976:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        */
 977:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       void
 978:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       assign(size_type __n, const value_type& __val)
 979:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       { _M_fill_assign(__n, __val); }
 980:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
 981:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       /**
 982:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  @brief  Assigns a range to a %deque.
 983:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  @param  __first  An input iterator.
 984:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  @param  __last   An input iterator.
 985:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *
 986:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  This function fills a %deque with copies of the elements in the
 987:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  range [__first,__last).
 988:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *
 989:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  Note that the assignment completely changes the %deque and that the
 990:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  resulting %deque's size is the same as the number of elements
 991:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  assigned.  Old data may be lost.
 992:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        */
 993:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** #if __cplusplus >= 201103L
 994:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       template<typename _InputIterator,
 995:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
 996:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****         void
 997:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****         assign(_InputIterator __first, _InputIterator __last)
 998:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****         { _M_assign_dispatch(__first, __last, __false_type()); }
 999:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** #else
1000:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       template<typename _InputIterator>
1001:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****         void
1002:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****         assign(_InputIterator __first, _InputIterator __last)
1003:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****         {
1004:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
1005:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	  _M_assign_dispatch(__first, __last, _Integral());
1006:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	}
1007:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** #endif
1008:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
1009:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** #if __cplusplus >= 201103L
1010:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       /**
1011:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  @brief  Assigns an initializer list to a %deque.
1012:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  @param  __l  An initializer_list.
1013:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *
1014:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  This function fills a %deque with copies of the elements in the
1015:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  initializer_list @a __l.
1016:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *
1017:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  Note that the assignment completely changes the %deque and that the
1018:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  resulting %deque's size is the same as the number of elements
1019:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  assigned.  Old data may be lost.
1020:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        */
1021:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       void
1022:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       assign(initializer_list<value_type> __l)
1023:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       { this->assign(__l.begin(), __l.end()); }
1024:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** #endif
1025:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
1026:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       /// Get a copy of the memory allocation object.
1027:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       allocator_type
1028:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       get_allocator() const _GLIBCXX_NOEXCEPT
1029:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       { return _Base::get_allocator(); }
1030:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
1031:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       // iterators
1032:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       /**
1033:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  Returns a read/write iterator that points to the first element in the
1034:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  %deque.  Iteration is done in ordinary element order.
1035:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        */
1036:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       iterator
1037:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       begin() _GLIBCXX_NOEXCEPT
1038:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       { return this->_M_impl._M_start; }
1039:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
1040:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       /**
1041:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  Returns a read-only (constant) iterator that points to the first
1042:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  element in the %deque.  Iteration is done in ordinary element order.
1043:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        */
1044:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       const_iterator
1045:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       begin() const _GLIBCXX_NOEXCEPT
1046:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       { return this->_M_impl._M_start; }
1047:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
1048:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       /**
1049:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  Returns a read/write iterator that points one past the last
1050:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  element in the %deque.  Iteration is done in ordinary
1051:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  element order.
1052:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        */
1053:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       iterator
1054:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       end() _GLIBCXX_NOEXCEPT
1055:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       { return this->_M_impl._M_finish; }
1056:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
1057:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       /**
1058:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  Returns a read-only (constant) iterator that points one past
1059:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  the last element in the %deque.  Iteration is done in
1060:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  ordinary element order.
1061:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        */
1062:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       const_iterator
1063:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       end() const _GLIBCXX_NOEXCEPT
1064:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       { return this->_M_impl._M_finish; }
1065:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
1066:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       /**
1067:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  Returns a read/write reverse iterator that points to the
1068:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  last element in the %deque.  Iteration is done in reverse
1069:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  element order.
1070:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        */
1071:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       reverse_iterator
1072:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       rbegin() _GLIBCXX_NOEXCEPT
1073:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       { return reverse_iterator(this->_M_impl._M_finish); }
1074:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
1075:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       /**
1076:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  Returns a read-only (constant) reverse iterator that points
1077:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  to the last element in the %deque.  Iteration is done in
1078:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  reverse element order.
1079:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        */
1080:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       const_reverse_iterator
1081:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       rbegin() const _GLIBCXX_NOEXCEPT
1082:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       { return const_reverse_iterator(this->_M_impl._M_finish); }
1083:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
1084:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       /**
1085:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  Returns a read/write reverse iterator that points to one
1086:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  before the first element in the %deque.  Iteration is done
1087:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  in reverse element order.
1088:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        */
1089:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       reverse_iterator
1090:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       rend() _GLIBCXX_NOEXCEPT
1091:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       { return reverse_iterator(this->_M_impl._M_start); }
1092:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
1093:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       /**
1094:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  Returns a read-only (constant) reverse iterator that points
1095:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  to one before the first element in the %deque.  Iteration is
1096:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  done in reverse element order.
1097:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        */
1098:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       const_reverse_iterator
1099:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       rend() const _GLIBCXX_NOEXCEPT
1100:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       { return const_reverse_iterator(this->_M_impl._M_start); }
1101:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
1102:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** #if __cplusplus >= 201103L
1103:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       /**
1104:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  Returns a read-only (constant) iterator that points to the first
1105:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  element in the %deque.  Iteration is done in ordinary element order.
1106:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        */
1107:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       const_iterator
1108:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       cbegin() const noexcept
1109:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       { return this->_M_impl._M_start; }
1110:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
1111:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       /**
1112:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  Returns a read-only (constant) iterator that points one past
1113:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  the last element in the %deque.  Iteration is done in
1114:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  ordinary element order.
1115:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        */
1116:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       const_iterator
1117:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       cend() const noexcept
1118:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       { return this->_M_impl._M_finish; }
1119:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
1120:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       /**
1121:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  Returns a read-only (constant) reverse iterator that points
1122:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  to the last element in the %deque.  Iteration is done in
1123:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  reverse element order.
1124:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        */
1125:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       const_reverse_iterator
1126:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       crbegin() const noexcept
1127:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       { return const_reverse_iterator(this->_M_impl._M_finish); }
1128:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
1129:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       /**
1130:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  Returns a read-only (constant) reverse iterator that points
1131:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  to one before the first element in the %deque.  Iteration is
1132:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  done in reverse element order.
1133:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        */
1134:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       const_reverse_iterator
1135:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       crend() const noexcept
1136:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       { return const_reverse_iterator(this->_M_impl._M_start); }
1137:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** #endif
1138:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
1139:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       // [23.2.1.2] capacity
1140:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       /**  Returns the number of elements in the %deque.  */
1141:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       size_type
1142:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       size() const _GLIBCXX_NOEXCEPT
1143:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       { return this->_M_impl._M_finish - this->_M_impl._M_start; }
1144:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
1145:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       /**  Returns the size() of the largest possible %deque.  */
1146:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       size_type
1147:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       max_size() const _GLIBCXX_NOEXCEPT
1148:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       { return _M_get_Tp_allocator().max_size(); }
1149:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
1150:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** #if __cplusplus >= 201103L
1151:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       /**
1152:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  @brief  Resizes the %deque to the specified number of elements.
1153:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  @param  __new_size  Number of elements the %deque should contain.
1154:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *
1155:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  This function will %resize the %deque to the specified
1156:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  number of elements.  If the number is smaller than the
1157:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  %deque's current size the %deque is truncated, otherwise
1158:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  default constructed elements are appended.
1159:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        */
1160:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       void
1161:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       resize(size_type __new_size)
1162:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       {
1163:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	const size_type __len = size();
1164:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	if (__new_size > __len)
1165:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	  _M_default_append(__new_size - __len);
1166:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	else if (__new_size < __len)
1167:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	  _M_erase_at_end(this->_M_impl._M_start
1168:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 			  + difference_type(__new_size));
1169:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       }
1170:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
1171:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       /**
1172:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  @brief  Resizes the %deque to the specified number of elements.
1173:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  @param  __new_size  Number of elements the %deque should contain.
1174:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  @param  __x  Data with which new elements should be populated.
1175:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *
1176:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  This function will %resize the %deque to the specified
1177:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  number of elements.  If the number is smaller than the
1178:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  %deque's current size the %deque is truncated, otherwise the
1179:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  %deque is extended and new elements are populated with given
1180:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  data.
1181:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        */
1182:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       void
1183:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       resize(size_type __new_size, const value_type& __x)
1184:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       {
1185:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	const size_type __len = size();
1186:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	if (__new_size > __len)
1187:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	  insert(this->_M_impl._M_finish, __new_size - __len, __x);
1188:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	else if (__new_size < __len)
1189:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	  _M_erase_at_end(this->_M_impl._M_start
1190:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 			  + difference_type(__new_size));
1191:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       }
1192:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** #else
1193:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       /**
1194:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  @brief  Resizes the %deque to the specified number of elements.
1195:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  @param  __new_size  Number of elements the %deque should contain.
1196:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  @param  __x  Data with which new elements should be populated.
1197:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *
1198:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  This function will %resize the %deque to the specified
1199:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  number of elements.  If the number is smaller than the
1200:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  %deque's current size the %deque is truncated, otherwise the
1201:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  %deque is extended and new elements are populated with given
1202:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  data.
1203:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        */
1204:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       void
1205:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       resize(size_type __new_size, value_type __x = value_type())
1206:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       {
1207:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	const size_type __len = size();
1208:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	if (__new_size > __len)
1209:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	  insert(this->_M_impl._M_finish, __new_size - __len, __x);
1210:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	else if (__new_size < __len)
1211:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	  _M_erase_at_end(this->_M_impl._M_start
1212:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 			  + difference_type(__new_size));
1213:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       }
1214:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** #endif
1215:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
1216:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** #if __cplusplus >= 201103L
1217:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       /**  A non-binding request to reduce memory use.  */
1218:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       void
1219:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       shrink_to_fit()
1220:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       { _M_shrink_to_fit(); }
1221:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** #endif
1222:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
1223:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       /**
1224:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  Returns true if the %deque is empty.  (Thus begin() would
1225:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  equal end().)
1226:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        */
1227:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       bool
1228:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       empty() const _GLIBCXX_NOEXCEPT
1229:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       { return this->_M_impl._M_finish == this->_M_impl._M_start; }
1230:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
1231:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       // element access
1232:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       /**
1233:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  @brief Subscript access to the data contained in the %deque.
1234:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  @param __n The index of the element for which data should be
1235:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  accessed.
1236:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  @return  Read/write reference to data.
1237:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *
1238:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  This operator allows for easy, array-style, data access.
1239:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  Note that data access with this operator is unchecked and
1240:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  out_of_range lookups are not defined. (For checked lookups
1241:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  see at().)
1242:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        */
1243:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       reference
1244:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       operator[](size_type __n)
1245:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       { return this->_M_impl._M_start[difference_type(__n)]; }
1246:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
1247:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       /**
1248:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  @brief Subscript access to the data contained in the %deque.
1249:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  @param __n The index of the element for which data should be
1250:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  accessed.
1251:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  @return  Read-only (constant) reference to data.
1252:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *
1253:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  This operator allows for easy, array-style, data access.
1254:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  Note that data access with this operator is unchecked and
1255:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  out_of_range lookups are not defined. (For checked lookups
1256:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  see at().)
1257:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        */
1258:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       const_reference
1259:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       operator[](size_type __n) const
1260:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       { return this->_M_impl._M_start[difference_type(__n)]; }
1261:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
1262:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****     protected:
1263:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       /// Safety check used only from at().
1264:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       void
1265:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       _M_range_check(size_type __n) const
1266:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       {
1267:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	if (__n >= this->size())
1268:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	  __throw_out_of_range(__N("deque::_M_range_check"));
1269:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       }
1270:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
1271:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****     public:
1272:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       /**
1273:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  @brief  Provides access to the data contained in the %deque.
1274:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  @param __n The index of the element for which data should be
1275:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  accessed.
1276:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  @return  Read/write reference to data.
1277:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  @throw  std::out_of_range  If @a __n is an invalid index.
1278:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *
1279:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  This function provides for safer data access.  The parameter
1280:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  is first checked that it is in the range of the deque.  The
1281:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  function throws out_of_range if the check fails.
1282:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        */
1283:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       reference
1284:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       at(size_type __n)
1285:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       {
1286:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	_M_range_check(__n);
1287:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	return (*this)[__n];
1288:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       }
1289:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
1290:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       /**
1291:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  @brief  Provides access to the data contained in the %deque.
1292:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  @param __n The index of the element for which data should be
1293:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  accessed.
1294:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  @return  Read-only (constant) reference to data.
1295:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  @throw  std::out_of_range  If @a __n is an invalid index.
1296:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *
1297:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  This function provides for safer data access.  The parameter is first
1298:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  checked that it is in the range of the deque.  The function throws
1299:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  out_of_range if the check fails.
1300:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        */
1301:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       const_reference
1302:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       at(size_type __n) const
1303:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       {
1304:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	_M_range_check(__n);
1305:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	return (*this)[__n];
1306:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       }
1307:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
1308:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       /**
1309:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  Returns a read/write reference to the data at the first
1310:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  element of the %deque.
1311:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        */
1312:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       reference
1313:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       front()
1314:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       { return *begin(); }
1315:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
1316:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       /**
1317:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  Returns a read-only (constant) reference to the data at the first
1318:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  element of the %deque.
1319:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        */
1320:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       const_reference
1321:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       front() const
1322:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       { return *begin(); }
1323:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
1324:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       /**
1325:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  Returns a read/write reference to the data at the last element of the
1326:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  %deque.
1327:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        */
1328:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       reference
1329:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       back()
1330:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       {
1331:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	iterator __tmp = end();
1332:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	--__tmp;
1333:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	return *__tmp;
1334:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       }
1335:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
1336:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       /**
1337:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  Returns a read-only (constant) reference to the data at the last
1338:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  element of the %deque.
1339:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        */
1340:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       const_reference
1341:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       back() const
1342:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       {
1343:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	const_iterator __tmp = end();
1344:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	--__tmp;
1345:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	return *__tmp;
1346:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       }
1347:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
1348:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       // [23.2.1.2] modifiers
1349:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       /**
1350:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  @brief  Add data to the front of the %deque.
1351:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  @param  __x  Data to be added.
1352:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *
1353:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  This is a typical stack operation.  The function creates an
1354:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  element at the front of the %deque and assigns the given
1355:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  data to it.  Due to the nature of a %deque this operation
1356:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  can be done in constant time.
1357:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        */
1358:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       void
1359:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       push_front(const value_type& __x)
1360:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       {
1361:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	if (this->_M_impl._M_start._M_cur != this->_M_impl._M_start._M_first)
1362:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	  {
1363:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	    this->_M_impl.construct(this->_M_impl._M_start._M_cur - 1, __x);
1364:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	    --this->_M_impl._M_start._M_cur;
1365:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	  }
1366:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	else
1367:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	  _M_push_front_aux(__x);
1368:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       }
1369:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
1370:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** #if __cplusplus >= 201103L
1371:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       void
1372:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       push_front(value_type&& __x)
1373:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       { emplace_front(std::move(__x)); }
1374:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
1375:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       template<typename... _Args>
1376:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****         void
1377:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****         emplace_front(_Args&&... __args);
1378:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** #endif
1379:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
1380:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       /**
1381:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  @brief  Add data to the end of the %deque.
1382:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  @param  __x  Data to be added.
1383:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *
1384:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  This is a typical stack operation.  The function creates an
1385:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  element at the end of the %deque and assigns the given data
1386:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  to it.  Due to the nature of a %deque this operation can be
1387:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  done in constant time.
1388:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        */
1389:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       void
1390:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       push_back(const value_type& __x)
1391:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       {
1392:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	if (this->_M_impl._M_finish._M_cur
1393:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	    != this->_M_impl._M_finish._M_last - 1)
1394:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	  {
1395:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	    this->_M_impl.construct(this->_M_impl._M_finish._M_cur, __x);
1396:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	    ++this->_M_impl._M_finish._M_cur;
1397:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	  }
1398:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	else
1399:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	  _M_push_back_aux(__x);
1400:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       }
1401:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
1402:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** #if __cplusplus >= 201103L
1403:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       void
1404:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       push_back(value_type&& __x)
1405:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       { emplace_back(std::move(__x)); }
1406:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
1407:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       template<typename... _Args>
1408:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****         void
1409:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****         emplace_back(_Args&&... __args);
1410:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** #endif
1411:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
1412:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       /**
1413:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  @brief  Removes first element.
1414:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *
1415:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  This is a typical stack operation.  It shrinks the %deque by one.
1416:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *
1417:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  Note that no data is returned, and if the first element's data is
1418:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  needed, it should be retrieved before pop_front() is called.
1419:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        */
1420:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       void
1421:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       pop_front()
1422:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       {
1423:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	if (this->_M_impl._M_start._M_cur
1424:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	    != this->_M_impl._M_start._M_last - 1)
1425:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	  {
1426:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	    this->_M_impl.destroy(this->_M_impl._M_start._M_cur);
1427:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	    ++this->_M_impl._M_start._M_cur;
1428:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	  }
1429:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	else
1430:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	  _M_pop_front_aux();
1431:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       }
1432:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
1433:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       /**
1434:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  @brief  Removes last element.
1435:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *
1436:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  This is a typical stack operation.  It shrinks the %deque by one.
1437:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *
1438:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  Note that no data is returned, and if the last element's data is
1439:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  needed, it should be retrieved before pop_back() is called.
1440:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        */
1441:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       void
1442:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       pop_back()
1443:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       {
1444:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	if (this->_M_impl._M_finish._M_cur
1445:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	    != this->_M_impl._M_finish._M_first)
1446:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	  {
1447:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	    --this->_M_impl._M_finish._M_cur;
1448:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	    this->_M_impl.destroy(this->_M_impl._M_finish._M_cur);
1449:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	  }
1450:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	else
1451:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	  _M_pop_back_aux();
1452:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       }
1453:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
1454:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** #if __cplusplus >= 201103L
1455:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       /**
1456:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  @brief  Inserts an object in %deque before specified iterator.
1457:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  @param  __position  An iterator into the %deque.
1458:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  @param  __args  Arguments.
1459:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  @return  An iterator that points to the inserted data.
1460:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *
1461:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  This function will insert an object of type T constructed
1462:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  with T(std::forward<Args>(args)...) before the specified location.
1463:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        */
1464:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       template<typename... _Args>
1465:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****         iterator
1466:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****         emplace(iterator __position, _Args&&... __args);
1467:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** #endif
1468:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
1469:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       /**
1470:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  @brief  Inserts given value into %deque before specified iterator.
1471:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  @param  __position  An iterator into the %deque.
1472:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  @param  __x  Data to be inserted.
1473:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  @return  An iterator that points to the inserted data.
1474:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *
1475:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  This function will insert a copy of the given value before the
1476:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  specified location.
1477:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        */
1478:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       iterator
1479:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       insert(iterator __position, const value_type& __x);
1480:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
1481:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** #if __cplusplus >= 201103L
1482:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       /**
1483:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  @brief  Inserts given rvalue into %deque before specified iterator.
1484:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  @param  __position  An iterator into the %deque.
1485:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  @param  __x  Data to be inserted.
1486:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  @return  An iterator that points to the inserted data.
1487:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *
1488:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  This function will insert a copy of the given rvalue before the
1489:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  specified location.
1490:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        */
1491:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       iterator
1492:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       insert(iterator __position, value_type&& __x)
1493:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       { return emplace(__position, std::move(__x)); }
1494:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
1495:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       /**
1496:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  @brief  Inserts an initializer list into the %deque.
1497:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  @param  __p  An iterator into the %deque.
1498:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  @param  __l  An initializer_list.
1499:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *
1500:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  This function will insert copies of the data in the
1501:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  initializer_list @a __l into the %deque before the location
1502:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  specified by @a __p.  This is known as <em>list insert</em>.
1503:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        */
1504:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       void
1505:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       insert(iterator __p, initializer_list<value_type> __l)
1506:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       { this->insert(__p, __l.begin(), __l.end()); }
1507:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** #endif
1508:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
1509:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       /**
1510:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  @brief  Inserts a number of copies of given data into the %deque.
1511:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  @param  __position  An iterator into the %deque.
1512:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  @param  __n  Number of elements to be inserted.
1513:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  @param  __x  Data to be inserted.
1514:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *
1515:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  This function will insert a specified number of copies of the given
1516:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  data before the location specified by @a __position.
1517:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        */
1518:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       void
1519:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       insert(iterator __position, size_type __n, const value_type& __x)
1520:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       { _M_fill_insert(__position, __n, __x); }
1521:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
1522:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       /**
1523:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  @brief  Inserts a range into the %deque.
1524:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  @param  __position  An iterator into the %deque.
1525:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  @param  __first  An input iterator.
1526:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  @param  __last   An input iterator.
1527:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *
1528:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  This function will insert copies of the data in the range
1529:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  [__first,__last) into the %deque before the location specified
1530:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  by @a __position.  This is known as <em>range insert</em>.
1531:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        */
1532:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** #if __cplusplus >= 201103L
1533:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       template<typename _InputIterator,
1534:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1535:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****         void
1536:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****         insert(iterator __position, _InputIterator __first,
1537:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	       _InputIterator __last)
1538:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****         { _M_insert_dispatch(__position, __first, __last, __false_type()); }
1539:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** #else
1540:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       template<typename _InputIterator>
1541:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****         void
1542:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****         insert(iterator __position, _InputIterator __first,
1543:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	       _InputIterator __last)
1544:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****         {
1545:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	  // Check whether it's an integral type.  If so, it's not an iterator.
1546:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
1547:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	  _M_insert_dispatch(__position, __first, __last, _Integral());
1548:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	}
1549:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** #endif
1550:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
1551:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       /**
1552:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  @brief  Remove element at given position.
1553:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  @param  __position  Iterator pointing to element to be erased.
1554:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  @return  An iterator pointing to the next element (or end()).
1555:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *
1556:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  This function will erase the element at the given position and thus
1557:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  shorten the %deque by one.
1558:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *
1559:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  The user is cautioned that
1560:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  this function only erases the element, and that if the element is
1561:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  itself a pointer, the pointed-to memory is not touched in any way.
1562:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  Managing the pointer is the user's responsibility.
1563:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        */
1564:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       iterator
1565:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       erase(iterator __position);
1566:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
1567:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       /**
1568:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  @brief  Remove a range of elements.
1569:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  @param  __first  Iterator pointing to the first element to be erased.
1570:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  @param  __last  Iterator pointing to one past the last element to be
1571:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *                erased.
1572:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  @return  An iterator pointing to the element pointed to by @a last
1573:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *           prior to erasing (or end()).
1574:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *
1575:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  This function will erase the elements in the range
1576:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  [__first,__last) and shorten the %deque accordingly.
1577:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *
1578:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  The user is cautioned that
1579:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  this function only erases the elements, and that if the elements
1580:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  themselves are pointers, the pointed-to memory is not touched in any
1581:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  way.  Managing the pointer is the user's responsibility.
1582:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        */
1583:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       iterator
1584:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       erase(iterator __first, iterator __last);
1585:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
1586:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       /**
1587:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  @brief  Swaps data with another %deque.
1588:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  @param  __x  A %deque of the same element and allocator types.
1589:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *
1590:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  This exchanges the elements between two deques in constant time.
1591:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  (Four pointers, so it should be quite fast.)
1592:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  Note that the global std::swap() function is specialized such that
1593:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  std::swap(d1,d2) will feed to this function.
1594:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        */
1595:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       void
1596:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       swap(deque& __x)
1597:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       {
1598:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	std::swap(this->_M_impl._M_start, __x._M_impl._M_start);
1599:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	std::swap(this->_M_impl._M_finish, __x._M_impl._M_finish);
1600:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	std::swap(this->_M_impl._M_map, __x._M_impl._M_map);
1601:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	std::swap(this->_M_impl._M_map_size, __x._M_impl._M_map_size);
1602:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
1603:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
1604:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	// 431. Swapping containers with unequal allocators.
1605:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	std::__alloc_swap<_Tp_alloc_type>::_S_do_it(_M_get_Tp_allocator(),
1606:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 						    __x._M_get_Tp_allocator());
1607:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       }
1608:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
1609:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       /**
1610:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  Erases all the elements.  Note that this function only erases the
1611:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  elements, and that if the elements themselves are pointers, the
1612:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  pointed-to memory is not touched in any way.  Managing the pointer is
1613:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  the user's responsibility.
1614:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        */
1615:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       void
1616:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       clear() _GLIBCXX_NOEXCEPT
1617:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       { _M_erase_at_end(begin()); }
1618:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
1619:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****     protected:
1620:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       // Internal constructor functions follow.
1621:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
1622:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       // called by the range constructor to implement [23.1.1]/9
1623:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
1624:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1625:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       // 438. Ambiguity in the "do the right thing" clause
1626:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       template<typename _Integer>
1627:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****         void
1628:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****         _M_initialize_dispatch(_Integer __n, _Integer __x, __true_type)
1629:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****         {
1630:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	  _M_initialize_map(static_cast<size_type>(__n));
1631:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	  _M_fill_initialize(__x);
1632:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	}
1633:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
1634:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       // called by the range constructor to implement [23.1.1]/9
1635:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       template<typename _InputIterator>
1636:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****         void
1637:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****         _M_initialize_dispatch(_InputIterator __first, _InputIterator __last,
1638:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 			       __false_type)
1639:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****         {
1640:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	  typedef typename std::iterator_traits<_InputIterator>::
1641:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	    iterator_category _IterCategory;
1642:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	  _M_range_initialize(__first, __last, _IterCategory());
1643:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	}
1644:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
1645:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       // called by the second initialize_dispatch above
1646:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       //@{
1647:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       /**
1648:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  @brief Fills the deque with whatever is in [first,last).
1649:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  @param  __first  An input iterator.
1650:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  @param  __last  An input iterator.
1651:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  @return   Nothing.
1652:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *
1653:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  If the iterators are actually forward iterators (or better), then the
1654:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  memory layout can be done all at once.  Else we move forward using
1655:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  push_back on each value from the iterator.
1656:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        */
1657:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       template<typename _InputIterator>
1658:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****         void
1659:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****         _M_range_initialize(_InputIterator __first, _InputIterator __last,
1660:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 			    std::input_iterator_tag);
1661:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
1662:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       // called by the second initialize_dispatch above
1663:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       template<typename _ForwardIterator>
1664:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****         void
1665:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****         _M_range_initialize(_ForwardIterator __first, _ForwardIterator __last,
1666:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 			    std::forward_iterator_tag);
1667:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       //@}
1668:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
1669:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       /**
1670:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  @brief Fills the %deque with copies of value.
1671:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  @param  __value  Initial value.
1672:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  @return   Nothing.
1673:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  @pre _M_start and _M_finish have already been initialized,
1674:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  but none of the %deque's elements have yet been constructed.
1675:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *
1676:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  This function is called only when the user provides an explicit size
1677:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  (with or without an explicit exemplar value).
1678:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        */
1679:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       void
1680:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       _M_fill_initialize(const value_type& __value);
1681:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
1682:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** #if __cplusplus >= 201103L
1683:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       // called by deque(n).
1684:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       void
1685:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       _M_default_initialize();
1686:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** #endif
1687:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
1688:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       // Internal assign functions follow.  The *_aux functions do the actual
1689:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       // assignment work for the range versions.
1690:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
1691:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       // called by the range assign to implement [23.1.1]/9
1692:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
1693:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1694:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       // 438. Ambiguity in the "do the right thing" clause
1695:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       template<typename _Integer>
1696:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****         void
1697:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****         _M_assign_dispatch(_Integer __n, _Integer __val, __true_type)
1698:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****         { _M_fill_assign(__n, __val); }
1699:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
1700:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       // called by the range assign to implement [23.1.1]/9
1701:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       template<typename _InputIterator>
1702:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****         void
1703:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****         _M_assign_dispatch(_InputIterator __first, _InputIterator __last,
1704:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 			   __false_type)
1705:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****         {
1706:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	  typedef typename std::iterator_traits<_InputIterator>::
1707:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	    iterator_category _IterCategory;
1708:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	  _M_assign_aux(__first, __last, _IterCategory());
1709:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	}
1710:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
1711:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       // called by the second assign_dispatch above
1712:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       template<typename _InputIterator>
1713:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****         void
1714:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****         _M_assign_aux(_InputIterator __first, _InputIterator __last,
1715:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 		      std::input_iterator_tag);
1716:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
1717:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       // called by the second assign_dispatch above
1718:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       template<typename _ForwardIterator>
1719:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****         void
1720:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****         _M_assign_aux(_ForwardIterator __first, _ForwardIterator __last,
1721:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 		      std::forward_iterator_tag)
1722:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****         {
1723:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	  const size_type __len = std::distance(__first, __last);
1724:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	  if (__len > size())
1725:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	    {
1726:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	      _ForwardIterator __mid = __first;
1727:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	      std::advance(__mid, size());
1728:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	      std::copy(__first, __mid, begin());
1729:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	      insert(end(), __mid, __last);
1730:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	    }
1731:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	  else
1732:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	    _M_erase_at_end(std::copy(__first, __last, begin()));
1733:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	}
1734:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
1735:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       // Called by assign(n,t), and the range assign when it turns out
1736:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       // to be the same thing.
1737:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       void
1738:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       _M_fill_assign(size_type __n, const value_type& __val)
1739:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       {
1740:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	if (__n > size())
1741:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	  {
1742:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	    std::fill(begin(), end(), __val);
1743:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	    insert(end(), __n - size(), __val);
1744:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	  }
1745:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	else
1746:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	  {
1747:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	    _M_erase_at_end(begin() + difference_type(__n));
1748:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	    std::fill(begin(), end(), __val);
1749:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	  }
1750:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       }
1751:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
1752:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       //@{
1753:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       /// Helper functions for push_* and pop_*.
1754:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** #if __cplusplus < 201103L
1755:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       void _M_push_back_aux(const value_type&);
1756:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
1757:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       void _M_push_front_aux(const value_type&);
1758:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** #else
1759:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       template<typename... _Args>
1760:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****         void _M_push_back_aux(_Args&&... __args);
1761:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
1762:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       template<typename... _Args>
1763:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****         void _M_push_front_aux(_Args&&... __args);
1764:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** #endif
1765:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
1766:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       void _M_pop_back_aux();
1767:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
1768:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       void _M_pop_front_aux();
1769:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       //@}
1770:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
1771:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       // Internal insert functions follow.  The *_aux functions do the actual
1772:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       // insertion work when all shortcuts fail.
1773:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
1774:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       // called by the range insert to implement [23.1.1]/9
1775:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
1776:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1777:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       // 438. Ambiguity in the "do the right thing" clause
1778:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       template<typename _Integer>
1779:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****         void
1780:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****         _M_insert_dispatch(iterator __pos,
1781:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 			   _Integer __n, _Integer __x, __true_type)
1782:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****         { _M_fill_insert(__pos, __n, __x); }
1783:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
1784:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       // called by the range insert to implement [23.1.1]/9
1785:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       template<typename _InputIterator>
1786:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****         void
1787:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****         _M_insert_dispatch(iterator __pos,
1788:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 			   _InputIterator __first, _InputIterator __last,
1789:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 			   __false_type)
1790:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****         {
1791:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	  typedef typename std::iterator_traits<_InputIterator>::
1792:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	    iterator_category _IterCategory;
1793:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****           _M_range_insert_aux(__pos, __first, __last, _IterCategory());
1794:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	}
1795:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
1796:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       // called by the second insert_dispatch above
1797:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       template<typename _InputIterator>
1798:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****         void
1799:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****         _M_range_insert_aux(iterator __pos, _InputIterator __first,
1800:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 			    _InputIterator __last, std::input_iterator_tag);
1801:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
1802:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       // called by the second insert_dispatch above
1803:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       template<typename _ForwardIterator>
1804:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****         void
1805:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****         _M_range_insert_aux(iterator __pos, _ForwardIterator __first,
1806:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 			    _ForwardIterator __last, std::forward_iterator_tag);
1807:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
1808:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       // Called by insert(p,n,x), and the range insert when it turns out to be
1809:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       // the same thing.  Can use fill functions in optimal situations,
1810:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       // otherwise passes off to insert_aux(p,n,x).
1811:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       void
1812:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       _M_fill_insert(iterator __pos, size_type __n, const value_type& __x);
1813:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
1814:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       // called by insert(p,x)
1815:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** #if __cplusplus < 201103L
1816:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       iterator
1817:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       _M_insert_aux(iterator __pos, const value_type& __x);
1818:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** #else
1819:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       template<typename... _Args>
1820:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****         iterator
1821:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****         _M_insert_aux(iterator __pos, _Args&&... __args);
1822:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** #endif
1823:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
1824:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       // called by insert(p,n,x) via fill_insert
1825:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       void
1826:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       _M_insert_aux(iterator __pos, size_type __n, const value_type& __x);
1827:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
1828:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       // called by range_insert_aux for forward iterators
1829:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       template<typename _ForwardIterator>
1830:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****         void
1831:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****         _M_insert_aux(iterator __pos,
1832:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 		      _ForwardIterator __first, _ForwardIterator __last,
1833:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 		      size_type __n);
1834:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
1835:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
1836:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       // Internal erase functions follow.
1837:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
1838:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       void
1839:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       _M_destroy_data_aux(iterator __first, iterator __last);
1840:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
1841:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       // Called by ~deque().
1842:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       // NB: Doesn't deallocate the nodes.
1843:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       template<typename _Alloc1>
1844:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****         void
1845:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****         _M_destroy_data(iterator __first, iterator __last, const _Alloc1&)
1846:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****         { _M_destroy_data_aux(__first, __last); }
1847:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
1848:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       void
1849:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       _M_destroy_data(iterator __first, iterator __last,
1850:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 		      const std::allocator<_Tp>&)
1851:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       {
1852:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	if (!__has_trivial_destructor(value_type))
1853:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	  _M_destroy_data_aux(__first, __last);
1854:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       }
1855:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
1856:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       // Called by erase(q1, q2).
1857:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       void
1858:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       _M_erase_at_begin(iterator __pos)
1859:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       {
1860:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	_M_destroy_data(begin(), __pos, _M_get_Tp_allocator());
1861:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	_M_destroy_nodes(this->_M_impl._M_start._M_node, __pos._M_node);
1862:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	this->_M_impl._M_start = __pos;
1863:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       }
1864:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
1865:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       // Called by erase(q1, q2), resize(), clear(), _M_assign_aux,
1866:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       // _M_fill_assign, operator=.
1867:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       void
1868:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       _M_erase_at_end(iterator __pos)
1869:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       {
1870:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	_M_destroy_data(__pos, end(), _M_get_Tp_allocator());
1871:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	_M_destroy_nodes(__pos._M_node + 1,
1872:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 			 this->_M_impl._M_finish._M_node + 1);
1873:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	this->_M_impl._M_finish = __pos;
1874:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       }
1875:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
1876:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** #if __cplusplus >= 201103L
1877:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       // Called by resize(sz).
1878:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       void
1879:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       _M_default_append(size_type __n);
1880:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
1881:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       bool
1882:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       _M_shrink_to_fit();
1883:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** #endif
1884:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
1885:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       //@{
1886:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       /// Memory-handling helpers for the previous internal insert functions.
1887:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       iterator
1888:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       _M_reserve_elements_at_front(size_type __n)
1889:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       {
1890:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	const size_type __vacancies = this->_M_impl._M_start._M_cur
1891:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	                              - this->_M_impl._M_start._M_first;
1892:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	if (__n > __vacancies)
1893:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	  _M_new_elements_at_front(__n - __vacancies);
1894:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	return this->_M_impl._M_start - difference_type(__n);
1895:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       }
1896:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
1897:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       iterator
1898:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       _M_reserve_elements_at_back(size_type __n)
1899:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       {
1900:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	const size_type __vacancies = (this->_M_impl._M_finish._M_last
1901:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 				       - this->_M_impl._M_finish._M_cur) - 1;
1902:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	if (__n > __vacancies)
1903:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	  _M_new_elements_at_back(__n - __vacancies);
1904:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	return this->_M_impl._M_finish + difference_type(__n);
1905:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       }
1906:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
1907:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       void
1908:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       _M_new_elements_at_front(size_type __new_elements);
1909:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
1910:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       void
1911:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       _M_new_elements_at_back(size_type __new_elements);
1912:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       //@}
1913:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
1914:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
1915:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       //@{
1916:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       /**
1917:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  @brief Memory-handling helpers for the major %map.
1918:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *
1919:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  Makes sure the _M_map has space for new nodes.  Does not
1920:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  actually add the nodes.  Can invalidate _M_map pointers.
1921:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        *  (And consequently, %deque iterators.)
1922:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****        */
1923:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       void
1924:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       _M_reserve_map_at_back(size_type __nodes_to_add = 1)
1925:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       {
1926:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	if (__nodes_to_add + 1 > this->_M_impl._M_map_size
1927:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	    - (this->_M_impl._M_finish._M_node - this->_M_impl._M_map))
1928:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	  _M_reallocate_map(__nodes_to_add, false);
1929:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       }
1930:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
1931:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       void
1932:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       _M_reserve_map_at_front(size_type __nodes_to_add = 1)
1933:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       {
1934:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	if (__nodes_to_add > size_type(this->_M_impl._M_start._M_node
 2956                             		.loc 7 1934 0
 2957 06a3 FB B2 00 00 00 00       		mov.L	#__ZZN10WallSensor11getInstanceEvE8instance, r11
 2958 06a9 ED BE 09                		mov.L	36[r11], r14
 2959 06ac ED B4 04                		mov.L	16[r11], r4
 2960 06af FF 04 4E                		sub	r4, r14, r4
 2961 06b2 6A 24                   		shar	#2, r4
 2962 06b4 3A 23 0A                		beq	.L494
 2963 06b7 E7 0E 19                		mov.L	r14, 100[r0]
 2964                             		.balign 8,3,4
 2965                             	.L208:
 2966                             	.LVL279:
 2967                             	.LBE1819:
 2968                             	.LBE1818:
 2969                             	.LBB1821:
 2970                             	.LBB1822:
 2971                             	.LBB1823:
 104:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h ****       }
 2972                             		.loc 8 104 0
 2973 06ba 3E 0B 05                		mov.L	#5, 44[r0]
 2974 06bd FB 1A 00 02             		mov.L	#0x200, r1
 2975 06c1 05 00 00 00             		bsr	__Znwm
 2976                             	.LVL280:
 2977                             	.LBE1823:
 2978                             	.LBE1822:
 2979                             	.LBE1821:
 481:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	__try
 2980                             		.loc 11 481 0
 2981 06c5 ED 0E 19                		mov.L	100[r0], r14
 2982 06c8 60 4E                   		sub	#4, r14
 2983 06ca E3 E1                   		mov.L	r1, [r14]
 484:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 					       - 1);
 2984                             		.loc 11 484 0
 2985 06cc AD 8B                   		mov.L	92[r0], r3
 2986 06ce ED 3E 09                		mov.L	36[r3], r14
 2987                             	.LVL281:
 2988 06d1 60 4E                   		sub	#4, r14
 2989                             	.LVL282:
 2990                             	.LBB1824:
 2991                             	.LBB1825:
 236:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	_M_first = *__new_node;
 2992                             		.loc 7 236 0
 2993 06d3 E7 3E 09                		mov.L	r14, 36[r3]
 237:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	_M_last = _M_first + difference_type(_S_buffer_size());
 2994                             		.loc 7 237 0
 2995 06d6 EC EE                   		mov.L	[r14], r14
 2996                             	.LVL283:
 238:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       }
 2997                             		.loc 7 238 0
 2998 06d8 72 E3 00 02             		add	#0x200, r14, r3
 2999                             	.LBE1825:
 3000                             	.LBE1824:
 486:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** #if __cplusplus >= 201103L
 3001                             		.loc 11 486 0
 3002 06dc 72 E4 FE 01             		add	#0x1fe, r14, r4
 3003                             	.LBB1827:
 3004                             	.LBB1826:
 237:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	_M_last = _M_first + difference_type(_S_buffer_size());
 3005                             		.loc 7 237 0
 3006 06e0 AD 8F                   		mov.L	92[r0], r7
 3007 06e2 E7 7E 07                		mov.L	r14, 28[r7]
 238:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       }
 3008                             		.loc 7 238 0
 3009 06e5 A2 73                   		mov.L	r3, 32[r7]
 3010                             	.LBE1826:
 3011                             	.LBE1827:
 486:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** #if __cplusplus >= 201103L
 3012                             		.loc 11 486 0
 3013 06e7 A1 F4                   		mov.L	r4, 24[r7]
 3014                             	.LVL284:
 3015                             	.LBB1828:
 3016                             	.LBB1829:
 3017                             		.loc 8 120 0
 3018 06e9 3A 67 FF                		beq	.L207
 3019 06ec F9 E5 FF 00             		mov.W	#0, 510[r14]
 3020                             	.LVL285:
 3021                             	.LBE1829:
 3022                             	.LBE1828:
 3023                             	.LBE1817:
 3024                             	.LBE1816:
 3025                             	.LBE1833:
 3026                             	.LBE1835:
 3027                             	.LBE1889:
 3028                             	.LBB1890:
 3029                             	.LBB1861:
 3030                             	.LBB1859:
 118:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	  {
 3031                             		.loc 11 118 0
 3032 06f0 ED 0A 17                		mov.L	92[r0], r10
 3033 06f3 ED AE 1A                		mov.L	104[r10], r14
 3034 06f6 06 85 AE 1B             		cmp	108[r10].L, r14
 3035 06fa 3B 63 FF                		bne	.L495
 3036                             	.LVL286:
 3037 06fd FC 13 00                		.balign 8,3,5
 3038                             	.L209:
 3039                             	.LBB1842:
 3040                             	.LBB1843:
 3041                             	.LBB1844:
 3042                             	.LBB1845:
 3043                             		.loc 7 1934 0
 3044 0700 FB C2 00 00 00 00       		mov.L	#__ZZN10WallSensor11getInstanceEvE8instance, r12
 3045 0706 ED CE 1D                		mov.L	116[r12], r14
 3046 0709 ED C4 18                		mov.L	96[r12], r4
 3047 070c FF 04 4E                		sub	r4, r14, r4
 3048 070f 6A 24                   		shar	#2, r4
 3049 0711 3A AC 09                		beq	.L496
 3050 0714 E7 0E 19                		mov.L	r14, 100[r0]
 3051 0717 03                      		.balign 8,3,4
 3052                             	.L212:
 3053                             	.LVL287:
 3054                             	.LBE1845:
 3055                             	.LBE1844:
 3056                             	.LBB1847:
 3057                             	.LBB1848:
 3058                             	.LBB1849:
 104:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h ****       }
 3059                             		.loc 8 104 0
 3060 0718 3E 0B 05                		mov.L	#5, 44[r0]
 3061 071b FB 1A 00 02             		mov.L	#0x200, r1
 3062 071f 05 00 00 00             		bsr	__Znwm
 3063                             	.LVL288:
 3064                             	.LBE1849:
 3065                             	.LBE1848:
 3066                             	.LBE1847:
 481:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	__try
 3067                             		.loc 11 481 0
 3068 0723 ED 0E 19                		mov.L	100[r0], r14
 3069 0726 60 4E                   		sub	#4, r14
 3070 0728 E3 E1                   		mov.L	r1, [r14]
 484:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 					       - 1);
 3071                             		.loc 11 484 0
 3072 072a AD 8C                   		mov.L	92[r0], r4
 3073 072c ED 4E 1D                		mov.L	116[r4], r14
 3074                             	.LVL289:
 3075 072f 60 4E                   		sub	#4, r14
 3076                             	.LVL290:
 3077                             	.LBB1850:
 3078                             	.LBB1851:
 236:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	_M_first = *__new_node;
 3079                             		.loc 7 236 0
 3080 0731 E7 4E 1D                		mov.L	r14, 116[r4]
 237:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	_M_last = _M_first + difference_type(_S_buffer_size());
 3081                             		.loc 7 237 0
 3082 0734 EC EE                   		mov.L	[r14], r14
 3083                             	.LVL291:
 238:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       }
 3084                             		.loc 7 238 0
 3085 0736 72 E3 00 02             		add	#0x200, r14, r3
 3086                             	.LBE1851:
 3087                             	.LBE1850:
 486:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** #if __cplusplus >= 201103L
 3088                             		.loc 11 486 0
 3089 073a 72 E4 FE 01             		add	#0x1fe, r14, r4
 3090                             	.LBB1853:
 3091                             	.LBB1852:
 237:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	_M_last = _M_first + difference_type(_S_buffer_size());
 3092                             		.loc 7 237 0
 3093 073e AD 8F                   		mov.L	92[r0], r7
 3094 0740 E7 7E 1B                		mov.L	r14, 108[r7]
 238:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       }
 3095                             		.loc 7 238 0
 3096 0743 A7 73                   		mov.L	r3, 112[r7]
 3097                             	.LBE1852:
 3098                             	.LBE1853:
 486:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** #if __cplusplus >= 201103L
 3099                             		.loc 11 486 0
 3100 0745 A6 F4                   		mov.L	r4, 104[r7]
 3101                             	.LVL292:
 3102                             	.LBB1854:
 3103                             	.LBB1855:
 3104                             		.loc 8 120 0
 3105 0747 3A 22 FF                		beq	.L211
 3106 074a F9 E5 FF 00             		mov.W	#0, 510[r14]
 3107                             	.LVL293:
 3108                             	.LBE1855:
 3109                             	.LBE1854:
 3110                             	.LBE1843:
 3111                             	.LBE1842:
 3112                             	.LBE1859:
 3113                             	.LBE1861:
 3114                             	.LBE1890:
 3115                             	.LBB1891:
 3116                             	.LBB1887:
 3117                             	.LBB1885:
 118:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	  {
 3118                             		.loc 11 118 0
 3119 074e ED 0A 17                		mov.L	92[r0], r10
 3120 0751 ED AE 10                		mov.L	64[r10], r14
 3121 0754 06 85 AE 11             		cmp	68[r10].L, r14
 3122 0758 3B 1E FF                		bne	.L497
 3123                             	.LVL294:
 3124 075b 77 10 01 00 00          		.balign 8,3,5
 3125                             	.L213:
 3126                             	.LBB1868:
 3127                             	.LBB1869:
 3128                             	.LBB1870:
 3129                             	.LBB1871:
 3130                             		.loc 7 1934 0
 3131 0760 FB C2 00 00 00 00       		mov.L	#__ZZN10WallSensor11getInstanceEvE8instance, r12
 3132 0766 ED CE 13                		mov.L	76[r12], r14
 3133 0769 ED C4 0E                		mov.L	56[r12], r4
 3134 076c FF 04 4E                		sub	r4, r14, r4
 3135 076f 6A 24                   		shar	#2, r4
 3136 0771 3A 81 09                		beq	.L498
 3137 0774 E7 0E 19                		mov.L	r14, 100[r0]
 3138 0777 03                      		.balign 8,3,4
 3139                             	.L216:
 3140                             	.LVL295:
 3141                             	.LBE1871:
 3142                             	.LBE1870:
 3143                             	.LBB1873:
 3144                             	.LBB1874:
 3145                             	.LBB1875:
 104:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h ****       }
 3146                             		.loc 8 104 0
 3147 0778 3E 0B 05                		mov.L	#5, 44[r0]
 3148 077b FB 1A 00 02             		mov.L	#0x200, r1
 3149 077f 05 00 00 00             		bsr	__Znwm
 3150                             	.LVL296:
 3151                             	.LBE1875:
 3152                             	.LBE1874:
 3153                             	.LBE1873:
 481:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	__try
 3154                             		.loc 11 481 0
 3155 0783 ED 0E 19                		mov.L	100[r0], r14
 3156 0786 60 4E                   		sub	#4, r14
 3157 0788 E3 E1                   		mov.L	r1, [r14]
 484:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 					       - 1);
 3158                             		.loc 11 484 0
 3159 078a AD 8C                   		mov.L	92[r0], r4
 3160 078c ED 4E 13                		mov.L	76[r4], r14
 3161                             	.LVL297:
 3162 078f 60 4E                   		sub	#4, r14
 3163                             	.LVL298:
 3164                             	.LBB1876:
 3165                             	.LBB1877:
 236:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	_M_first = *__new_node;
 3166                             		.loc 7 236 0
 3167 0791 E7 4E 13                		mov.L	r14, 76[r4]
 237:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	_M_last = _M_first + difference_type(_S_buffer_size());
 3168                             		.loc 7 237 0
 3169 0794 EC EE                   		mov.L	[r14], r14
 3170                             	.LVL299:
 238:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       }
 3171                             		.loc 7 238 0
 3172 0796 72 E3 00 02             		add	#0x200, r14, r3
 3173                             	.LBE1877:
 3174                             	.LBE1876:
 486:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** #if __cplusplus >= 201103L
 3175                             		.loc 11 486 0
 3176 079a 72 E4 FE 01             		add	#0x1fe, r14, r4
 3177                             	.LBB1879:
 3178                             	.LBB1878:
 237:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	_M_last = _M_first + difference_type(_S_buffer_size());
 3179                             		.loc 7 237 0
 3180 079e AD 8F                   		mov.L	92[r0], r7
 3181 07a0 E7 7E 11                		mov.L	r14, 68[r7]
 238:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       }
 3182                             		.loc 7 238 0
 3183 07a3 A4 F3                   		mov.L	r3, 72[r7]
 3184                             	.LBE1878:
 3185                             	.LBE1879:
 486:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** #if __cplusplus >= 201103L
 3186                             		.loc 11 486 0
 3187 07a5 A4 74                   		mov.L	r4, 64[r7]
 3188                             	.LVL300:
 3189                             	.LBB1880:
 3190                             	.LBB1881:
 3191                             		.loc 8 120 0
 3192 07a7 3A DB FE                		beq	.L215
 3193 07aa F9 E5 FF 00             		mov.W	#0, 510[r14]
 3194                             	.LBE1881:
 3195                             	.LBE1880:
 3196                             	.LBE1869:
 3197                             	.LBE1868:
 3198                             	.LBE1885:
 3199                             	.LBE1887:
 3200                             	.LBE1891:
  27:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****             ahead.push_front(0);
 3201                             		.loc 9 27 0
 3202 07ae CD 0E 60                		mov.B	96[r0], r14
 3203 07b1 62 1E                   		add	#1, r14
 3204 07b3 ED 0A 17                		mov.L	92[r0], r10
 3205 07b6 58 A4                   		movu.B	[r10], r4
 3206                             	.LVL301:
 3207 07b8 5B E3                   		movu.B	r14, r3
 3208 07ba C7 0E 60                		mov.B	r14, 96[r0]
 3209                             	.LVL302:
 3210 07bd 47 43                   		cmp	r4, r3
 3211 07bf 22 05 38 D7 FE          		bltu	.L465
 3212                             	.LVL303:
 3213 07c4 76 10 01 00             		.balign 8,3,5
 3214                             	.L200:
 3215                             	.LBE1895:
 3216                             	.LBE1898:
 3217                             	.LBE1679:
 3218                             	.LBE1678:
 3219                             		.loc 9 133 0
 3220 07c8 FB 12 00 00 00 00       		mov.L	#__ZGVZN10WallSensor11getInstanceEvE8instance, r1
 3221 07ce 05 00 00 00             		bsr	___cxa_guard_release
 3222                             	.LVL304:
 3223 07d2 FB 12 00 00 00 00       		mov.L	#__ZN10WallSensorD1Ev, r1
 3224 07d8 FB 22 00 00 00 00       		mov.L	#__ZZN10WallSensor11getInstanceEvE8instance, r2
 3225 07de FB 32 00 00 00 00       		mov.L	#___dso_handle, r3
 3226 07e4 05 00 00 00             		bsr	___cxa_atexit
 3227                             	.LVL305:
 3228                             	.LBE1916:
 3229                             	.LBE2042:
 3230                             	.LBB2043:
 3231                             	.LBB1925:
  29:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****         return instance;
 3232                             		.loc 4 29 0
 3233 07e8 FB B2 00 00 00 00       		mov.L	#__ZGVZN7Gamepad11getInstanceEvE8instance, r11
 3234 07ee 58 BB                   		movu.B	[r11], r11
 3235 07f0 E7 0B 18                		mov.L	r11, 96[r0]
 3236 07f3 61 0B                   		cmp	#0, r11
 3237 07f5 3B F3 FA                		bne	.L220
 3238                             	.LVL306:
 3239                             		.balign 8,3,5
 3240                             	.L483:
 3241 07f8 FB 12 00 00 00 00       		mov.L	#__ZGVZN7Gamepad11getInstanceEvE8instance, r1
 3242 07fe 05 00 00 00             		bsr	___cxa_guard_acquire
 3243                             	.LVL307:
 3244 0802 61 01                   		cmp	#0, r1
 3245 0804 3A E4 FA                		beq	.L220
 3246                             	.LVL308:
 3247                             	.LBB1921:
 3248                             	.LBB1922:
 104:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****         cross_y = 0;
 3249                             		.loc 4 104 0
 3250 0807 F9 02 17 00 00 00 00    		mov.L	#__ZZN7Gamepad11getInstanceEvE8instance, 92[r0]
 3251 080e AE 03                   		mov.L	96[r0], r3
 3252 0810 ED 0C 17                		mov.L	92[r0], r12
 3253 0813 C3 C3                   		mov.B	r3, [r12]
 105:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****         L3D_x = 0;
 3254                             		.loc 4 105 0
 3255 0815 C7 C3 01                		mov.B	r3, 1[r12]
 106:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****         R3D_x = 0;
 3256                             		.loc 4 106 0
 3257 0818 C7 C3 02                		mov.B	r3, 2[r12]
 107:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****         R3D_y = 0;
 3258                             		.loc 4 107 0
 3259 081b C7 C3 04                		mov.B	r3, 4[r12]
 108:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****         RT = 0;
 3260                             		.loc 4 108 0
 3261 081e C7 C3 05                		mov.B	r3, 5[r12]
 109:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****         LT = 0;
 3262                             		.loc 4 109 0
 3263 0821 C7 C3 06                		mov.B	r3, 6[r12]
 110:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****         A  = 0;
 3264                             		.loc 4 110 0
 3265 0824 C7 C3 07                		mov.B	r3, 7[r12]
 111:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****         B  = 0;
 3266                             		.loc 4 111 0
 3267 0827 E7 C3 02                		mov.L	r3, 8[r12]
 112:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****         Y  = 0;
 3268                             		.loc 4 112 0
 3269 082a E7 C3 03                		mov.L	r3, 12[r12]
 113:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****         X  = 0;
 3270                             		.loc 4 113 0
 3271 082d E7 C3 04                		mov.L	r3, 16[r12]
 114:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****         RB = 0;
 3272                             		.loc 4 114 0
 3273 0830 E7 C3 05                		mov.L	r3, 20[r12]
 115:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****         LB = 0;
 3274                             		.loc 4 115 0
 3275 0833 E7 C3 06                		mov.L	r3, 24[r12]
 116:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****         BACK = 0;
 3276                             		.loc 4 116 0
 3277 0836 E7 C3 07                		mov.L	r3, 28[r12]
 117:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****         START = 0;
 3278                             		.loc 4 117 0
 3279 0839 E7 C3 08                		mov.L	r3, 32[r12]
 3280                             	.LBE1922:
 3281                             	.LBE1921:
  29:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****         return instance;
 3282                             		.loc 4 29 0
 3283 083c FB 12 00 00 00 00       		mov.L	#__ZGVZN7Gamepad11getInstanceEvE8instance, r1
 3284                             	.LBB1924:
 3285                             	.LBB1923:
 118:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****         conStatus = false;
 3286                             		.loc 4 118 0
 3287 0842 E7 C3 09                		mov.L	r3, 36[r12]
 119:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****         preRecieveTime = 0;
 3288                             		.loc 4 119 0
 3289 0845 C7 C3 38                		mov.B	r3, 56[r12]
 120:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****     };
 3290                             		.loc 4 120 0
 3291 0848 E7 C3 0F                		mov.L	r3, 60[r12]
 3292 084b E7 C3 10                		mov.L	r3, 64[r12]
 3293                             	.LBE1923:
 3294                             	.LBE1924:
  29:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****         return instance;
 3295                             		.loc 4 29 0
 3296 084e 05 00 00 00             		bsr	___cxa_guard_release
 3297                             	.LVL309:
 3298 0852 FB 12 00 00 00 00       		mov.L	#__ZN7GamepadD1Ev, r1
 3299 0858 AD 8A                   		mov.L	92[r0], r2
 3300 085a FB 32 00 00 00 00       		mov.L	#___dso_handle, r3
 3301 0860 05 00 00 00             		bsr	___cxa_atexit
 3302                             	.LVL310:
 3303                             	.LBE1925:
 3304                             	.LBE2043:
 3305                             	.LBB2044:
 3306                             	.LBB2012:
 976:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         return instance;
 3307                             		.loc 6 976 0
 3308 0864 FB 12 00 00 00 00       		mov.L	#__ZGVZN9EventList11getInstanceEvE8instance, r1
 3309 086a 58 14                   		movu.B	[r1], r4
 3310 086c A5 8C                   		mov.L	r4, 92[r0]
 3311 086e 61 04                   		cmp	#0, r4
 3312 0870 3B 88 FA                		bne	.L227
 3313                             	.LVL311:
 3314                             		.balign 8,3,3
 3315                             	.L484:
 3316 0873 05 00 00 00             		bsr	___cxa_guard_acquire
 3317                             	.LVL312:
 3318 0877 61 01                   		cmp	#0, r1
 3319 0879 3A 7F FA                		beq	.L227
 3320                             	.LVL313:
 3321                             	.LBB1928:
 3322                             	.LBB1929:
 3323                             	.LBB1930:
 3324                             	.LBB1931:
 3325                             	.LBB1932:
 3326                             	.LBB1933:
 3327                             	.LBB1934:
 3328                             	.LBB1935:
 502:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	{ }
 3329                             		.loc 7 502 0
 3330 087c E1 00 17                		mov.L	92[r0], [r0]
 3331 087f E5 00 17 01             		mov.L	92[r0], 4[r0]
 3332                             	.LVL314:
 3333                             	.LBB1936:
 3334                             	.LBB1937:
 133:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
 3335                             		.loc 7 133 0
 3336 0883 E5 00 17 02             		mov.L	92[r0], 8[r0]
 3337 0887 E5 00 17 03             		mov.L	92[r0], 12[r0]
 3338 088b E5 00 17 04             		mov.L	92[r0], 16[r0]
 3339 088f E5 00 17 05             		mov.L	92[r0], 20[r0]
 3340                             	.LVL315:
 3341                             	.LBE1937:
 3342                             	.LBE1936:
 3343                             	.LBB1938:
 3344                             	.LBB1939:
 3345 0893 E5 00 17 06             		mov.L	92[r0], 24[r0]
 3346 0897 E5 00 17 07             		mov.L	92[r0], 28[r0]
 3347 089b E5 00 17 08             		mov.L	92[r0], 32[r0]
 3348 089f E5 00 17 09             		mov.L	92[r0], 36[r0]
 3349                             	.LBE1939:
 3350                             	.LBE1938:
 3351                             	.LBE1935:
 3352                             	.LBE1934:
 453:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
 3353                             		.loc 7 453 0
 3354 08a3 3E 0B 0F                		mov.L	#15, 44[r0]
 3355 08a6 EF 01                   		mov.L	r0, r1
 3356 08a8 AD 8A                   		mov.L	92[r0], r2
 3357 08aa 05 00 00 00             		bsr	__ZNSt11_Deque_baseIP13BaseMoveEventSaIS1_EE17_M_initialize_mapEm
 3358                             	.LVL316:
 3359                             	.LBE1933:
 3360                             	.LBE1932:
 3361                             	.LBE1931:
 3362                             	.LBE1930:
 3363                             	.LBB1940:
 3364                             	.LBB1941:
 3365                             	.LBB1942:
 3366                             	.LBB1943:
 3367                             	.LBB1944:
 3368                             	.LBB1945:
 513:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	{ }
 3369                             		.loc 7 513 0
 3370 08ae F9 02 18 00 00 00 00    		mov.L	#__ZZN9EventList11getInstanceEvE8instance, 96[r0]
 3371 08b5 AE 07                   		mov.L	96[r0], r7
 3372 08b7 F8 76 00                		mov.L	#0, [r7]
 3373 08ba 3E 71 00                		mov.L	#0, 4[r7]
 3374                             	.LVL317:
 3375                             	.LBB1946:
 3376                             	.LBB1947:
 133:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
 3377                             		.loc 7 133 0
 3378 08bd 3E 72 00                		mov.L	#0, 8[r7]
 3379 08c0 3E 73 00                		mov.L	#0, 12[r7]
 3380 08c3 3E 74 00                		mov.L	#0, 16[r7]
 3381 08c6 3E 75 00                		mov.L	#0, 20[r7]
 3382                             	.LVL318:
 3383                             	.LBE1947:
 3384                             	.LBE1946:
 3385                             	.LBB1948:
 3386                             	.LBB1949:
 3387 08c9 3E 76 00                		mov.L	#0, 24[r7]
 3388 08cc 3E 77 00                		mov.L	#0, 28[r7]
 3389 08cf 3E 78 00                		mov.L	#0, 32[r7]
 3390 08d2 3E 79 00                		mov.L	#0, 36[r7]
 3391                             	.LBE1949:
 3392                             	.LBE1948:
 3393                             	.LBE1945:
 3394                             	.LBE1944:
 471:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	if (__x._M_impl._M_map)
 3395                             		.loc 7 471 0
 3396 08d5 3E 0B 10                		mov.L	#16, 44[r0]
 3397 08d8 EF 71                   		mov.L	r7, r1
 3398 08da 66 02                   		mov.L	#0, r2
 3399 08dc 05 00 00 00             		bsr	__ZNSt11_Deque_baseIP13BaseMoveEventSaIS1_EE17_M_initialize_mapEm
 3400                             	.LVL319:
 472:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	  {
 3401                             		.loc 7 472 0
 3402 08e0 EC 0E                   		mov.L	[r0], r14
 3403 08e2 61 0E                   		cmp	#0, r14
 3404 08e4 3A 94 00                		beq	.L223
 3405                             	.LVL320:
 3406                             	.LBB1950:
 3407                             	.LBB1951:
 3408                             	.LBB1952:
 3409                             	.LBB1953:
 137:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
 3410                             		.loc 7 137 0
 3411 08e7 ED 7D 02                		mov.L	8[r7], r13
 3412                             	.LVL321:
 3413 08ea ED 7C 03                		mov.L	12[r7], r12
 3414                             	.LVL322:
 3415 08ed ED 7B 04                		mov.L	16[r7], r11
 3416                             	.LVL323:
 3417 08f0 A9 7C                   		mov.L	20[r7], r4
 3418                             	.LVL324:
 3419                             	.LBE1953:
 3420                             	.LBE1952:
 3421                             		.file 13 "c:\\progra~2\\gccfor~2.201\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\4.8.0.201602-gnurx\\bi
   1:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h **** // Move, forward and identity for C++0x + swap -*- C++ -*-
   2:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h **** 
   3:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h **** // Copyright (C) 2007-2013 Free Software Foundation, Inc.
   4:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h **** //
   5:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h **** // software; you can redistribute it and/or modify it under the
   7:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h **** // terms of the GNU General Public License as published by the
   8:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h **** // any later version.
  10:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h **** 
  11:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h **** // This library is distributed in the hope that it will be useful,
  12:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h **** // GNU General Public License for more details.
  15:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h **** 
  16:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h **** 
  20:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h **** // You should have received a copy of the GNU General Public License and
  21:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h **** // <http://www.gnu.org/licenses/>.
  24:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h **** 
  25:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h **** /** @file bits/move.h
  26:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h ****  *  This is an internal header file, included by other library headers.
  27:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h ****  *  Do not attempt to use it directly. @headername{utility}
  28:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h ****  */
  29:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h **** 
  30:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h **** #ifndef _MOVE_H
  31:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h **** #define _MOVE_H 1
  32:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h **** 
  33:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h **** #include <bits/c++config.h>
  34:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h **** #include <bits/concept_check.h>
  35:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h **** 
  36:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h **** namespace std _GLIBCXX_VISIBILITY(default)
  37:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h **** {
  38:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  39:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h **** 
  40:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h ****   // Used, in C++03 mode too, by allocators, etc.
  41:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h ****   /**
  42:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h ****    *  @brief Same as C++11 std::addressof
  43:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h ****    *  @ingroup utilities
  44:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h ****    */
  45:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h ****   template<typename _Tp>
  46:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h ****     inline _Tp*
  47:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h ****     __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
  48:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h ****     {
  49:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h ****       return reinterpret_cast<_Tp*>
  50:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h **** 	(&const_cast<char&>(reinterpret_cast<const volatile char&>(__r)));
  51:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h ****     }
  52:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h **** 
  53:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h **** _GLIBCXX_END_NAMESPACE_VERSION
  54:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h **** } // namespace
  55:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h **** 
  56:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h **** #if __cplusplus >= 201103L
  57:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h **** #include <type_traits> // Brings in std::declval too.
  58:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h **** 
  59:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h **** namespace std _GLIBCXX_VISIBILITY(default)
  60:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h **** {
  61:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  62:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h **** 
  63:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h ****   /**
  64:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h ****    *  @addtogroup utilities
  65:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h ****    *  @{
  66:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h ****    */
  67:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h **** 
  68:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h ****   /**
  69:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h ****    *  @brief  Forward an lvalue.
  70:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h ****    *  @return The parameter cast to the specified type.
  71:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h ****    *
  72:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h ****    *  This function is used to implement "perfect forwarding".
  73:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h ****    */
  74:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h ****   template<typename _Tp>
  75:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h ****     constexpr _Tp&&
  76:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h ****     forward(typename std::remove_reference<_Tp>::type& __t) noexcept
  77:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
  78:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h **** 
  79:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h ****   /**
  80:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h ****    *  @brief  Forward an rvalue.
  81:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h ****    *  @return The parameter cast to the specified type.
  82:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h ****    *
  83:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h ****    *  This function is used to implement "perfect forwarding".
  84:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h ****    */
  85:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h ****   template<typename _Tp>
  86:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h ****     constexpr _Tp&&
  87:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h ****     forward(typename std::remove_reference<_Tp>::type&& __t) noexcept
  88:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h ****     {
  89:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h ****       static_assert(!std::is_lvalue_reference<_Tp>::value, "template argument"
  90:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h **** 		    " substituting _Tp is an lvalue reference type");
  91:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h ****       return static_cast<_Tp&&>(__t);
  92:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h ****     }
  93:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h **** 
  94:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h ****   /**
  95:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h ****    *  @brief  Convert a value to an rvalue.
  96:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h ****    *  @param  __t  A thing of arbitrary type.
  97:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h ****    *  @return The parameter cast to an rvalue-reference to allow moving it.
  98:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h ****   */
  99:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h ****   template<typename _Tp>
 100:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h ****     constexpr typename std::remove_reference<_Tp>::type&&
 101:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h ****     move(_Tp&& __t) noexcept
 102:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 103:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h **** 
 104:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h **** 
 105:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h ****   template<typename _Tp>
 106:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h ****     struct __move_if_noexcept_cond
 107:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h ****     : public __and_<__not_<is_nothrow_move_constructible<_Tp>>,
 108:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h ****                     is_copy_constructible<_Tp>>::type { };
 109:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h **** 
 110:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h ****   /**
 111:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h ****    *  @brief  Conditionally convert a value to an rvalue.
 112:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h ****    *  @param  __x  A thing of arbitrary type.
 113:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h ****    *  @return The parameter, possibly cast to an rvalue-reference.
 114:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h ****    *
 115:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h ****    *  Same as std::move unless the type's move constructor could throw and the
 116:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h ****    *  type is copyable, in which case an lvalue-reference is returned instead.
 117:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h ****    */
 118:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h ****   template<typename _Tp>
 119:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h ****     inline constexpr typename
 120:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h ****     conditional<__move_if_noexcept_cond<_Tp>::value, const _Tp&, _Tp&&>::type
 121:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h ****     move_if_noexcept(_Tp& __x) noexcept
 122:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h ****     { return std::move(__x); }
 123:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h **** 
 124:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h ****   // declval, from type_traits.
 125:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h **** 
 126:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h ****   /**
 127:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h ****    *  @brief Returns the actual address of the object or function
 128:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h ****    *         referenced by r, even in the presence of an overloaded
 129:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h ****    *         operator&.
 130:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h ****    *  @param  __r  Reference to an object or function.
 131:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h ****    *  @return   The actual address.
 132:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h ****   */
 133:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h ****   template<typename _Tp>
 134:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h ****     inline _Tp*
 135:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h ****     addressof(_Tp& __r) noexcept
 136:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h ****     { return std::__addressof(__r); }
 137:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h **** 
 138:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h ****   /// @} group utilities
 139:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h **** _GLIBCXX_END_NAMESPACE_VERSION
 140:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h **** } // namespace
 141:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h **** 
 142:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h **** #define _GLIBCXX_MOVE(__val) std::move(__val)
 143:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h **** #define _GLIBCXX_FORWARD(_Tp, __val) std::forward<_Tp>(__val)
 144:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h **** #else
 145:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h **** #define _GLIBCXX_MOVE(__val) (__val)
 146:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h **** #define _GLIBCXX_FORWARD(_Tp, __val) (__val)
 147:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h **** #endif
 148:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h **** 
 149:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h **** namespace std _GLIBCXX_VISIBILITY(default)
 150:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h **** {
 151:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
 152:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h **** 
 153:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h ****   /**
 154:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h ****    *  @addtogroup utilities
 155:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h ****    *  @{
 156:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h ****    */
 157:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h **** 
 158:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h ****   /**
 159:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h ****    *  @brief Swaps two values.
 160:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h ****    *  @param  __a  A thing of arbitrary type.
 161:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h ****    *  @param  __b  Another thing of arbitrary type.
 162:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h ****    *  @return   Nothing.
 163:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h ****   */
 164:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h ****   template<typename _Tp>
 165:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h ****     inline void
 166:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h ****     swap(_Tp& __a, _Tp& __b)
 167:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h **** #if __cplusplus >= 201103L
 168:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h ****     noexcept(__and_<is_nothrow_move_constructible<_Tp>,
 169:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h **** 	            is_nothrow_move_assignable<_Tp>>::value)
 170:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h **** #endif
 171:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h ****     {
 172:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h ****       // concept requirements
 173:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h ****       __glibcxx_function_requires(_SGIAssignableConcept<_Tp>)
 174:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h **** 
 175:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h ****       _Tp __tmp = _GLIBCXX_MOVE(__a);
 176:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h ****       __a = _GLIBCXX_MOVE(__b);
 3422                             		.loc 13 176 0
 3423 08f2 FB 12 00 00 00 00       		mov.L	#__ZZN9EventList11getInstanceEvE8instance+8, r1
 3424                             	.LVL325:
 3425 08f8 71 02 08                		add	#8, r0, r2
 3426                             	.LVL326:
 3427 08fb 75 43 10                		mov.L	#16, r3
 3428 08fe 7F 8F                   		smovf
 3429                             	.LVL327:
 3430                             	.LBE1951:
 3431                             	.LBE1950:
 3432                             	.LBB1955:
 3433                             	.LBB1956:
 3434                             	.LBB1957:
 3435                             	.LBB1958:
 137:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
 3436                             		.loc 7 137 0
 3437 0900 ED 7A 06                		mov.L	24[r7], r10
 3438 0903 AE 03                   		mov.L	96[r0], r3
 3439 0905 A9 BF                   		mov.L	28[r3], r7
 3440 0907 ED 3F 08                		mov.L	32[r3], r15
 3441 090a AA 3D                   		mov.L	36[r3], r5
 3442                             	.LBE1958:
 3443                             	.LBE1957:
 3444                             		.loc 13 176 0
 3445 090c FB 12 00 00 00 00       		mov.L	#__ZZN9EventList11getInstanceEvE8instance+24, r1
 3446 0912 71 02 18                		add	#24, r0, r2
 3447 0915 75 43 10                		mov.L	#16, r3
 3448                             	.LBE1956:
 3449                             	.LBE1955:
 3450                             	.LBB1962:
 3451                             	.LBB1954:
 177:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h ****       __b = _GLIBCXX_MOVE(__tmp);
 3452                             		.loc 13 177 0
 3453 0918 E7 0D 02                		mov.L	r13, 8[r0]
 3454 091b E7 0C 03                		mov.L	r12, 12[r0]
 3455 091e E7 0B 04                		mov.L	r11, 16[r0]
 3456 0921 A1 0C                   		mov.L	r4, 20[r0]
 3457                             	.LVL328:
 3458                             	.LBE1954:
 3459                             	.LBE1962:
 3460                             	.LBB1963:
 3461                             	.LBB1959:
 176:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h ****       __b = _GLIBCXX_MOVE(__tmp);
 3462                             		.loc 13 176 0
 3463 0923 7F 8F                   		smovf
 3464                             	.LVL329:
 3465                             	.LBE1959:
 3466                             	.LBE1963:
 3467                             	.LBB1964:
 3468                             	.LBB1965:
 175:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h ****       __a = _GLIBCXX_MOVE(__b);
 3469                             		.loc 13 175 0
 3470 0925 ED 0B 18                		mov.L	96[r0], r11
 3471 0928 EC B4                   		mov.L	[r11], r4
 3472                             	.LBE1965:
 3473                             	.LBE1964:
 3474                             	.LBB1967:
 3475                             	.LBB1968:
 3476 092a ED BB 01                		mov.L	4[r11], r11
 3477                             	.LBE1968:
 3478                             	.LBE1967:
 3479                             	.LBB1971:
 3480                             	.LBB1960:
 3481                             		.loc 13 177 0
 3482 092d E7 0A 06                		mov.L	r10, 24[r0]
 3483                             	.LBE1960:
 3484                             	.LBE1971:
 3485                             	.LBB1972:
 3486                             	.LBB1969:
 176:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h ****       __b = _GLIBCXX_MOVE(__tmp);
 3487                             		.loc 13 176 0
 3488 0930 ED 0C 18                		mov.L	96[r0], r12
 3489 0933 E5 0C 01 01             		mov.L	4[r0], 4[r12]
 3490                             	.LBE1969:
 3491                             	.LBE1972:
 3492                             	.LBB1973:
 3493                             	.LBB1961:
 3494                             		.loc 13 177 0
 3495 0937 A1 8F                   		mov.L	r7, 28[r0]
 3496 0939 E7 0F 08                		mov.L	r15, 32[r0]
 3497 093c A2 0D                   		mov.L	r5, 36[r0]
 3498                             	.LVL330:
 3499                             	.LBE1961:
 3500                             	.LBE1973:
 3501                             	.LBB1974:
 3502                             	.LBB1966:
 176:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\move.h ****       __b = _GLIBCXX_MOVE(__tmp);
 3503                             		.loc 13 176 0
 3504 093e E3 CE                   		mov.L	r14, [r12]
 3505                             	.LVL331:
 3506                             		.loc 13 177 0
 3507 0940 E3 04                   		mov.L	r4, [r0]
 3508                             	.LVL332:
 3509                             	.LBE1966:
 3510                             	.LBE1974:
 3511                             	.LBB1975:
 3512                             	.LBB1970:
 3513 0942 E7 0B 01                		mov.L	r11, 4[r0]
 3514                             	.LVL333:
 3515                             	.LBE1970:
 3516                             	.LBE1975:
 3517                             	.LBE1943:
 3518                             	.LBE1942:
 3519                             	.LBE1941:
 3520                             	.LBE1940:
 3521                             	.LBB1976:
 3522                             	.LBB1977:
 3523                             	.LBB1978:
 563:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	{
 3524                             		.loc 7 563 0
 3525 0945 61 04                   		cmp	#0, r4
 3526 0947 20 31                   		beq	.L223
 566:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	  _M_deallocate_map(this->_M_impl._M_map, this->_M_impl._M_map_size);
 3527                             		.loc 7 566 0
 3528 0949 E5 00 05 17             		mov.L	20[r0], 92[r0]
 3529 094d 62 45                   		add	#4, r5
 3530                             	.LVL334:
 3531 094f A6 05                   		mov.L	r5, 96[r0]
 3532                             	.LVL335:
 3533                             	.LBB1979:
 3534                             	.LBB1980:
 641:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	_M_deallocate_node(*__n);
 3535                             		.loc 7 641 0
 3536 0951 AD 8B                   		mov.L	92[r0], r3
 3537 0953 47 53                   		cmp	r5, r3
 3538 0955 23 05 38 64 0C          		bgeu	.L334
 3539                             	.LVL336:
 3540                             		.balign 8,3,1
 3541                             	.L226:
 3542                             	.LBB1981:
 3543                             	.LBB1982:
 3544                             	.LBB1983:
 110:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h **** 
 3545                             		.loc 8 110 0
 3546 095a AD 8C                   		mov.L	92[r0], r4
 3547 095c FD 2A 41                		mov.L	[r4+], r1
 3548 095f A5 8C                   		mov.L	r4, 92[r0]
 3549                             	.LVL337:
 3550 0961 05 00 00 00             		bsr	__ZdlPv
 3551                             	.LVL338:
 3552                             	.LBE1983:
 3553                             	.LBE1982:
 3554                             	.LBE1981:
 641:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	_M_deallocate_node(*__n);
 3555                             		.loc 7 641 0
 3556 0965 AE 07                   		mov.L	96[r0], r7
 3557 0967 ED 0A 17                		mov.L	92[r0], r10
 3558 096a 47 A7                   		cmp	r10, r7
 3559 096c 24 EE                   		bgtu	.L226
 3560 096e EC 01                   		mov.L	[r0], r1
 3561                             	.LVL339:
 3562                             		.balign 8,3,3
 3563                             	.L224:
 3564                             	.LBE1980:
 3565                             	.LBE1979:
 3566                             	.LBB1985:
 3567                             	.LBB1986:
 3568                             	.LBB1987:
 110:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h **** 
 3569                             		.loc 8 110 0
 3570 0970 05 00 00 00             		bsr	__ZdlPv
 3571                             	.LVL340:
 3572 0974 76 10 01 00             		.balign 8,3,5
 3573                             	.L223:
 3574                             	.LBE1987:
 3575                             	.LBE1986:
 3576                             	.LBE1985:
 3577                             	.LBE1978:
 3578                             	.LBE1977:
 3579                             	.LBE1976:
 3580                             	.LBE1929:
 3581                             	.LBE1928:
 976:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         return instance;
 3582                             		.loc 6 976 0
 3583 0978 FB 12 00 00 00 00       		mov.L	#__ZGVZN9EventList11getInstanceEvE8instance, r1
 3584 097e 05 00 00 00             		bsr	___cxa_guard_release
 3585                             	.LVL341:
 3586 0982 FB 22 00 00 00 00       		mov.L	#__ZZN9EventList11getInstanceEvE8instance, r2
 3587 0988 FB 32 00 00 00 00       		mov.L	#___dso_handle, r3
 3588 098e FB 12 00 00 00 00       		mov.L	#__ZN9EventListD1Ev, r1
 3589 0994 05 00 00 00             		bsr	___cxa_atexit
 3590                             	.LVL342:
 3591                             	.LBE2012:
 3592                             	.LBE2044:
 3593                             	.LBB2045:
 3594                             	.LBB2017:
 123:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****         return instance;
 3595                             		.loc 3 123 0
 3596 0998 FB 42 00 00 00 00       		mov.L	#__ZGVZN6UMouse11getInstanceEvE8instance, r4
 3597 099e 58 4E                   		movu.B	[r4], r14
 3598 09a0 61 0E                   		cmp	#0, r14
 3599 09a2 3B 66 F9                		bne	.L234
 3600                             	.LVL343:
 3601 09a5 FC 13 00                		.balign 8,3,5
 3602                             	.L485:
 3603 09a8 FB 12 00 00 00 00       		mov.L	#__ZGVZN6UMouse11getInstanceEvE8instance, r1
 3604 09ae 05 00 00 00             		bsr	___cxa_guard_acquire
 3605                             	.LVL344:
 3606 09b2 61 01                   		cmp	#0, r1
 3607 09b4 3A 54 F9                		beq	.L234
 3608                             	.LVL345:
 3609                             	.LBE2017:
 3610                             	.LBB2018:
 3611                             	.LBB2019:
 3612 09b7 FB 12 00 00 00 00       		mov.L	#__ZGVZN6UMouse11getInstanceEvE8instance, r1
 3613 09bd 05 00 00 00             		bsr	___cxa_guard_release
 3614                             	.LVL346:
 3615 09c1 FB 12 00 00 00 00       		mov.L	#__ZN6UMouseD1Ev, r1
 3616 09c7 FB 22 00 00 00 00       		mov.L	#__ZZN6UMouse11getInstanceEvE8instance, r2
 3617 09cd FB 32 00 00 00 00       		mov.L	#___dso_handle, r3
 3618 09d3 05 00 00 00             		bsr	___cxa_atexit
 3619                             	.LVL347:
 3620                             	.LBE2019:
 3621                             	.LBE2018:
 3622                             	.LBE2045:
  92:../src/main.cpp ****         sendDatafromTransBuff();
 3623                             		.loc 10 92 0
 3624 09d7 FB 72 00 00 00 00       		mov.L	#__ZZ13timeInterruptE11countIntNum, r7
 3625 09dd EC 71                   		mov.L	[r7], r1
 3626 09df A8 7A                   		mov.L	4[r7], r2
 3627 09e1 66 73                   		mov.L	#7, r3
 3628 09e3 66 04                   		mov.L	#0, r4
 3629 09e5 05 00 00 00             		bsr	___umoddi3
 3630                             	.LVL348:
 3631 09e9 57 12                   		or	r1, r2
 3632 09eb 3B 35 F9                		bne	.L236
 3633                             	.LVL349:
 3634 09ee EF 00                   		.balign 8,3,4
 3635                             	.L486:
  93:../src/main.cpp ****     }
 3636                             		.loc 10 93 0
 3637 09f0 F9 06 0B FF             		mov.L	#-1, 44[r0]
 3638 09f4 05 00 00 00             		bsr	__Z21sendDatafromTransBuffv
 3639                             	.LVL350:
 3640 09f8 38 28 F9                		bra	.L236
 3641                             	.L481:
 3642                             	.LBB2046:
 3643                             	.LBB1672:
  26:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\fcled.h **** 		return instance;
 3644                             		.loc 5 26 0
 3645 09fb 05 00 00 00             		bsr	___cxa_guard_acquire
 3646                             	.LVL351:
 3647 09ff 61 01                   		cmp	#0, r1
 3648 0a01 3A C7 F8                		beq	.L183
 3649                             	.LVL352:
 3650                             	.LBB1663:
 3651                             	.LBB1664:
 3652                             	.LBB1665:
   8:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\fcled.h **** public:
 3653                             		.loc 5 8 0
 3654 0a04 FB 12 00 00 00 00       		mov.L	#__ZZN5FcLed11getInstanceEvE8instance, r1
 3655 0a0a F8 12 00 00 00 00       		mov.L	#__ZTV5LED_R+8, [r1]
 3656                             	.LVL353:
 3657                             	.LBE1665:
 3658                             	.LBE1664:
 3659                             	.LBB1666:
 3660                             	.LBB1667:
  13:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\fcled.h **** public:
 3661                             		.loc 5 13 0
 3662 0a10 F9 12 03 00 00 00 00    		mov.L	#__ZTV5LED_G+8, 12[r1]
 3663                             	.LVL354:
 3664                             	.LBE1667:
 3665                             	.LBE1666:
 3666                             	.LBB1668:
 3667                             	.LBB1669:
  18:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\fcled.h **** public:
 3668                             		.loc 5 18 0
 3669 0a17 F9 12 06 00 00 00 00    		mov.L	#__ZTV5LED_B+8, 24[r1]
 3670                             	.LVL355:
 3671                             	.LBE1669:
 3672                             	.LBE1668:
 3673                             	.LBB1670:
 3674                             	.LBB1671:
  39:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\fcled.h **** 		G.turn(g);
 3675                             		.loc 5 39 0
 3676 0a1e 3E 0B 01                		mov.L	#1, 44[r0]
 3677 0a21 CF B2                   		mov.B	r11, r2
 3678 0a23 05 00 00 00             		bsr	__ZN11AbstructLED4turnEh
 3679                             	.LVL356:
  40:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\fcled.h **** 		B.turn(b);
 3680                             		.loc 5 40 0
 3681 0a27 FB 12 00 00 00 00       		mov.L	#__ZZN5FcLed11getInstanceEvE8instance+12, r1
 3682                             	.LVL357:
 3683 0a2d 66 02                   		mov	#0, r2
 3684 0a2f 05 00 00 00             		bsr	__ZN11AbstructLED4turnEh
 3685                             	.LVL358:
  41:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\fcled.h **** 	}
 3686                             		.loc 5 41 0
 3687 0a33 FB 12 00 00 00 00       		mov.L	#__ZZN5FcLed11getInstanceEvE8instance+24, r1
 3688                             	.LVL359:
 3689 0a39 66 02                   		mov	#0, r2
 3690 0a3b 05 00 00 00             		bsr	__ZN11AbstructLED4turnEh
 3691                             	.LVL360:
 3692                             	.LBE1671:
 3693                             	.LBE1670:
 3694                             	.LBE1663:
 3695                             	.LBE1672:
 3696                             	.LBB1673:
 3697                             	.LBB1674:
  26:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\fcled.h **** 		return instance;
 3698                             		.loc 5 26 0
 3699 0a3f FB 12 00 00 00 00       		mov.L	#__ZGVZN5FcLed11getInstanceEvE8instance, r1
 3700 0a45 05 00 00 00             		bsr	___cxa_guard_release
 3701                             	.LVL361:
 3702 0a49 FB 12 00 00 00 00       		mov.L	#__ZN5FcLedD1Ev, r1
 3703 0a4f FB 22 00 00 00 00       		mov.L	#__ZZN5FcLed11getInstanceEvE8instance, r2
 3704 0a55 FB 32 00 00 00 00       		mov.L	#___dso_handle, r3
 3705 0a5b 05 00 00 00             		bsr	___cxa_atexit
 3706                             	.LVL362:
 3707 0a5f 38 69 F8                		bra	.L183
 3708                             	.LVL363:
 3709                             	.L480:
 3710                             	.LBE1674:
 3711                             	.LBE1673:
 3712                             	.LBE2046:
 3713                             	.LBB2047:
 3714                             	.LBB1660:
 3715                             		.loc 2 30 0
 3716 0a62 FB 12 00 00 00 00       		mov.L	#__ZGVZN6TactSw11getInstanceEvE8instance, r1
 3717 0a68 05 00 00 00             		bsr	___cxa_guard_acquire
 3718                             	.LVL364:
 3719 0a6c 61 01                   		cmp	#0, r1
 3720 0a6e 3A 4A F8                		beq	.L180
 3721                             	.LVL365:
 3722                             	.LBB1656:
 3723                             	.LBB1657:
  10:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\tactsw.h ****     TactSw(TactSw&){on_time_msec = 0;};
 3724                             		.loc 2 10 0
 3725 0a71 F9 02 18 00 00 00 00    		mov.L	#__ZZN6TactSw11getInstanceEvE8instance, 96[r0]
 3726                             	.LBE1657:
 3727                             	.LBE1656:
 3728                             		.loc 2 30 0
 3729 0a78 FB 12 00 00 00 00       		mov.L	#__ZGVZN6TactSw11getInstanceEvE8instance, r1
 3730                             	.LBB1659:
 3731                             	.LBB1658:
  10:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\tactsw.h ****     TactSw(TactSw&){on_time_msec = 0;};
 3732                             		.loc 2 10 0
 3733 0a7e ED 0A 18                		mov.L	96[r0], r10
 3734 0a81 D3 A7                   		mov.W	r7, [r10]
 3735                             	.LBE1658:
 3736                             	.LBE1659:
 3737                             		.loc 2 30 0
 3738 0a83 05 00 00 00             		bsr	___cxa_guard_release
 3739                             	.LVL366:
 3740 0a87 FB 12 00 00 00 00       		mov.L	#__ZN6TactSwD1Ev, r1
 3741 0a8d AE 02                   		mov.L	96[r0], r2
 3742 0a8f FB 32 00 00 00 00       		mov.L	#___dso_handle, r3
 3743 0a95 05 00 00 00             		bsr	___cxa_atexit
 3744                             	.LVL367:
 3745 0a99 38 1F F8                		bra	.L180
 3746                             	.LVL368:
 3747                             	.L479:
 3748                             	.LBE1660:
 3749                             	.LBE2047:
 3750                             	.LBB2048:
 3751                             	.LBB1651:
  26:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\imu.hpp **** 		return instance;
 3752                             		.loc 1 26 0
 3753 0a9c EF 41                   		mov.L	r4, r1
 3754 0a9e 05 00 00 00             		bsr	___cxa_guard_acquire
 3755                             	.LVL369:
 3756 0aa2 61 01                   		cmp	#0, r1
 3757 0aa4 3A 04 F8                		beq	.L177
 3758                             	.LVL370:
 3759                             	.LBE1651:
 3760                             	.LBB1652:
 3761                             	.LBB1653:
 3762 0aa7 FB 12 00 00 00 00       		mov.L	#__ZGVZN9Icm20608G11getInstanceEvE8instance, r1
 3763 0aad 05 00 00 00             		bsr	___cxa_guard_release
 3764                             	.LVL371:
 3765 0ab1 FB 12 00 00 00 00       		mov.L	#__ZN9Icm20608GD1Ev, r1
 3766 0ab7 FB 22 00 00 00 00       		mov.L	#__ZZN9Icm20608G11getInstanceEvE8instance, r2
 3767 0abd FB 32 00 00 00 00       		mov.L	#___dso_handle, r3
 3768 0ac3 05 00 00 00             		bsr	___cxa_atexit
 3769                             	.LVL372:
 3770 0ac7 38 E1 F7                		bra	.L177
 3771                             	.LVL373:
 3772                             	.L478:
 3773                             	.LBE1653:
 3774                             	.LBE1652:
 3775                             	.LBE2048:
 3776                             	.LBB2049:
 3777                             	.LBB1646:
  70:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\imu.hpp **** 		return instance;
 3778                             		.loc 1 70 0
 3779 0aca EF 31                   		mov.L	r3, r1
 3780 0acc 05 00 00 00             		bsr	___cxa_guard_acquire
 3781                             	.LVL374:
 3782 0ad0 61 01                   		cmp	#0, r1
 3783 0ad2 3A C6 F7                		beq	.L174
 3784                             	.LVL375:
 3785                             	.LBE1646:
 3786                             	.LBB1647:
 3787                             	.LBB1648:
 3788 0ad5 FB 12 00 00 00 00       		mov.L	#__ZGVZN7MPU925011getInstanceEvE8instance, r1
 3789 0adb 05 00 00 00             		bsr	___cxa_guard_release
 3790                             	.LVL376:
 3791 0adf FB 12 00 00 00 00       		mov.L	#__ZN7MPU9250D1Ev, r1
 3792 0ae5 FB 22 00 00 00 00       		mov.L	#__ZZN7MPU925011getInstanceEvE8instance, r2
 3793 0aeb FB 32 00 00 00 00       		mov.L	#___dso_handle, r3
 3794 0af1 05 00 00 00             		bsr	___cxa_atexit
 3795                             	.LVL377:
 3796 0af5 38 A3 F7                		bra	.L174
 3797                             	.LVL378:
 3798                             	.L488:
 3799                             	.LBE1648:
 3800                             	.LBE1647:
 3801                             	.LBE2049:
 103:../src/main.cpp ****             imu1.update();
 3802                             		.loc 10 103 0
 3803 0af8 F9 06 0B FF             		mov.L	#-1, 44[r0]
 3804 0afc 05 00 00 00             		bsr	__Z14getElapsedMsecv
 3805                             	.LVL379:
 3806 0b00 76 01 88 13             		cmp	#0x1388, r1
 3807 0b04 25 05 38 91 06          		bgtu	.L239
 3808 0b09 FB B2 00 00 00 00       		mov.L	#__ZZ13timeInterruptE11countIntNum, r11
 3809 0b0f E4 B0 18                		mov.L	[r11], 96[r0]
 3810 0b12 ED B2 01                		mov.L	4[r11], r2
 3811 0b15 ED 0E 18                		mov.L	96[r0], r14
 3812 0b18 64 3E                   		and #3, r14
 108:../src/main.cpp **** 
 3813                             		.loc 10 108 0
 3814 0b1a 61 1E                   		cmp	#1, r14
 3815 0b1c 3B 3A F8                		bne	.L499
 3816 0b1f 03                      		.balign 8,3,4
 3817                             	.L468:
 3818                             	.LBB2050:
 3819                             	.LBB2051:
  25:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\tactsw.h **** 		else on_time_msec = 0;
 3820                             		.loc 2 25 0
 3821 0b20 FB EE 0E C0 08          		mov.L	#0x8c00e, r14
 3822 0b25 CD EE 40                		mov.B	64[r14], r14
 3823 0b28 7C 3E                   		btst	#3, r14
 3824 0b2a 3A 37 04                		beq	.L500
  26:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\tactsw.h **** 	}
 3825                             		.loc 2 26 0
 3826 0b2d 66 0E                   		mov	#0, r14
 3827 0b2f F9 02 18 00 00 00 00    		mov.L	#__ZZN6TactSw11getInstanceEvE8instance, 96[r0]
 3828 0b36 AE 04                   		mov.L	96[r0], r4
 3829                             		.balign 8,3,1
 3830                             	.L241:
 3831 0b38 D3 4E                   		mov.W	r14, [r4]
 3832                             	.LVL380:
 3833                             	.LBE2051:
 3834                             	.LBE2050:
 3835                             	.LBB2053:
 3836                             	.LBB2054:
  34:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\fcled.h **** 		G.update();
 3837                             		.loc 5 34 0
 3838 0b3a FB 12 00 00 00 00       		mov.L	#__ZZN5FcLed11getInstanceEvE8instance, r1
 3839 0b40 F9 06 0B FF             		mov.L	#-1, 44[r0]
 3840 0b44 05 00 00 00             		bsr	__ZN11AbstructLED6updateEv
 3841                             	.LVL381:
  35:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\fcled.h **** 		B.update();
 3842                             		.loc 5 35 0
 3843 0b48 FB 12 00 00 00 00       		mov.L	#__ZZN5FcLed11getInstanceEvE8instance+12, r1
 3844 0b4e 05 00 00 00             		bsr	__ZN11AbstructLED6updateEv
 3845                             	.LVL382:
  36:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\fcled.h **** 	}
 3846                             		.loc 5 36 0
 3847 0b52 FB 12 00 00 00 00       		mov.L	#__ZZN5FcLed11getInstanceEvE8instance+24, r1
 3848                             	.LBE2054:
 3849                             	.LBE2053:
 3850                             	.LBB2056:
 3851                             	.LBB2057:
  55:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****        else A = 0;
 3852                             		.loc 4 55 0
 3853 0b58 F9 02 17 00 00 00 00    		mov.L	#__ZZN7Gamepad11getInstanceEvE8instance, 92[r0]
 3854                             	.LBE2057:
 3855                             	.LBE2056:
 3856                             	.LBB2064:
 3857                             	.LBB2055:
  36:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\fcled.h **** 	}
 3858                             		.loc 5 36 0
 3859 0b5f 05 00 00 00             		bsr	__ZN11AbstructLED6updateEv
 3860                             	.LVL383:
 3861                             	.LBE2055:
 3862                             	.LBE2064:
 3863                             	.LBB2065:
 3864                             	.LBB2060:
  55:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****        else A = 0;
 3865                             		.loc 4 55 0
 3866 0b63 AD 8F                   		mov.L	92[r0], r7
 3867 0b65 CD 7E 2E                		mov.B	46[r7], r14
 3868 0b68 64 1E                   		and	#1, r14
 3869 0b6a 3A A2 05                		beq	.L242
 3870 0b6d ED 7E 02                		mov.L	8[r7], r14
 3871 0b70 62 1E                   		add	#1, r14
 3872 0b72 E7 7E 02                		mov.L	r14, 8[r7]
 3873 0b75 ED 0B 17                		mov.L	92[r0], r11
 3874                             		.balign 8,3,5
 3875                             	.L243:
  57:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****        else B = 0;
 3876                             		.loc 4 57 0
 3877 0b78 CD B4 2E                		mov.B	46[r11], r4
 3878 0b7b FB E2 00 00 00 00       		mov.L	#__ZZN7Gamepad11getInstanceEvE8instance, r14
 3879 0b81 7C 14                   		btst	#1, r4
 3880 0b83 3B 40 06                		bne	.L501
  58:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****        if(((command[6] & 0x04) >> 2) == 1) X++;
 3881                             		.loc 4 58 0
 3882 0b86 F9 E6 03 00             		mov.L	#0, 12[r14]
 3883                             		.balign 8,3,1
 3884                             	.L245:
  59:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****        else X= 0;
 3885                             		.loc 4 59 0
 3886 0b8a ED 0C 17                		mov.L	92[r0], r12
 3887 0b8d CD C4 2E                		mov.B	46[r12], r4
 3888 0b90 FB E2 00 00 00 00       		mov.L	#__ZZN7Gamepad11getInstanceEvE8instance, r14
 3889 0b96 7C 24                   		btst	#2, r4
 3890 0b98 3B 41 06                		bne	.L502
  60:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****        if(((command[6] & 0x08) >> 3) == 1) Y++;
 3891                             		.loc 4 60 0
 3892 0b9b F9 E6 05 00             		mov.L	#0, 20[r14]
 3893 0b9f 03                      		.balign 8,3,1
 3894                             	.L247:
  61:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****        else Y = 0;
 3895                             		.loc 4 61 0
 3896 0ba0 AD 8B                   		mov.L	92[r0], r3
 3897 0ba2 CD 34 2E                		mov.B	46[r3], r4
 3898 0ba5 FB E2 00 00 00 00       		mov.L	#__ZZN7Gamepad11getInstanceEvE8instance, r14
 3899 0bab 7C 34                   		btst	#3, r4
 3900 0bad 3B 21 06                		bne	.L503
  62:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****        if(((command[6] & 0x10) >> 4) == 1) RB++;
 3901                             		.loc 4 62 0
 3902 0bb0 F9 E6 04 00             		mov.L	#0, 16[r14]
 3903                             		.balign 8,3,1
 3904                             	.L249:
  63:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****        else RB = 0;
 3905                             		.loc 4 63 0
 3906 0bb4 AD 8F                   		mov.L	92[r0], r7
 3907 0bb6 CD 74 2E                		mov.B	46[r7], r4
 3908 0bb9 FB E2 00 00 00 00       		mov.L	#__ZZN7Gamepad11getInstanceEvE8instance, r14
 3909 0bbf 7C 44                   		btst	#4, r4
 3910 0bc1 3B 44 06                		bne	.L504
  64:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****        if(((command[6] & 0x20) >> 5) == 1) LB++;
 3911                             		.loc 4 64 0
 3912 0bc4 F9 E6 06 00             		mov.L	#0, 24[r14]
 3913                             		.balign 8,3,1
 3914                             	.L251:
  65:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****        else LB = 0;
 3915                             		.loc 4 65 0
 3916 0bc8 ED 0A 17                		mov.L	92[r0], r10
 3917 0bcb CD A4 2E                		mov.B	46[r10], r4
 3918 0bce FB E2 00 00 00 00       		mov.L	#__ZZN7Gamepad11getInstanceEvE8instance, r14
 3919 0bd4 7C 54                   		btst	#5, r4
 3920 0bd6 3B 24 06                		bne	.L505
  66:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****        if(((command[6] & 0x40) >> 6) == 1) BACK++;
 3921                             		.loc 4 66 0
 3922 0bd9 F9 E6 07 00             		mov.L	#0, 28[r14]
 3923                             		.balign 8,3,1
 3924                             	.L253:
  67:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****        else BACK = 0;
 3925                             		.loc 4 67 0
 3926 0bdd ED 0B 17                		mov.L	92[r0], r11
 3927 0be0 CD B4 2E                		mov.B	46[r11], r4
 3928 0be3 FB E2 00 00 00 00       		mov.L	#__ZZN7Gamepad11getInstanceEvE8instance, r14
 3929 0be9 7C 64                   		btst	#6, r4
 3930 0beb 3B 04 06                		bne	.L506
  68:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****        if(((command[6] & 0x80) >> 7) == 1) START++;
 3931                             		.loc 4 68 0
 3932 0bee F9 E6 08 00             		mov.L	#0, 32[r14]
 3933                             		.balign 8,3,1
 3934                             	.L255:
  69:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****        else START = 0;
 3935                             		.loc 4 69 0
 3936 0bf2 ED 0C 17                		mov.L	92[r0], r12
 3937 0bf5 CD C4 2E                		mov.B	46[r12], r4
 3938 0bf8 FB E2 00 00 00 00       		mov.L	#__ZZN7Gamepad11getInstanceEvE8instance, r14
 3939 0bfe 7C 74                   		btst	#7, r4
 3940 0c00 3B E4 05                		bne	.L507
  70:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****        RT = command[7];
 3941                             		.loc 4 70 0
 3942 0c03 F9 E6 09 00             		mov.L	#0, 36[r14]
 3943 0c07 03                      		.balign 8,3,1
 3944                             	.L257:
  71:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****        LT = command[8];
 3945                             		.loc 4 71 0
 3946 0c08 AD 8B                   		mov.L	92[r0], r3
 3947 0c0a CD 3E 2F                		mov.B	47[r3], r14
 3948 0c0d C7 3E 06                		mov.B	r14, 6[r3]
  72:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****        cross_x = command[9]  - 128;
 3949                             		.loc 4 72 0
 3950 0c10 CD 3E 30                		mov.B	48[r3], r14
 3951 0c13 C7 3E 07                		mov.B	r14, 7[r3]
  73:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****        cross_y = command[10] - 128;
 3952                             		.loc 4 73 0
 3953 0c16 CD 3E 31                		mov.B	49[r3], r14
 3954 0c19 71 EE 80                		add	#0xffffff80, r14
 3955 0c1c C3 3E                   		mov.B	r14, [r3]
  74:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****        R3D_x = command[11] - 128;
 3956                             		.loc 4 74 0
 3957 0c1e CD 3E 32                		mov.B	50[r3], r14
 3958 0c21 71 EE 80                		add	#0xffffff80, r14
 3959 0c24 C7 3E 01                		mov.B	r14, 1[r3]
  75:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****        R3D_y = command[12] - 128;
 3960                             		.loc 4 75 0
 3961 0c27 CD 3E 33                		mov.B	51[r3], r14
 3962 0c2a 71 EE 80                		add	#0xffffff80, r14
 3963 0c2d C7 3E 04                		mov.B	r14, 4[r3]
  76:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****        L3D_x = command[13] - 128;
 3964                             		.loc 4 76 0
 3965 0c30 CD 3E 34                		mov.B	52[r3], r14
 3966 0c33 71 EE 80                		add	#0xffffff80, r14
 3967 0c36 C7 3E 05                		mov.B	r14, 5[r3]
  77:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****        L3D_y = command[14] - 128;
 3968                             		.loc 4 77 0
 3969 0c39 CD 3E 35                		mov.B	53[r3], r14
 3970 0c3c 71 EE 80                		add	#0xffffff80, r14
 3971 0c3f C7 3E 02                		mov.B	r14, 2[r3]
  78:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h **** 
 3972                             		.loc 4 78 0
 3973 0c42 CD 3E 36                		mov.B	54[r3], r14
 3974 0c45 71 EE 80                		add	#0xffffff80, r14
 3975 0c48 C7 3E 03                		mov.B	r14, 3[r3]
 3976                             	.LVL384:
 3977                             	.LBB2058:
 3978                             	.LBB2059:
  34:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****             return true;
 3979                             		.loc 4 34 0
 3980 0c4b F9 06 0B FF             		mov.L	#-1, 44[r0]
 3981 0c4f 05 00 00 00             		bsr	__Z14getElapsedMsecv
 3982                             	.LVL385:
 3983 0c53 AD 8C                   		mov.L	92[r0], r4
 3984 0c55 ED 4E 0F                		mov.L	60[r4], r14
 3985 0c58 AC 44                   		mov.L	64[r4], r4
 3986 0c5a 66 03                   		mov.L	#0, r3
 3987 0c5c 43 E1                   		sub	r14, r1
 3988 0c5e FC 03 43                		sbb	r4, r3
 3989 0c61 3B 12 03                		bne	.L258
 3990 0c64 75 51 C7                		cmp	#0xc7, r1
 3991 0c67 25 05 38 0A 03          		bgtu	.L258
 3992                             	.L330:
 3993                             	.LVL386:
 3994                             	.LBE2059:
 3995                             	.LBE2058:
 3996                             	.LBE2060:
 3997                             	.LBE2065:
 3998                             	.LBE2316:
1229:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
 3999                             		.loc 7 1229 0
 4000 0c6c F9 02 18 00 00 00 00    		mov.L	#__ZZN9EventList11getInstanceEvE8instance, 96[r0]
 4001 0c73 AE 07                   		mov.L	96[r0], r7
 4002 0c75 ED 7E 02                		mov.L	8[r7], r14
 4003                             	.LVL387:
 4004                             	.LBB2317:
 4005                             	.LBB2066:
 4006                             	.LBB2067:
 980:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****             UMouse &mouse = UMouse::getInstance();
 4007                             		.loc 6 980 0
 4008 0c78 A9 F4                   		mov.L	24[r7], r4
 4009 0c7a 47 E4                   		cmp	r14, r4
 4010 0c7c 3A B4 06                		beq	.L260
 4011                             	.LBB2068:
 4012                             	.LBB2069:
 4013                             	.LBB2070:
 123:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****         return instance;
 4014                             		.loc 3 123 0
 4015 0c7f FB A2 00 00 00 00       		mov.L	#__ZGVZN6UMouse11getInstanceEvE8instance, r10
 4016 0c85 58 A4                   		movu.B	[r10], r4
 4017 0c87 61 04                   		cmp	#0, r4
 4018 0c89 3A F2 04                		beq	.L508
 4019                             		.balign 8,3,1
 4020                             	.L261:
 4021                             	.LVL388:
 4022                             	.LBE2070:
 4023                             	.LBE2069:
 982:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****             if(eventList.front()->isEnd() == true){
 4024                             		.loc 6 982 0
 4025 0c8c EC E1                   		mov.L	[r14], r1
 4026 0c8e EC 1E                   		mov.L	[r1], r14
 4027 0c90 ED EE 01                		mov.L	4[r14], r14
 4028 0c93 F9 06 0B FF             		mov.L	#-1, 44[r0]
 4029 0c97 7F 1E                   		jsr	r14
 4030                             	.LVL389:
 4031 0c99 A6 81                   		mov.L	r1, 104[r0]
 4032 0c9b A6 8A                   		mov.L	r2, 108[r0]
 4033                             	.LVL390:
 983:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****                 delete eventList.front();
 4034                             		.loc 6 983 0
 4035 0c9d ED 0C 18                		mov.L	96[r0], r12
 4036 0ca0 ED CE 02                		mov.L	8[r12], r14
 4037 0ca3 EC E1                   		mov.L	[r14], r1
 4038 0ca5 EC 1E                   		mov.L	[r1], r14
 4039 0ca7 EC EE                   		mov.L	[r14], r14
 4040 0ca9 7F 1E                   		jsr	r14
 4041                             	.LVL391:
 4042 0cab 61 01                   		cmp	#0, r1
 4043 0cad 3B A7 04                		bne	.L509
 4044                             	.LVL392:
 4045                             		.balign 8,3,1
 4046                             	.L263:
 987:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 4047                             		.loc 6 987 0
 4048 0cb0 AE 81                   		mov.L	104[r0], r1
 4049                             	.LBB2074:
 4050                             	.LBB2075:
 4051                             	.LBB2076:
 196:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h **** 
 4052                             		.loc 3 196 0
 4053 0cb2 F9 02 19 00 00 00 00    		mov.L	#__ZZN6UMouse11getInstanceEvE8instance, 100[r0]
 4054 0cb9 ED 0C 19                		mov.L	100[r0], r12
 4055 0cbc E7 C1 1A                		mov.L	r1, 104[r12]
 4056                             	.LBE2076:
 4057                             	.LBE2075:
 4058                             	.LBE2074:
 987:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h **** 
 4059                             		.loc 6 987 0
 4060 0cbf E5 00 1B 18             		mov.L	108[r0], 96[r0]
 4061                             	.LVL393:
 4062                             	.LBB2091:
 4063                             	.LBB2080:
 4064                             	.LBB2077:
 198:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****             PORT2.PODR.BIT.B0 = 0;
 4065                             		.loc 3 198 0
 4066 0cc3 FD 72 11 00 00 00 00    		fcmp	#0x0, r1
 4067 0cca 3B 4A 04                		bne	.L265
 199:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****             PORT1.PODR.BIT.B7 = 0;
 4068                             		.loc 3 199 0
 4069 0ccd FB 4E 02 C0 08          		mov.L	#0x8c002, r4
 4070 0cd2 CD 47 20                		mov.B	32[r4], r7
 200:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****         }
 4071                             		.loc 3 200 0
 4072 0cd5 FB EE 01 C0 08          		mov.L	#0x8c001, r14
 199:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****             PORT1.PODR.BIT.B7 = 0;
 4073                             		.loc 3 199 0
 4074 0cda 7A 07                   		bclr #0, r7
 4075 0cdc C7 47 20                		mov.B	r7, 32[r4]
 4076                             	.LVL394:
 200:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****         }
 4077                             		.loc 3 200 0
 4078 0cdf CD E7 20                		mov.B	32[r14], r7
 4079 0ce2 75 27 7F                		and #0x7f, r7
 4080 0ce5 C7 E7 20                		mov.B	r7, 32[r14]
 4081                             		.balign 8,3,6
 4082                             	.L266:
 210:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****     };
 4083                             		.loc 3 210 0
 4084 0ce8 FD 72 11 00 00 00 00    		fcmp	#0x0, r1
 4085 0cef 26 0A                   		bpz	.L269
 4086 0cf1 AE 81                   		mov.L	104[r0], r1
 4087 0cf3 70 11 00 00 00 80       		add	#0x80000000, r1
 4088                             		.balign 8,3,4
 4089                             	.L269:
 4090 0cf9 F9 06 0B FF             		mov.L	#-1, 44[r0]
 4091 0cfd 05 00 00 00             		bsr	__Z11setDutyMTU4f
 4092                             	.LVL395:
 4093                             	.LBE2077:
 4094                             	.LBE2080:
 4095                             	.LBB2081:
 4096                             	.LBB2082:
 179:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h **** 
 4097                             		.loc 3 179 0
 4098 0d01 AE 0B                   		mov.L	100[r0], r3
 4099 0d03 E5 03 18 1B             		mov.L	96[r0], 108[r3]
 181:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****             PORT1.PODR.BIT.B3 = 0;
 4100                             		.loc 3 181 0
 4101 0d07 AE 04                   		mov.L	96[r0], r4
 4102 0d09 FD 72 14 00 00 00 00    		fcmp	#0x0, r4
 4103 0d10 3B 2C 04                		bne	.L271
 182:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****             PORT1.PODR.BIT.B2 = 0;
 4104                             		.loc 3 182 0
 4105 0d13 FB EE 01 C0 08          		mov.L	#0x8c001, r14
 4106 0d18 F1 EB 20                		bclr #3, 32[r14].B
 4107                             	.LVL396:
 183:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****         }
 4108                             		.loc 3 183 0
 4109 0d1b F1 EA 20                		bclr #2, 32[r14].B
 4110                             		.balign 8,3,1
 4111                             	.L272:
 193:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****     };
 4112                             		.loc 3 193 0
 4113 0d1e ED 0B 18                		mov.L	96[r0], r11
 4114 0d21 FD 72 1B 00 00 00 00    		fcmp	#0x0, r11
 4115 0d28 26 05 38 62 04          		bn	.L510
 4116 0d2d EF B1                   		mov.L	r11, r1
 4117 0d2f 03                      		.balign 8,3,4
 4118                             	.L275:
 4119 0d30 F9 06 0B FF             		mov.L	#-1, 44[r0]
 4120 0d34 05 00 00 00             		bsr	__Z11setDutyMTU3f
 4121                             	.LVL397:
 4122 0d38 FB C2 00 00 00 00       		mov.L	#__ZZ13timeInterruptE11countIntNum, r12
 4123 0d3e E4 C0 18                		mov.L	[r12], 96[r0]
 4124 0d41 ED C2 01                		mov.L	4[r12], r2
 4125 0d44 ED 0E 18                		mov.L	96[r0], r14
 4126 0d47 64 3E                   		and #3, r14
 4127                             	.LBE2082:
 4128                             	.LBE2081:
 4129                             	.LBE2091:
 4130                             	.LBE2068:
 4131                             	.LBE2067:
 4132                             	.LBE2066:
 115:../src/main.cpp ****         mouse.update();
 4133                             		.loc 10 115 0
 4134 0d49 61 2E                   		cmp	#2, r14
 4135 0d4b 3B 17 F6                		bne	.L283
 4136                             	.LVL398:
 4137 0d4e EF 00                   		.balign 8,3,5
 4138                             	.L489:
 4139                             	.LBB2133:
 4140                             	.LBB2134:
 135:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****         L_ENC_pre = L_ENC_now;
 4141                             		.loc 3 135 0
 4142 0d50 FB 32 00 00 00 00       		mov.L	#__ZZN6UMouse6updateEvE9R_ENC_now, r3
 136:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****         R_ENC_now = MTU1.TCNT;
 4143                             		.loc 3 136 0
 4144 0d56 FB 22 00 00 00 00       		mov.L	#__ZZN6UMouse6updateEvE9L_ENC_now, r2
 135:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****         L_ENC_pre = L_ENC_now;
 4145                             		.loc 3 135 0
 4146 0d5c 5C 34                   		movu.W	[r3], r4
 136:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****         R_ENC_now = MTU1.TCNT;
 4147                             		.loc 3 136 0
 4148 0d5e 5C 2E                   		movu.W	[r2], r14
 135:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****         L_ENC_pre = L_ENC_now;
 4149                             		.loc 3 135 0
 4150 0d60 FB 72 00 00 00 00       		mov.L	#__ZZN6UMouse6updateEvE9R_ENC_pre, r7
 4151 0d66 D3 74                   		mov.W	r4, [r7]
 136:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****         R_ENC_now = MTU1.TCNT;
 4152                             		.loc 3 136 0
 4153 0d68 FB 72 00 00 00 00       		mov.L	#__ZZN6UMouse6updateEvE9L_ENC_pre, r7
 4154 0d6e D3 7E                   		mov.W	r14, [r7]
 137:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****         L_ENC_now = MTU2.TCNT;
 4155                             		.loc 3 137 0
 4156 0d70 FB 7E 90 12 0C          		mov.L	#0xc1290, r7
 4157 0d75 DD 77 7B                		mov.W	246[r7], r7
 4158 0d78 D3 37                   		mov.W	r7, [r3]
 138:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h **** 
 4159                             		.loc 3 138 0
 4160 0d7a FB 7E 92 12 0C          		mov.L	#0xc1292, r7
 4161 0d7f DD 71 BA                		mov.W	372[r7], r1
 140:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****         int32_t count_diff_L = (int32_t)(L_ENC_now - L_ENC_pre);
 4162                             		.loc 3 140 0
 4163 0d82 5C 3A                   		movu.W	[r3], r10
 141:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****         //オーバーフロー対策
 4164                             		.loc 3 141 0
 4165 0d84 5F 17                   		movu.W	r1, r7
 138:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h **** 
 4166                             		.loc 3 138 0
 4167 0d86 D3 21                   		mov.W	r1, [r2]
 140:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****         int32_t count_diff_L = (int32_t)(L_ENC_now - L_ENC_pre);
 4168                             		.loc 3 140 0
 4169 0d88 FF 04 4A                		sub	r4, r10, r4
 4170                             	.LVL399:
 141:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****         //オーバーフロー対策
 4171                             		.loc 3 141 0
 4172 0d8b FF 0E E7                		sub	r14, r7, r14
 4173                             	.LVL400:
 143:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****         if( count_diff_R < -32768 ) count_diff_R += 65536;
 4174                             		.loc 3 143 0
 4175 0d8e 77 04 00 80 00          		cmp	#0x8000, r4
 4176 0d93 2A 05 38 8B 04          		ble	.L284
 4177 0d98 73 44 00 00 FF          		add	#0xffff0000, r4
 4178                             	.LVL401:
 4179 0d9d FC 13 00                		.balign 8,3,4
 4180                             	.L285:
 145:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****         if( count_diff_L < -32768 ) count_diff_L += 65536;
 4181                             		.loc 3 145 0
 4182 0da0 77 0E 00 80 00          		cmp	#0x8000, r14
 4183 0da5 2A 05 38 69 04          		ble	.L286
 4184 0daa 73 EE 00 00 FF          		add	#0xffff0000, r14
 4185                             	.LVL402:
 4186 0daf 03                      		.balign 8,3,2
 4187                             	.L287:
 149:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****         v_enc_L = (PI* DIA_TIRE / GEAR_RATIO * (float)(count_diff_L)/512.0)/ DELTA_T;
 4188                             		.loc 3 149 0
 4189 0db0 FC 47 44                		itof	r4, r4
 4190                             	.LVL403:
 4191 0db3 FD 72 34 87 11 AE 3C    		fmul	#0x3cae1187, r4
 150:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****         //v_enc = (v_enc_R + v_enc_L) * 0.5;
 4192                             		.loc 3 150 0
 4193 0dba FC 47 EE                		itof	r14, r14
 4194                             	.LVL404:
 149:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****         v_enc_L = (PI* DIA_TIRE / GEAR_RATIO * (float)(count_diff_L)/512.0)/ DELTA_T;
 4195                             		.loc 3 149 0
 4196 0dbd FD 72 34 00 00 00 3B    		fmul	#0x3b000000, r4
 150:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****         //v_enc = (v_enc_R + v_enc_L) * 0.5;
 4197                             		.loc 3 150 0
 4198 0dc4 FD 72 3E 87 11 AE 3C    		fmul	#0x3cae1187, r14
 149:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****         v_enc_L = (PI* DIA_TIRE / GEAR_RATIO * (float)(count_diff_L)/512.0)/ DELTA_T;
 4199                             		.loc 3 149 0
 4200 0dcb F9 02 19 00 00 00 00    		mov.L	#__ZZN6UMouse11getInstanceEvE8instance, 100[r0]
 4201 0dd2 FD 72 44 6F 12 83 3A    		fdiv	#0x3a83126f, r4
 150:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****         //v_enc = (v_enc_R + v_enc_L) * 0.5;
 4202                             		.loc 3 150 0
 4203 0dd9 FD 72 3E 00 00 00 3B    		fmul	#0x3b000000, r14
 149:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****         v_enc_L = (PI* DIA_TIRE / GEAR_RATIO * (float)(count_diff_L)/512.0)/ DELTA_T;
 4204                             		.loc 3 149 0
 4205 0de0 AE 0B                   		mov.L	100[r0], r3
 4206 0de2 EB 34 5F 02             		mov.L	r4, 2428[r3]
 150:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****         //v_enc = (v_enc_R + v_enc_L) * 0.5;
 4207                             		.loc 3 150 0
 4208 0de6 FD 72 4E 6F 12 83 3A    		fdiv	#0x3a83126f, r14
 4209                             	.LBB2135:
 4210                             	.LBB2136:
  70:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\imu.hpp **** 		return instance;
 4211                             		.loc 1 70 0
 4212 0ded FB 42 00 00 00 00       		mov.L	#__ZGVZN7MPU925011getInstanceEvE8instance, r4
 4213 0df3 58 47                   		movu.B	[r4], r7
 4214                             	.LBE2136:
 4215                             	.LBE2135:
 150:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****         //v_enc = (v_enc_R + v_enc_L) * 0.5;
 4216                             		.loc 3 150 0
 4217 0df5 EB 3E 60 02             		mov.L	r14, 2432[r3]
 4218                             	.LBB2141:
 4219                             	.LBB2137:
  70:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\imu.hpp **** 		return instance;
 4220                             		.loc 1 70 0
 4221 0df9 61 07                   		cmp	#0, r7
 4222 0dfb 3A B1 04                		beq	.L511
 4223 0dfe EF 00                   		.balign 8,3,5
 4224                             	.L289:
 4225                             	.LBE2137:
 4226                             	.LBE2141:
 153:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****         v_enc = sqrtf( constrainL(
 4227                             		.loc 3 153 0
 4228 0e00 FB 72 00 00 00 00       		mov.L	#__ZZN7MPU925011getInstanceEvE8instance, r7
 4229 0e06 ED 7E 10                		mov.L	64[r7], r14
 155:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****                                    + v_enc_L * v_enc_L
 4230                             		.loc 3 155 0
 4231 0e09 ED 0A 19                		mov.L	100[r0], r10
 4232 0e0c EE AC 5F 02             		mov.L	2428[r10], r12
 153:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****         v_enc = sqrtf( constrainL(
 4233                             		.loc 3 153 0
 4234 0e10 FD 72 3E DB 0F 49 40    		fmul	#0x40490fdb, r14
 4235 0e17 FD 72 4E 00 00 34 43    		fdiv	#0x43340000, r14
 4236                             	.LVL405:
 155:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****                                    + v_enc_L * v_enc_L
 4237                             		.loc 3 155 0
 4238 0e1e EE AA 5F 02             		mov.L	2428[r10], r10
 157:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****                                    ,0.0)
 4239                             		.loc 3 157 0
 4240 0e22 FB D2 00 00 00 3F       		mov.L	#0x3f000000, r13
 4241 0e28 FC 8F ED                		fmul	r14, r13
 156:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****                                    - 0.5 * omega * omega * TREAD * TREAD)
 4242                             		.loc 3 156 0
 4243 0e2b ED 0B 19                		mov.L	100[r0], r11
 4244 0e2e EE B7 60 02             		mov.L	2432[r11], r7
 4245 0e32 EE BB 60 02             		mov.L	2432[r11], r11
 157:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****                                    ,0.0)
 4246                             		.loc 3 157 0
 4247 0e36 FC 8F DE                		fmul	r13, r14
 4248                             	.LVL406:
 155:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****                                    + v_enc_L * v_enc_L
 4249                             		.loc 3 155 0
 4250 0e39 FC 8F CA                		fmul	r12, r10
 156:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****                                    - 0.5 * omega * omega * TREAD * TREAD)
 4251                             		.loc 3 156 0
 4252 0e3c FC 8F B7                		fmul	r11, r7
 157:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****                                    ,0.0)
 4253                             		.loc 3 157 0
 4254 0e3f FD 72 3E 96 43 8B 3D    		fmul	#0x3d8b4396, r14
 156:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****                                    - 0.5 * omega * omega * TREAD * TREAD)
 4255                             		.loc 3 156 0
 4256 0e46 FC 8B A7                		fadd	r10, r7
 157:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****                                    ,0.0)
 4257                             		.loc 3 157 0
 4258 0e49 FD 72 3E 96 43 8B 3D    		fmul	#0x3d8b4396, r14
 4259 0e50 FF 81 E7                		fsub	r14, r7, r1
 159:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****         //角速度をセット
 4260                             		.loc 3 159 0
 4261 0e53 66 02                   		mov.L	#0x0, r2
 4262 0e55 F9 06 0B FF             		mov.L	#-1, 44[r0]
 4263 0e59 FD 72 31 00 00 00 3F    		fmul	#0x3f000000, r1
 4264 0e60 05 00 00 00             		bsr	__Z10constrainLff
 4265                             	.LVL407:
 4266 0e64 05 00 00 00             		bsr	_sqrtf
 4267                             	.LVL408:
 4268                             	.LBB2142:
 4269                             	.LBB2143:
  70:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\imu.hpp **** 		return instance;
 4270                             		.loc 1 70 0
 4271 0e68 FB C2 00 00 00 00       		mov.L	#__ZGVZN7MPU925011getInstanceEvE8instance, r12
 4272 0e6e 58 C3                   		movu.B	[r12], r3
 4273                             	.LBE2143:
 4274                             	.LBE2142:
 159:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****         //角速度をセット
 4275                             		.loc 3 159 0
 4276 0e70 AE 0C                   		mov.L	100[r0], r4
 4277 0e72 EB 41 61 02             		mov.L	r1, 2436[r4]
 4278                             	.LBB2148:
 4279                             	.LBB2144:
  70:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\imu.hpp **** 		return instance;
 4280                             		.loc 1 70 0
 4281 0e76 61 03                   		cmp	#0, r3
 4282 0e78 3A 25 04                		beq	.L512
 4283 0e7b 77 10 01 00 00          		.balign 8,3,5
 4284                             	.L291:
 4285                             	.LBE2144:
 4286                             	.LBE2148:
 161:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****         //電圧の算出
 4287                             		.loc 3 161 0
 4288 0e80 FB B2 00 00 00 00       		mov.L	#__ZZN7MPU925011getInstanceEvE8instance, r11
 4289 0e86 ED B7 10                		mov.L	64[r11], r7
 4290 0e89 ED 0C 19                		mov.L	100[r0], r12
 4291 0e8c E7 C7 08                		mov.L	r7, 32[r12]
 163:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****         //加速度センサから遠心力を除去
 4292                             		.loc 3 163 0
 4293 0e8f FB 7E 00 90 08          		mov.L	#0x89000, r7
 4294 0e94 5D 7E 10                		movu.W	32[r7], r14
 4295 0e97 FC 47 EE                		itof	r14, r14
 4296 0e9a FD 72 3E 7E 7D 3D 40    		fmul	#0x403d7d7e, r14
 4297 0ea1 FD 72 3E 33 33 53 40    		fmul	#0x40533333, r14
 4298 0ea8 FD 72 3E 00 00 80 39    		fmul	#0x39800000, r14
 4299 0eaf EB CE 65 02             		mov.L	r14, 2452[r12]
 4300                             	.LVL409:
 167:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****         a_v = MPU9250::getInstance().acc_f[1] + c_force * cosf(theta);
 4301                             		.loc 3 167 0
 4302 0eb3 ED CE 08                		mov.L	32[r12], r14
 4303 0eb6 ED C4 08                		mov.L	32[r12], r4
 4304 0eb9 FD 72 3E DB 0F 49 40    		fmul	#0x40490fdb, r14
 4305 0ec0 FD 72 4E 00 00 34 43    		fdiv	#0x43340000, r14
 4306 0ec7 FD 72 34 DB 0F 49 40    		fmul	#0x40490fdb, r4
 4307 0ece FD 72 3E DF 4E 67 3D    		fmul	#0x3d674edf, r14
 4308 0ed5 FD 72 44 00 00 34 43    		fdiv	#0x43340000, r4
 4309 0edc FF B4 E4                		fmul	r14, r4, r4
 4310 0edf A6 04                   		mov.L	r4, 96[r0]
 4311                             	.LVL410:
 4312                             	.LBB2149:
 4313                             	.LBB2150:
  70:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\imu.hpp **** 		return instance;
 4314                             		.loc 1 70 0
 4315 0ee1 61 03                   		cmp	#0, r3
 4316 0ee3 3A 4D 03                		beq	.L513
 4317 0ee6 EF 47                   		mov.L	r4, r7
 4318                             	.LBE2150:
 4319                             	.LBE2149:
 168:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****         a_h = MPU9250::getInstance().acc_f[0] + c_force * sinf(theta);
 4320                             		.loc 3 168 0
 4321 0ee8 FB C2 00 00 00 00       		mov.L	#__ZZN7MPU925011getInstanceEvE8instance, r12
 4322 0eee ED CA 12                		mov.L	72[r12], r10
 4323 0ef1 FD 72 37 5D BA 7C 3F    		fmul	#0x3f7cba5d, r7
 4324 0ef8 FC 8B 7A                		fadd	r7, r10
 4325 0efb FB 72 00 00 00 00       		mov.L	#__ZZN6UMouse11getInstanceEvE8instance, r7
 4326 0f01 E7 7A 18                		mov.L	r10, 96[r7]
 4327                             	.LVL411:
 4328 0f04 76 10 01 00             		.balign 8,3,5
 4329                             	.L297:
 169:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h **** 
 4330                             		.loc 3 169 0
 4331 0f08 FB C2 00 00 00 00       		mov.L	#__ZZN7MPU925011getInstanceEvE8instance, r12
 4332 0f0e ED CA 11                		mov.L	68[r12], r10
 4333 0f11 AE 07                   		mov.L	96[r0], r7
 4334 0f13 FD 72 37 50 32 23 3E    		fmul	#0x3e233250, r7
 4335 0f1a FC 8B A7                		fadd	r10, r7
 4336 0f1d FB 32 00 00 00 00       		mov.L	#__ZZ13timeInterruptE11countIntNum, r3
 4337 0f23 E4 30 18                		mov.L	[r3], 96[r0]
 4338                             	.LVL412:
 4339 0f26 A8 3A                   		mov.L	4[r3], r2
 4340 0f28 AE 0C                   		mov.L	100[r0], r4
 4341 0f2a A6 4F                   		mov.L	r7, 100[r4]
 4342 0f2c 38 36 F4                		bra	.L283
 4343                             	.LVL413:
 4344                             	.L487:
 4345                             	.LBE2134:
 4346                             	.LBE2133:
  99:../src/main.cpp ****     }
 4347                             		.loc 10 99 0
 4348 0f2f 05 00 00 00             		bsr	__Z15sendPeriodicMsgv
 4349                             	.LVL414:
 4350 0f33 E4 A0 18                		mov.L	[r10], 96[r0]
 4351 0f36 ED A2 01                		mov.L	4[r10], r2
 4352 0f39 38 10 F4                		bra	.L237
 4353                             	.LVL415:
 4354                             	.L490:
 122:../src/main.cpp ****     }
 4355                             		.loc 10 122 0 discriminator 1
 4356 0f3c F9 06 0B FF             		mov.L	#-1, 44[r0]
 4357 0f40 05 00 00 00             		bsr	__Z6famimav
 4358                             	.LVL416:
 4359 0f44 FB 72 00 00 00 00       		mov.L	#__ZZ13timeInterruptE11countIntNum, r7
 4360 0f4a E4 70 18                		mov.L	[r7], 96[r0]
 126:../src/main.cpp ****        gamepad.LB >0 &&
 4361                             		.loc 10 126 0 discriminator 1
 4362 0f4d ED 0A 17                		mov.L	92[r0], r10
 4363 0f50 ED AE 08                		mov.L	32[r10], r14
 4364 0f53 FB 42 00 00 00 00       		mov.L	#__ZZN7Gamepad11getInstanceEvE8instance, r4
 127:../src/main.cpp ****        gamepad.LT >0 ){
 4365                             		.loc 10 127 0 discriminator 1
 4366 0f59 61 0E                   		cmp	#0, r14
 4367 0f5b 3A 75 F4                		beq	.L301
 4368 0f5e 38 54 F4                		bra	.L514
 4369                             	.LVL417:
 4370                             	.L500:
 4371                             	.LBB2164:
 4372                             	.LBB2052:
  25:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\tactsw.h **** 		else on_time_msec = 0;
 4373                             		.loc 2 25 0
 4374 0f61 F9 02 18 00 00 00 00    		mov.L	#__ZZN6TactSw11getInstanceEvE8instance, 96[r0]
 4375 0f68 AE 03                   		mov.L	96[r0], r3
 4376 0f6a DC 3E                   		mov.W	[r3], r14
 4377 0f6c 62 1E                   		add	#1, r14
 4378 0f6e EF 34                   		mov.L	r3, r4
 4379 0f70 38 C8 FB                		bra	.L241
 4380                             	.LVL418:
 4381                             	.L258:
 4382                             	.LBE2052:
 4383                             	.LBE2164:
 4384                             	.LBB2165:
 4385                             	.LBB2061:
  81:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****            B = 0;
 4386                             		.loc 4 81 0
 4387 0f73 ED 0B 17                		mov.L	92[r0], r11
 4388 0f76 F9 B6 02 00             		mov.L	#0, 8[r11]
  82:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****            X = 0;
 4389                             		.loc 4 82 0
 4390 0f7a F9 B6 03 00             		mov.L	#0, 12[r11]
  83:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****            Y = 0;
 4391                             		.loc 4 83 0
 4392 0f7e F9 B6 05 00             		mov.L	#0, 20[r11]
  84:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****            RB = 0;
 4393                             		.loc 4 84 0
 4394 0f82 F9 B6 04 00             		mov.L	#0, 16[r11]
  85:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****            LB = 0;
 4395                             		.loc 4 85 0
 4396 0f86 F9 B6 06 00             		mov.L	#0, 24[r11]
  86:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****            BACK = 0;
 4397                             		.loc 4 86 0
 4398 0f8a F9 B6 07 00             		mov.L	#0, 28[r11]
  87:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****            START = 0;
 4399                             		.loc 4 87 0
 4400 0f8e F9 B6 08 00             		mov.L	#0, 32[r11]
  88:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****            RT = 0;
 4401                             		.loc 4 88 0
 4402 0f92 F9 B6 09 00             		mov.L	#0, 36[r11]
  89:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****            LT = 0;
 4403                             		.loc 4 89 0
 4404 0f96 F9 B4 06 00             		mov.B	#0, 6[r11]
  90:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****            cross_x = 0;
 4405                             		.loc 4 90 0
 4406 0f9a F9 B4 07 00             		mov.B	#0, 7[r11]
  91:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****            cross_y = 0;
 4407                             		.loc 4 91 0
 4408 0f9e F8 B4 00                		mov.B	#0, [r11]
  92:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****            R3D_x = 0;
 4409                             		.loc 4 92 0
 4410 0fa1 F9 B4 01 00             		mov.B	#0, 1[r11]
  93:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****            R3D_y = 0;
 4411                             		.loc 4 93 0
 4412 0fa5 F9 B4 04 00             		mov.B	#0, 4[r11]
  94:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****            L3D_x = 0;
 4413                             		.loc 4 94 0
 4414 0fa9 F9 B4 05 00             		mov.B	#0, 5[r11]
  95:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****            L3D_y = 0;
 4415                             		.loc 4 95 0
 4416 0fad F9 B4 02 00             		mov.B	#0, 2[r11]
  96:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****        }
 4417                             		.loc 4 96 0
 4418 0fb1 F9 B4 03 00             		mov.B	#0, 3[r11]
 4419 0fb5 38 B7 FC                		bra	.L330
 4420                             	.LVL419:
 4421                             	.L474:
 4422                             	.LBE2061:
 4423                             	.LBE2165:
 4424                             	.LBB2166:
 4425                             	.LBB2167:
 109:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****     };
 4426                             		.loc 9 109 0
 4427 0fb8 05 00 00 00             		bsr	__Z13startAD_AN110v
 4428                             	.LVL420:
 4429 0fbc F9 02 17 00 00 00 00    		mov.L	#__ZZN10WallSensor11getInstanceEvE8instance, 92[r0]
 4430 0fc3 AD 8B                   		mov.L	92[r0], r3
 4431 0fc5 90 39                   		mov.W	r1, 2[r3]
 4432                             	.LVL421:
 4433                             	.LBE2167:
 4434                             	.LBE2166:
 4435                             	.LBB2168:
 4436                             	.LBB2169:
  68:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****         PORTD.PODR.BIT.B4 = 0;
 4437                             		.loc 9 68 0
 4438 0fc7 FB EE 0D C0 08          		mov.L	#0x8c00d, r14
 4439 0fcc CD E3 20                		mov.B	32[r14], r3
  71:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****     };
 4440                             		.loc 9 71 0
 4441 0fcf FB 4E 0E C0 08          		mov.L	#0x8c00e, r4
  68:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****         PORTD.PODR.BIT.B4 = 0;
 4442                             		.loc 9 68 0
 4443 0fd4 7A 33                   		bclr #3, r3
 4444 0fd6 C7 E3 20                		mov.B	r3, 32[r14]
  69:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****         PORTD.PODR.BIT.B5 = 0;
 4445                             		.loc 9 69 0
 4446 0fd9 F1 EC 20                		bclr #4, 32[r14].B
  70:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****         PORTE.PODR.BIT.B2 = 0;
 4447                             		.loc 9 70 0
 4448 0fdc F1 ED 20                		bclr #5, 32[r14].B
  71:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****     };
 4449                             		.loc 9 71 0
 4450 0fdf F1 4A 20                		bclr #2, 32[r4].B
 4451                             	.LVL422:
 4452                             	.LBE2169:
 4453                             	.LBE2168:
 4454                             	.LBB2170:
 4455                             	.LBB2171:
 119:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****         int16_t l_mod  = left_on - left_off;
 4456                             		.loc 9 119 0
 4457 0fe2 AD 8C                   		mov.L	92[r0], r4
 4458 0fe4 DD 4F 04                		mov.W	8[r4], r15
 120:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****         int16_t r_mod  = right_on - right_off;
 4459                             		.loc 9 120 0
 4460 0fe7 98 C5                   		mov.W	4[r4], r5
 4461 0fe9 99 4A                   		mov.W	10[r4], r2
 121:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp **** 
 4462                             		.loc 9 121 0
 4463 0feb 98 CB                   		mov.W	6[r4], r3
 4464 0fed 99 C4                   		mov.W	12[r4], r4
 4465                             	.LBB2172:
 4466                             	.LBB2173:
1361:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	  {
 4467                             		.loc 7 1361 0
 4468 0fef AD 8F                   		mov.L	92[r0], r7
 4469 0ff1 ED 7E 06                		mov.L	24[r7], r14
 4470                             	.LBE2173:
 4471                             	.LBE2172:
 119:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****         int16_t l_mod  = left_on - left_off;
 4472                             		.loc 9 119 0
 4473 0ff4 FF 0F F1                		sub	r15, r1, r15
 4474 0ff7 E7 0F 18                		mov.L	r15, 96[r0]
 4475                             	.LVL423:
 120:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****         int16_t r_mod  = right_on - right_off;
 4476                             		.loc 9 120 0
 4477 0ffa FF 02 25                		sub	r2, r5, r2
 4478 0ffd A6 0A                   		mov.L	r2, 100[r0]
 4479                             	.LVL424:
 121:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp **** 
 4480                             		.loc 9 121 0
 4481 0fff FF 04 43                		sub	r4, r3, r4
 4482 1002 A6 84                   		mov.L	r4, 104[r0]
 4483                             	.LVL425:
 4484                             	.LBB2196:
 4485                             	.LBB2193:
1361:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	  {
 4486                             		.loc 7 1361 0
 4487 1004 06 85 7E 07             		cmp	28[r7].L, r14
 4488 1008 3A 64 05                		beq	.L313
1363:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	    --this->_M_impl._M_start._M_cur;
 4489                             		.loc 7 1363 0
 4490 100b 60 2E                   		sub	#2, r14
 4491                             	.LVL426:
 4492                             	.LBB2174:
 4493                             	.LBB2175:
 4494                             		.loc 8 120 0
 4495 100d 13                      		beq	.L314
 4496 100e D3 EF                   		mov.W	r15, [r14]
 4497                             		.balign 8,3,1
 4498                             	.L314:
 4499                             	.LBE2175:
 4500                             	.LBE2174:
1364:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	  }
 4501                             		.loc 7 1364 0
 4502 1010 ED 0A 17                		mov.L	92[r0], r10
 4503 1013 E7 AE 06                		mov.L	r14, 24[r10]
 4504                             	.LVL427:
 4505                             		.balign 8,3,1
 4506                             	.L315:
 4507                             	.LBE2193:
 4508                             	.LBE2196:
 4509                             	.LBB2197:
 4510                             	.LBB2198:
1361:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	  {
 4511                             		.loc 7 1361 0
 4512 1016 AD 8C                   		mov.L	92[r0], r4
 4513 1018 ED 4E 10                		mov.L	64[r4], r14
 4514 101b 06 85 4E 11             		cmp	68[r4].L, r14
 4515 101f 3A FC 04                		beq	.L317
1363:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	    --this->_M_impl._M_start._M_cur;
 4516                             		.loc 7 1363 0
 4517 1022 60 2E                   		sub	#2, r14
 4518                             	.LVL428:
 4519                             	.LBB2199:
 4520                             	.LBB2200:
 4521                             		.loc 8 120 0
 4522 1024 15                      		beq	.L318
 4523 1025 AE 0F                   		mov.L	100[r0], r7
 4524 1027 D3 E7                   		mov.W	r7, [r14]
 4525                             		.balign 8,3,1
 4526                             	.L318:
 4527                             	.LBE2200:
 4528                             	.LBE2199:
1364:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	  }
 4529                             		.loc 7 1364 0
 4530 1029 ED 0A 17                		mov.L	92[r0], r10
 4531 102c E7 AE 10                		mov.L	r14, 64[r10]
 4532                             	.LVL429:
 4533 102f 03                      		.balign 8,3,1
 4534                             	.L319:
 4535                             	.LBE2198:
 4536                             	.LBE2197:
 4537                             	.LBB2220:
 4538                             	.LBB2221:
1361:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	  {
 4539                             		.loc 7 1361 0
 4540 1030 AD 8C                   		mov.L	92[r0], r4
 4541 1032 ED 4E 1A                		mov.L	104[r4], r14
 4542 1035 06 85 4E 1B             		cmp	108[r4].L, r14
 4543 1039 3A 8D 04                		beq	.L321
1363:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	    --this->_M_impl._M_start._M_cur;
 4544                             		.loc 7 1363 0
 4545 103c 60 2E                   		sub	#2, r14
 4546                             	.LVL430:
 4547                             	.LBB2222:
 4548                             	.LBB2223:
 4549                             		.loc 8 120 0
 4550 103e 15                      		beq	.L322
 4551 103f AE 87                   		mov.L	104[r0], r7
 4552 1041 D3 E7                   		mov.W	r7, [r14]
 4553                             		.balign 8,3,1
 4554                             	.L322:
 4555                             	.LBE2223:
 4556                             	.LBE2222:
1364:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	  }
 4557                             		.loc 7 1364 0
 4558 1043 ED 0A 17                		mov.L	92[r0], r10
 4559 1046 E7 AE 1A                		mov.L	r14, 104[r10]
 4560                             	.LVL431:
 4561                             		.balign 8,3,1
 4562                             	.L323:
 4563                             	.LBE2221:
 4564                             	.LBE2220:
 4565                             	.LBB2243:
 4566                             	.LBB2244:
1444:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	    != this->_M_impl._M_finish._M_first)
 4567                             		.loc 7 1444 0
 4568 1049 AD 8C                   		mov.L	92[r0], r4
 4569 104b AA C1                   		mov.L	40[r4], r1
 4570 104d 06 85 41 0B             		cmp	44[r4].L, r1
 4571 1051 3A 47 04                		beq	.L325
1447:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	    this->_M_impl.destroy(this->_M_impl._M_finish._M_cur);
 4572                             		.loc 7 1447 0
 4573 1054 60 21                   		sub	#2, r1
 4574 1056 FB 72 00 00 00 00       		mov.L	#__ZZN10WallSensor11getInstanceEvE8instance+40, r7
 4575 105c E3 71                   		mov.L	r1, [r7]
 4576                             	.LVL432:
 4577                             		.balign 8,3,1
 4578                             	.L326:
 4579                             	.LBE2244:
 4580                             	.LBE2243:
 4581                             	.LBB2255:
 4582                             	.LBB2256:
1444:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	    != this->_M_impl._M_finish._M_first)
 4583                             		.loc 7 1444 0
 4584 105e AD 8B                   		mov.L	92[r0], r3
 4585 1060 AD 31                   		mov.L	80[r3], r1
 4586 1062 06 85 31 15             		cmp	84[r3].L, r1
 4587 1066 3A 04 04                		beq	.L327
1447:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	    this->_M_impl.destroy(this->_M_impl._M_finish._M_cur);
 4588                             		.loc 7 1447 0
 4589 1069 60 21                   		sub	#2, r1
 4590 106b FB 42 00 00 00 00       		mov.L	#__ZZN10WallSensor11getInstanceEvE8instance+80, r4
 4591 1071 E3 41                   		mov.L	r1, [r4]
 4592                             	.LVL433:
 4593                             		.balign 8,3,1
 4594                             	.L328:
 4595                             	.LBE2256:
 4596                             	.LBE2255:
 4597                             	.LBB2267:
 4598                             	.LBB2268:
1444:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	    != this->_M_impl._M_finish._M_first)
 4599                             		.loc 7 1444 0
 4600 1073 AD 8B                   		mov.L	92[r0], r3
 4601 1075 AF B1                   		mov.L	120[r3], r1
 4602 1077 06 85 31 1F             		cmp	124[r3].L, r1
 4603 107b 3A 65 03                		beq	.L329
1447:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	    this->_M_impl.destroy(this->_M_impl._M_finish._M_cur);
 4604                             		.loc 7 1447 0
 4605 107e 60 21                   		sub	#2, r1
 4606 1080 FB 42 00 00 00 00       		mov.L	#__ZZN10WallSensor11getInstanceEvE8instance+120, r4
 4607 1086 E3 41                   		mov.L	r1, [r4]
 4608                             	.LVL434:
 4609 1088 38 98 F3                		bra	.L312
 4610                             	.LVL435:
 4611                             	.L475:
 4612                             	.LBE2268:
 4613                             	.LBE2267:
 4614                             	.LBE2171:
 4615                             	.LBE2170:
 4616                             	.LBB2291:
 4617                             	.LBB2292:
 112:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****     };
 4618                             		.loc 9 112 0
 4619 108b 05 00 00 00             		bsr	__Z13startAD_AN002v
 4620                             	.LVL436:
 4621                             	.LBE2292:
 4622                             	.LBE2291:
 4623                             	.LBB2294:
 4624                             	.LBB2295:
  68:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****         PORTD.PODR.BIT.B4 = 0;
 4625                             		.loc 9 68 0
 4626 108f FB EE 0D C0 08          		mov.L	#0x8c00d, r14
 4627 1094 CD E3 20                		mov.B	32[r14], r3
  71:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****     };
 4628                             		.loc 9 71 0
 4629 1097 FB 4E 0E C0 08          		mov.L	#0x8c00e, r4
  68:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****         PORTD.PODR.BIT.B4 = 0;
 4630                             		.loc 9 68 0
 4631 109c 7A 33                   		bclr #3, r3
 4632 109e C7 E3 20                		mov.B	r3, 32[r14]
  69:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****         PORTD.PODR.BIT.B5 = 0;
 4633                             		.loc 9 69 0
 4634 10a1 F1 EC 20                		bclr #4, 32[r14].B
  70:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****         PORTE.PODR.BIT.B2 = 0;
 4635                             		.loc 9 70 0
 4636 10a4 CD E3 20                		mov.B	32[r14], r3
 4637                             	.LBE2295:
 4638                             	.LBE2294:
 4639                             	.LBB2297:
 4640                             	.LBB2293:
 112:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****     };
 4641                             		.loc 9 112 0
 4642 10a7 FB 22 00 00 00 00       		mov.L	#__ZZN10WallSensor11getInstanceEvE8instance+4, r2
 4643 10ad D3 21                   		mov.W	r1, [r2]
 4644                             	.LVL437:
 4645                             	.LBE2293:
 4646                             	.LBE2297:
 4647                             	.LBB2298:
 4648                             	.LBB2296:
  70:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****         PORTE.PODR.BIT.B2 = 0;
 4649                             		.loc 9 70 0
 4650 10af 7A 53                   		bclr #5, r3
 4651 10b1 C7 E3 20                		mov.B	r3, 32[r14]
  71:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****     };
 4652                             		.loc 9 71 0
 4653 10b4 F1 4A 20                		bclr #2, 32[r4].B
 4654                             	.LVL438:
 4655                             	.LBE2296:
 4656                             	.LBE2298:
 4657                             	.LBB2299:
 4658                             	.LBB2300:
 105:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\wallsensor.hpp ****     };
 4659                             		.loc 9 105 0
 4660 10b7 F1 E3 20                		bset #3, 32[r14].B
 4661 10ba 38 66 F3                		bra	.L312
 4662                             	.LVL439:
 4663                             	.L496:
 4664                             	.LBE2300:
 4665                             	.LBE2299:
 4666                             	.LBB2301:
 4667                             	.LBB1917:
 4668                             	.LBB1913:
 4669                             	.LBB1910:
 4670                             	.LBB1899:
 4671                             	.LBB1896:
 4672                             	.LBB1892:
 4673                             	.LBB1862:
 4674                             	.LBB1860:
 4675                             	.LBB1858:
 4676                             	.LBB1857:
 4677                             	.LBB1856:
 4678                             	.LBB1846:
1935:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 				       - this->_M_impl._M_map))
1936:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	  _M_reallocate_map(__nodes_to_add, true);
 4679                             		.loc 7 1936 0
 4680 10bd 66 12                   		mov.L	#1, r2
 4681 10bf 3E 0B 05                		mov.L	#5, 44[r0]
 4682 10c2 FB 12 00 00 00 00       		mov.L	#__ZZN10WallSensor11getInstanceEvE8instance+96, r1
 4683                             	.LVL440:
 4684 10c8 CF 23                   		mov.B	r2, r3
 4685 10ca 05 00 00 00             		bsr	__ZNSt5dequeIsSaIsEE17_M_reallocate_mapEmb
 4686                             	.LVL441:
 4687 10ce AD 8B                   		mov.L	92[r0], r3
 4688 10d0 E5 30 1D 19             		mov.L	116[r3], 100[r0]
 4689 10d4 38 44 F6                		bra	.L212
 4690                             	.LVL442:
 4691                             	.L494:
 4692                             	.LBE1846:
 4693                             	.LBE1856:
 4694                             	.LBE1857:
 4695                             	.LBE1858:
 4696                             	.LBE1860:
 4697                             	.LBE1862:
 4698                             	.LBE1892:
 4699                             	.LBB1893:
 4700                             	.LBB1836:
 4701                             	.LBB1834:
 4702                             	.LBB1832:
 4703                             	.LBB1831:
 4704                             	.LBB1830:
 4705                             	.LBB1820:
 4706 10d7 66 12                   		mov.L	#1, r2
 4707 10d9 3E 0B 05                		mov.L	#5, 44[r0]
 4708 10dc FB 12 00 00 00 00       		mov.L	#__ZZN10WallSensor11getInstanceEvE8instance+16, r1
 4709                             	.LVL443:
 4710 10e2 CF 23                   		mov.B	r2, r3
 4711 10e4 05 00 00 00             		bsr	__ZNSt5dequeIsSaIsEE17_M_reallocate_mapEmb
 4712                             	.LVL444:
 4713 10e8 ED 0C 17                		mov.L	92[r0], r12
 4714 10eb E5 C0 09 19             		mov.L	36[r12], 100[r0]
 4715 10ef 38 CB F5                		bra	.L208
 4716                             	.LVL445:
 4717                             	.L498:
 4718                             	.LBE1820:
 4719                             	.LBE1830:
 4720                             	.LBE1831:
 4721                             	.LBE1832:
 4722                             	.LBE1834:
 4723                             	.LBE1836:
 4724                             	.LBE1893:
 4725                             	.LBB1894:
 4726                             	.LBB1888:
 4727                             	.LBB1886:
 4728                             	.LBB1884:
 4729                             	.LBB1883:
 4730                             	.LBB1882:
 4731                             	.LBB1872:
 4732 10f2 66 12                   		mov.L	#1, r2
 4733 10f4 3E 0B 05                		mov.L	#5, 44[r0]
 4734 10f7 FB 12 00 00 00 00       		mov.L	#__ZZN10WallSensor11getInstanceEvE8instance+56, r1
 4735                             	.LVL446:
 4736 10fd CF 23                   		mov.B	r2, r3
 4737 10ff 05 00 00 00             		bsr	__ZNSt5dequeIsSaIsEE17_M_reallocate_mapEmb
 4738                             	.LVL447:
 4739 1103 AD 8B                   		mov.L	92[r0], r3
 4740 1105 E5 30 13 19             		mov.L	76[r3], 100[r0]
 4741 1109 38 6F F6                		bra	.L216
 4742                             	.LVL448:
 4743                             	.L242:
 4744                             	.LBE1872:
 4745                             	.LBE1882:
 4746                             	.LBE1883:
 4747                             	.LBE1884:
 4748                             	.LBE1886:
 4749                             	.LBE1888:
 4750                             	.LBE1894:
 4751                             	.LBE1896:
 4752                             	.LBE1899:
 4753                             	.LBE1910:
 4754                             	.LBE1913:
 4755                             	.LBE1917:
 4756                             	.LBE2301:
 4757                             	.LBB2302:
 4758                             	.LBB2062:
  56:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****        if(((command[6] & 0x02) >> 1) == 1) B++;
 4759                             		.loc 4 56 0
 4760 110c E7 7E 02                		mov.L	r14, 8[r7]
 4761 110f EF 7B                   		mov.L	r7, r11
 4762 1111 38 67 FA                		bra	.L243
 4763                             	.LVL449:
 4764                             	.L265:
 4765                             	.LBE2062:
 4766                             	.LBE2302:
 4767                             	.LBB2303:
 4768                             	.LBB2129:
 4769                             	.LBB2110:
 4770                             	.LBB2092:
 4771                             	.LBB2086:
 4772                             	.LBB2078:
 202:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****             PORT2.PODR.BIT.B0 = 1;
 4773                             		.loc 3 202 0
 4774 1114 66 07                   		mov.L	#0x0, r7
 203:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****             PORT1.PODR.BIT.B7 = 0;
 4775                             		.loc 3 203 0
 4776 1116 FB AE 02 C0 08          		mov.L	#0x8c002, r10
 4777 111b CD AB 20                		mov.B	32[r10], r11
 202:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****             PORT2.PODR.BIT.B0 = 1;
 4778                             		.loc 3 202 0
 4779 111e FC 87 17                		fcmp	r1, r7
 204:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****         }
 4780                             		.loc 3 204 0
 4781 1121 FB 7E 01 C0 08          		mov.L	#0x8c001, r7
 202:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****             PORT2.PODR.BIT.B0 = 1;
 4782                             		.loc 3 202 0
 4783 1126 27 05 38 A7 02          		bpz	.L469
 203:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****             PORT1.PODR.BIT.B7 = 0;
 4784                             		.loc 3 203 0
 4785 112b 78 0B                   		bset #0, r11
 4786 112d C7 AB 20                		mov.B	r11, 32[r10]
 4787                             	.LVL450:
 204:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****         }
 4788                             		.loc 3 204 0
 4789 1130 CD 7A 20                		mov.B	32[r7], r10
 4790 1133 75 2A 7F                		and #0x7f, r10
 4791 1136 C7 7A 20                		mov.B	r10, 32[r7]
 4792 1139 38 AF FB                		bra	.L266
 4793                             	.LVL451:
 4794                             	.L271:
 4795                             	.LBE2078:
 4796                             	.LBE2086:
 4797                             	.LBB2087:
 4798                             	.LBB2083:
 185:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****             PORT1.PODR.BIT.B3 = 0;
 4799                             		.loc 3 185 0
 4800 113c 66 07                   		mov.L	#0x0, r7
 4801 113e FC 87 47                		fcmp	r4, r7
 4802 1141 27 05 38 7E 02          		bpz	.L471
 186:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****             PORT1.PODR.BIT.B2 = 1;
 4803                             		.loc 3 186 0
 4804 1146 FB EE 01 C0 08          		mov.L	#0x8c001, r14
 4805 114b F1 EB 20                		bclr #3, 32[r14].B
 4806                             	.LVL452:
 187:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****         }
 4807                             		.loc 3 187 0
 4808 114e F1 E2 20                		bset #2, 32[r14].B
 4809 1151 38 CD FB                		bra	.L272
 4810                             	.LVL453:
 4811                             	.L509:
 4812                             	.LBE2083:
 4813                             	.LBE2087:
 4814                             	.LBE2092:
 984:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****                 eventList.pop();
 4815                             		.loc 6 984 0
 4816 1154 FB 32 00 00 00 00       		mov.L	#__ZZN9EventList11getInstanceEvE8instance+8, r3
 4817 115a EC 37                   		mov.L	[r3], r7
 4818 115c EC 71                   		mov.L	[r7], r1
 4819 115e 05 00 00 00             		bsr	__ZdlPv
 4820                             	.LVL454:
 4821                             	.LBB2093:
 4822                             	.LBB2094:
 4823                             	.LBB2095:
1424:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	  {
 4824                             		.loc 7 1424 0
 4825 1162 FB 42 00 00 00 00       		mov.L	#__ZZN9EventList11getInstanceEvE8instance, r4
 4826 1168 ED 4A 04                		mov.L	16[r4], r10
1423:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	    != this->_M_impl._M_start._M_last - 1)
 4827                             		.loc 7 1423 0
 4828 116b A8 C7                   		mov.L	8[r4], r7
1424:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	  {
 4829                             		.loc 7 1424 0
 4830 116d 60 4A                   		sub	#4, r10
1423:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	    != this->_M_impl._M_start._M_last - 1)
 4831                             		.loc 7 1423 0
 4832 116f 47 A7                   		cmp	r10, r7
 4833 1171 3A 4F 04                		beq	.L264
 4834                             	.LVL455:
1427:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	  }
 4835                             		.loc 7 1427 0
 4836 1174 62 47                   		add	#4, r7
 4837                             	.LVL456:
 4838 1176 A0 C7                   		mov.L	r7, 8[r4]
 4839                             	.LVL457:
 4840 1178 38 38 FB                		bra	.L263
 4841                             	.LVL458:
 4842                             	.L508:
 4843                             	.LBE2095:
 4844                             	.LBE2094:
 4845                             	.LBE2093:
 4846                             	.LBB2105:
 4847                             	.LBB2071:
 123:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****         return instance;
 4848                             		.loc 3 123 0
 4849 117b EF A1                   		mov.L	r10, r1
 4850 117d 05 00 00 00             		bsr	___cxa_guard_acquire
 4851                             	.LVL459:
 4852 1181 61 01                   		cmp	#0, r1
 4853 1183 3B 15 02                		bne	.L262
 4854 1186 ED 7E 02                		mov.L	8[r7], r14
 4855 1189 38 03 FB                		bra	.L261
 4856                             	.LVL460:
 4857                             	.L510:
 4858                             	.LBE2071:
 4859                             	.LBE2105:
 4860                             	.LBB2106:
 4861                             	.LBB2088:
 4862                             	.LBB2084:
 193:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****     };
 4863                             		.loc 3 193 0
 4864 118c AE 89                   		mov.L	108[r0], r1
 4865 118e 70 11 00 00 00 80       		add	#0x80000000, r1
 4866 1194 38 9C FB                		bra	.L275
 4867                             	.LVL461:
 4868                             	.L239:
 4869                             	.LBE2084:
 4870                             	.LBE2088:
 4871                             	.LBE2106:
 4872                             	.LBE2110:
 4873                             	.LBE2129:
 4874                             	.LBE2303:
 104:../src/main.cpp ****             imu2.update();
 4875                             		.loc 10 104 0
 4876 1197 FB 12 00 00 00 00       		mov.L	#__ZZN7MPU925011getInstanceEvE8instance, r1
 4877 119d F9 06 0B FF             		mov.L	#-1, 44[r0]
 4878 11a1 05 00 00 00             		bsr	__ZN7MPU92506updateEv
 4879                             	.LVL462:
 105:../src/main.cpp ****         }
 4880                             		.loc 10 105 0
 4881 11a5 FB 12 00 00 00 00       		mov.L	#__ZZN9Icm20608G11getInstanceEvE8instance, r1
 4882 11ab 05 00 00 00             		bsr	__ZN9Icm20608G6updateEv
 4883                             	.LVL463:
 4884 11af FB C2 00 00 00 00       		mov.L	#__ZZ13timeInterruptE11countIntNum, r12
 4885 11b5 E4 C0 18                		mov.L	[r12], 96[r0]
 4886 11b8 ED C2 01                		mov.L	4[r12], r2
 4887 11bb ED 0E 18                		mov.L	96[r0], r14
 4888 11be 64 3E                   		and #3, r14
 4889 11c0 38 91 F1                		bra	.L238
 4890                             	.LVL464:
 4891                             	.L501:
 4892                             	.LBB2304:
 4893                             	.LBB2063:
  57:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****        else B = 0;
 4894                             		.loc 4 57 0
 4895 11c3 ED E7 03                		mov.L	12[r14], r7
 4896 11c6 62 17                   		add	#1, r7
 4897 11c8 E7 E7 03                		mov.L	r7, 12[r14]
 4898 11cb 38 BF F9                		bra	.L245
 4899                             	.L503:
  61:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****        else Y = 0;
 4900                             		.loc 4 61 0
 4901 11ce ED E7 04                		mov.L	16[r14], r7
 4902 11d1 62 17                   		add	#1, r7
 4903 11d3 E7 E7 04                		mov.L	r7, 16[r14]
 4904 11d6 38 DE F9                		bra	.L249
 4905                             	.L502:
  59:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****        else X= 0;
 4906                             		.loc 4 59 0
 4907 11d9 ED E7 05                		mov.L	20[r14], r7
 4908 11dc 62 17                   		add	#1, r7
 4909 11de E7 E7 05                		mov.L	r7, 20[r14]
 4910 11e1 38 BF F9                		bra	.L247
 4911                             	.L507:
  69:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****        else START = 0;
 4912                             		.loc 4 69 0
 4913 11e4 ED E7 09                		mov.L	36[r14], r7
 4914 11e7 62 17                   		add	#1, r7
 4915 11e9 E7 E7 09                		mov.L	r7, 36[r14]
 4916 11ec 38 1C FA                		bra	.L257
 4917                             	.L506:
  67:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****        else BACK = 0;
 4918                             		.loc 4 67 0
 4919 11ef ED E7 08                		mov.L	32[r14], r7
 4920 11f2 62 17                   		add	#1, r7
 4921 11f4 E7 E7 08                		mov.L	r7, 32[r14]
 4922 11f7 38 FB F9                		bra	.L255
 4923                             	.L505:
  65:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****        else LB = 0;
 4924                             		.loc 4 65 0
 4925 11fa ED E7 07                		mov.L	28[r14], r7
 4926 11fd 62 17                   		add	#1, r7
 4927 11ff E7 E7 07                		mov.L	r7, 28[r14]
 4928 1202 38 DB F9                		bra	.L253
 4929                             	.L504:
  63:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\gamepad.h ****        else RB = 0;
 4930                             		.loc 4 63 0
 4931 1205 ED E7 06                		mov.L	24[r14], r7
 4932 1208 62 17                   		add	#1, r7
 4933 120a E7 E7 06                		mov.L	r7, 24[r14]
 4934 120d 38 BB F9                		bra	.L251
 4935                             	.LVL465:
 4936                             	.L286:
 4937                             	.LBE2063:
 4938                             	.LBE2304:
 4939                             	.LBB2305:
 4940                             	.LBB2163:
 146:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h **** 
 4941                             		.loc 3 146 0
 4942 1210 73 E7 00 00 01          		add	#0x10000, r14, r7
 4943 1215 76 0E 00 80             		cmp	#0xffff8000, r14
 4944 1219 28 04                   		bge 1f
 4945 121b EF 7E                   		mov r7, r14
 4946                             	1:
 4947                             	.LVL466:
 4948 121d 38 93 FB                		bra	.L287
 4949                             	.LVL467:
 4950                             	.L284:
 144:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****         if( count_diff_L > 32768 )  count_diff_L -= 65536;
 4951                             		.loc 3 144 0
 4952 1220 73 47 00 00 01          		add	#0x10000, r4, r7
 4953 1225 76 04 00 80             		cmp	#0xffff8000, r4
 4954 1229 28 04                   		bge 1f
 4955 122b EF 74                   		mov r7, r4
 4956                             	1:
 4957                             	.LVL468:
 4958 122d 38 73 FB                		bra	.L285
 4959                             	.LVL469:
 4960                             	.L513:
 4961                             	.LBB2154:
 4962                             	.LBB2151:
  70:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\imu.hpp **** 		return instance;
 4963                             		.loc 1 70 0
 4964 1230 FB 12 00 00 00 00       		mov.L	#__ZGVZN7MPU925011getInstanceEvE8instance, r1
 4965 1236 05 00 00 00             		bsr	___cxa_guard_acquire
 4966                             	.LVL470:
 4967 123a 61 01                   		cmp	#0, r1
 4968 123c 3B C9 00                		bne	.L294
 4969 123f FB 32 00 00 00 00       		mov.L	#__ZGVZN7MPU925011getInstanceEvE8instance, r3
 4970 1245 CC 37                   		mov.B	[r3], r7
 4971 1247 03                      		.balign 8,3,5
 4972                             	.L295:
 4973                             	.LBE2151:
 4974                             	.LBE2154:
 168:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****         a_h = MPU9250::getInstance().acc_f[0] + c_force * sinf(theta);
 4975                             		.loc 3 168 0
 4976 1248 FB A2 00 00 00 00       		mov.L	#__ZZN7MPU925011getInstanceEvE8instance, r10
 4977 124e ED AB 12                		mov.L	72[r10], r11
 4978 1251 ED 0A 18                		mov.L	96[r0], r10
 4979 1254 FD 72 3A 5D BA 7C 3F    		fmul	#0x3f7cba5d, r10
 4980 125b FC 8B BA                		fadd	r11, r10
 4981 125e ED 0B 19                		mov.L	100[r0], r11
 4982 1261 E7 BA 18                		mov.L	r10, 96[r11]
 4983                             	.LBB2155:
 4984                             	.LBB2156:
  70:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\imu.hpp **** 		return instance;
 4985                             		.loc 1 70 0
 4986 1264 76 27 FF 00             		and #0xff, r7
 4987 1268 3B A0 FC                		bne	.L297
 4988 126b FB 12 00 00 00 00       		mov.L	#__ZGVZN7MPU925011getInstanceEvE8instance, r1
 4989 1271 05 00 00 00             		bsr	___cxa_guard_acquire
 4990                             	.LVL471:
 4991 1275 61 01                   		cmp	#0, r1
 4992 1277 3A 91 FC                		beq	.L297
 4993                             	.LVL472:
 4994                             	.LBE2156:
 4995                             	.LBB2157:
 4996                             	.LBB2158:
 4997 127a FB 12 00 00 00 00       		mov.L	#__ZGVZN7MPU925011getInstanceEvE8instance, r1
 4998 1280 05 00 00 00             		bsr	___cxa_guard_release
 4999                             	.LVL473:
 5000 1284 FB 12 00 00 00 00       		mov.L	#__ZN7MPU9250D1Ev, r1
 5001 128a FB 22 00 00 00 00       		mov.L	#__ZZN7MPU925011getInstanceEvE8instance, r2
 5002 1290 FB 32 00 00 00 00       		mov.L	#___dso_handle, r3
 5003 1296 05 00 00 00             		bsr	___cxa_atexit
 5004                             	.LVL474:
 5005 129a 38 6E FC                		bra	.L297
 5006                             	.LVL475:
 5007                             	.L512:
 5008                             	.LBE2158:
 5009                             	.LBE2157:
 5010                             	.LBE2155:
 5011                             	.LBB2159:
 5012                             	.LBB2145:
 5013 129d EF C1                   		mov.L	r12, r1
 5014 129f 05 00 00 00             		bsr	___cxa_guard_acquire
 5015                             	.LVL476:
 5016 12a3 61 01                   		cmp	#0, r1
 5017 12a5 21 35                   		bne	.L292
 5018 12a7 58 C3                   		movu.B	[r12], r3
 5019 12a9 38 D7 FB                		bra	.L291
 5020                             	.L511:
 5021                             	.LBE2145:
 5022                             	.LBE2159:
 5023                             	.LBB2160:
 5024                             	.LBB2138:
 5025 12ac EF 41                   		mov.L	r4, r1
 5026 12ae 05 00 00 00             		bsr	___cxa_guard_acquire
 5027                             	.LVL477:
 5028 12b2 61 01                   		cmp	#0, r1
 5029 12b4 3A 4C FB                		beq	.L289
 5030                             	.LVL478:
 5031                             	.LBE2138:
 5032                             	.LBB2139:
 5033                             	.LBB2140:
 5034 12b7 FB 12 00 00 00 00       		mov.L	#__ZGVZN7MPU925011getInstanceEvE8instance, r1
 5035 12bd 05 00 00 00             		bsr	___cxa_guard_release
 5036                             	.LVL479:
 5037 12c1 FB 12 00 00 00 00       		mov.L	#__ZN7MPU9250D1Ev, r1
 5038 12c7 FB 22 00 00 00 00       		mov.L	#__ZZN7MPU925011getInstanceEvE8instance, r2
 5039 12cd FB 32 00 00 00 00       		mov.L	#___dso_handle, r3
 5040 12d3 05 00 00 00             		bsr	___cxa_atexit
 5041                             	.LVL480:
 5042 12d7 38 29 FB                		bra	.L289
 5043                             	.LVL481:
 5044                             	.L292:
 5045                             	.LBE2140:
 5046                             	.LBE2139:
 5047                             	.LBE2160:
 5048                             	.LBB2161:
 5049                             	.LBB2146:
 5050                             	.LBB2147:
 5051 12da FB 12 00 00 00 00       		mov.L	#__ZGVZN7MPU925011getInstanceEvE8instance, r1
 5052 12e0 05 00 00 00             		bsr	___cxa_guard_release
 5053                             	.LVL482:
 5054 12e4 FB 12 00 00 00 00       		mov.L	#__ZN7MPU9250D1Ev, r1
 5055 12ea FB 22 00 00 00 00       		mov.L	#__ZZN7MPU925011getInstanceEvE8instance, r2
 5056 12f0 FB 32 00 00 00 00       		mov.L	#___dso_handle, r3
 5057 12f6 05 00 00 00             		bsr	___cxa_atexit
 5058                             	.LVL483:
 5059 12fa FB A2 00 00 00 00       		mov.L	#__ZGVZN7MPU925011getInstanceEvE8instance, r10
 5060 1300 58 A3                   		movu.B	[r10], r3
 5061 1302 38 7E FB                		bra	.L291
 5062                             	.LVL484:
 5063                             	.L294:
 5064                             	.LBE2147:
 5065                             	.LBE2146:
 5066                             	.LBE2161:
 5067                             	.LBB2162:
 5068                             	.LBB2152:
 5069                             	.LBB2153:
 5070 1305 FB 12 00 00 00 00       		mov.L	#__ZGVZN7MPU925011getInstanceEvE8instance, r1
 5071 130b 05 00 00 00             		bsr	___cxa_guard_release
 5072                             	.LVL485:
 5073 130f FB 12 00 00 00 00       		mov.L	#__ZN7MPU9250D1Ev, r1
 5074 1315 FB 22 00 00 00 00       		mov.L	#__ZZN7MPU925011getInstanceEvE8instance, r2
 5075 131b FB 32 00 00 00 00       		mov.L	#___dso_handle, r3
 5076 1321 05 00 00 00             		bsr	___cxa_atexit
 5077                             	.LVL486:
 5078 1325 FB 42 00 00 00 00       		mov.L	#__ZGVZN7MPU925011getInstanceEvE8instance, r4
 5079 132b CC 47                   		mov.B	[r4], r7
 5080 132d 38 1B FF                		bra	.L295
 5081                             	.LVL487:
 5082                             	.L260:
 5083                             	.LBE2153:
 5084                             	.LBE2152:
 5085                             	.LBE2162:
 5086                             	.LBE2163:
 5087                             	.LBE2305:
 5088                             	.LBB2306:
 5089                             	.LBB2130:
 5090                             	.LBB2111:
 5091                             	.LBB2112:
 5092                             	.LBB2113:
 5093 1330 FB 32 00 00 00 00       		mov.L	#__ZGVZN7MPU925011getInstanceEvE8instance, r3
 5094 1336 58 37                   		movu.B	[r3], r7
 5095 1338 61 07                   		cmp	#0, r7
 5096 133a 3A 02 01                		beq	.L515
 5097 133d FC 13 00                		.balign 8,3,5
 5098                             	.L278:
 5099                             	.LBE2113:
 5100                             	.LBE2112:
 5101                             	.LBB2117:
 5102                             	.LBB2118:
 123:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****         return instance;
 5103                             		.loc 3 123 0
 5104 1340 FB 42 00 00 00 00       		mov.L	#__ZGVZN6UMouse11getInstanceEvE8instance, r4
 5105 1346 58 47                   		movu.B	[r4], r7
 5106                             	.LBE2118:
 5107                             	.LBE2117:
 993:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****             UMouse &mouse = UMouse::getInstance();
 5108                             		.loc 6 993 0
 5109 1348 FB A2 00 00 00 00       		mov.L	#__ZZN7MPU925011getInstanceEvE8instance, r10
 5110 134e E5 A0 10 18             		mov.L	64[r10], 96[r0]
 5111                             	.LVL488:
 5112                             	.LBB2123:
 5113                             	.LBB2119:
 123:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****         return instance;
 5114                             		.loc 3 123 0
 5115 1352 61 07                   		cmp	#0, r7
 5116 1354 3A BA 00                		beq	.L516
 5117 1357 03                      		.balign 8,3,5
 5118                             	.L281:
 5119                             	.LBE2119:
 5120                             	.LBE2123:
 995:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****             mouse.t_v += mouse.a_v * DELTA_T;
 5121                             		.loc 6 995 0
 5122 1358 FB 72 00 00 00 00       		mov.L	#__ZZN6UMouse11getInstanceEvE8instance, r7
 5123 135e ED 7B 07                		mov.L	28[r7], r11
 5124 1361 ED 0A 18                		mov.L	96[r0], r10
 5125 1364 FD 72 3A 6F 12 83 3A    		fmul	#0x3a83126f, r10
 5126 136b FC 8B BA                		fadd	r11, r10
 5127 136e E7 7A 07                		mov.L	r10, 28[r7]
 996:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         }
 5128                             		.loc 6 996 0
 5129 1371 ED 7A 18                		mov.L	96[r7], r10
 5130 1374 ED 7B 01                		mov.L	4[r7], r11
 5131 1377 FD 72 3A 6F 12 83 3A    		fmul	#0x3a83126f, r10
 5132 137e FB C2 00 00 00 00       		mov.L	#__ZZ13timeInterruptE11countIntNum, r12
 5133 1384 E4 C0 18                		mov.L	[r12], 96[r0]
 5134                             	.LVL489:
 5135 1387 FC 8B BA                		fadd	r11, r10
 5136 138a ED C2 01                		mov.L	4[r12], r2
 5137 138d E7 7A 01                		mov.L	r10, 4[r7]
 5138 1390 ED 0E 18                		mov.L	96[r0], r14
 5139 1393 64 3E                   		and #3, r14
 5140 1395 38 C8 EF                		bra	.L240
 5141                             	.L262:
 5142                             	.LVL490:
 5143                             	.LBE2111:
 5144                             	.LBB2126:
 5145                             	.LBB2107:
 5146                             	.LBB2072:
 5147                             	.LBB2073:
 123:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****         return instance;
 5148                             		.loc 3 123 0
 5149 1398 FB 12 00 00 00 00       		mov.L	#__ZGVZN6UMouse11getInstanceEvE8instance, r1
 5150 139e 05 00 00 00             		bsr	___cxa_guard_release
 5151                             	.LVL491:
 5152 13a2 FB 12 00 00 00 00       		mov.L	#__ZN6UMouseD1Ev, r1
 5153 13a8 FB 22 00 00 00 00       		mov.L	#__ZZN6UMouse11getInstanceEvE8instance, r2
 5154 13ae FB 32 00 00 00 00       		mov.L	#___dso_handle, r3
 5155 13b4 05 00 00 00             		bsr	___cxa_atexit
 5156                             	.LVL492:
 5157 13b8 ED 0B 18                		mov.L	96[r0], r11
 5158 13bb ED BE 02                		mov.L	8[r11], r14
 5159 13be 38 CE F8                		bra	.L261
 5160                             	.LVL493:
 5161                             	.L471:
 5162                             	.LBE2073:
 5163                             	.LBE2072:
 5164                             	.LBE2107:
 5165                             	.LBB2108:
 5166                             	.LBB2089:
 5167                             	.LBB2085:
 190:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****             PORT1.PODR.BIT.B2 = 0;
 5168                             		.loc 3 190 0
 5169 13c1 FB 7E 01 C0 08          		mov.L	#0x8c001, r7
 5170 13c6 F1 73 20                		bset #3, 32[r7].B
 5171                             	.LVL494:
 191:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****         }
 5172                             		.loc 3 191 0
 5173 13c9 F1 7A 20                		bclr #2, 32[r7].B
 5174 13cc 38 52 F9                		bra	.L272
 5175                             	.LVL495:
 5176                             	.L469:
 5177                             	.LBE2085:
 5178                             	.LBE2089:
 5179                             	.LBB2090:
 5180                             	.LBB2079:
 207:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****             PORT1.PODR.BIT.B7 = 1;
 5181                             		.loc 3 207 0
 5182 13cf 7A 0B                   		bclr #0, r11
 5183 13d1 C7 AB 20                		mov.B	r11, 32[r10]
 5184                             	.LVL496:
 208:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****         }
 5185                             		.loc 3 208 0
 5186 13d4 CD 7A 20                		mov.B	32[r7], r10
 5187 13d7 75 3A 80                		or	#0xffffff80, r10
 5188 13da C7 7A 20                		mov.B	r10, 32[r7]
 5189 13dd 38 0B F9                		bra	.L266
 5190                             	.LVL497:
 5191                             	.L329:
 5192                             	.LBE2079:
 5193                             	.LBE2090:
 5194                             	.LBE2108:
 5195                             	.LBE2126:
 5196                             	.LBE2130:
 5197                             	.LBE2306:
 5198                             	.LBB2307:
 5199                             	.LBB2288:
 5200                             	.LBB2279:
 5201                             	.LBB2278:
 5202                             	.LBB2269:
 5203                             	.LBB2270:
 5204                             	.LBB2271:
 5205                             	.LBB2272:
 5206                             	.LBB2273:
 110:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h **** 
 5207                             		.loc 8 110 0
 5208 13e0 05 00 00 00             		bsr	__ZdlPv
 5209                             	.LVL498:
 5210                             	.LBE2273:
 5211                             	.LBE2272:
 5212                             	.LBE2271:
 508:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       this->_M_impl._M_finish._M_cur = this->_M_impl._M_finish._M_last - 1;
 5213                             		.loc 11 508 0
 5214 13e4 FB A2 00 00 00 00       		mov.L	#__ZZN10WallSensor11getInstanceEvE8instance, r10
 5215 13ea ED A7 21                		mov.L	132[r10], r7
 5216                             	.LVL499:
 5217 13ed 60 47                   		sub	#4, r7
 5218                             	.LVL500:
 5219                             	.LBB2274:
 5220                             	.LBB2275:
 236:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	_M_first = *__new_node;
 5221                             		.loc 7 236 0
 5222 13ef E7 A7 21                		mov.L	r7, 132[r10]
 237:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	_M_last = _M_first + difference_type(_S_buffer_size());
 5223                             		.loc 7 237 0
 5224 13f2 EC 77                   		mov.L	[r7], r7
 5225                             	.LVL501:
 238:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       }
 5226                             		.loc 7 238 0
 5227 13f4 72 7B 00 02             		add	#0x200, r7, r11
 5228                             	.LBE2275:
 5229                             	.LBE2274:
 509:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       this->_M_impl.destroy(this->_M_impl._M_finish._M_cur);
 5230                             		.loc 11 509 0
 5231 13f8 72 7A FE 01             		add	#0x1fe, r7, r10
 5232                             	.LBB2277:
 5233                             	.LBB2276:
 237:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	_M_last = _M_first + difference_type(_S_buffer_size());
 5234                             		.loc 7 237 0
 5235 13fc FB C2 00 00 00 00       		mov.L	#__ZZN10WallSensor11getInstanceEvE8instance, r12
 5236 1402 E7 C7 1F                		mov.L	r7, 124[r12]
 5237                             	.LVL502:
 238:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       }
 5238                             		.loc 7 238 0
 5239 1405 E7 CB 20                		mov.L	r11, 128[r12]
 5240                             	.LBE2276:
 5241                             	.LBE2277:
 509:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       this->_M_impl.destroy(this->_M_impl._M_finish._M_cur);
 5242                             		.loc 11 509 0
 5243 1408 E7 CA 1E                		mov.L	r10, 120[r12]
 5244                             	.LVL503:
 5245 140b 38 15 F0                		bra	.L312
 5246                             	.LVL504:
 5247                             	.L516:
 5248                             	.LBE2270:
 5249                             	.LBE2269:
 5250                             	.LBE2278:
 5251                             	.LBE2279:
 5252                             	.LBE2288:
 5253                             	.LBE2307:
 5254                             	.LBB2308:
 5255                             	.LBB2131:
 5256                             	.LBB2127:
 5257                             	.LBB2124:
 5258                             	.LBB2120:
 123:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\mouse.h ****         return instance;
 5259                             		.loc 3 123 0
 5260 140e EF 41                   		mov.L	r4, r1
 5261 1410 05 00 00 00             		bsr	___cxa_guard_acquire
 5262                             	.LVL505:
 5263 1414 61 01                   		cmp	#0, r1
 5264 1416 3A 42 FF                		beq	.L281
 5265                             	.LVL506:
 5266                             	.LBE2120:
 5267                             	.LBB2121:
 5268                             	.LBB2122:
 5269 1419 FB 12 00 00 00 00       		mov.L	#__ZGVZN6UMouse11getInstanceEvE8instance, r1
 5270 141f 05 00 00 00             		bsr	___cxa_guard_release
 5271                             	.LVL507:
 5272 1423 FB 12 00 00 00 00       		mov.L	#__ZN6UMouseD1Ev, r1
 5273 1429 FB 22 00 00 00 00       		mov.L	#__ZZN6UMouse11getInstanceEvE8instance, r2
 5274 142f FB 32 00 00 00 00       		mov.L	#___dso_handle, r3
 5275 1435 05 00 00 00             		bsr	___cxa_atexit
 5276                             	.LVL508:
 5277 1439 38 1F FF                		bra	.L281
 5278                             	.LVL509:
 5279                             	.L515:
 5280                             	.LBE2122:
 5281                             	.LBE2121:
 5282                             	.LBE2124:
 5283                             	.LBB2125:
 5284                             	.LBB2114:
  70:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\imu.hpp **** 		return instance;
 5285                             		.loc 1 70 0
 5286 143c EF 31                   		mov.L	r3, r1
 5287 143e 05 00 00 00             		bsr	___cxa_guard_acquire
 5288                             	.LVL510:
 5289 1442 61 01                   		cmp	#0, r1
 5290 1444 3A FC FE                		beq	.L278
 5291                             	.LVL511:
 5292                             	.LBE2114:
 5293                             	.LBB2115:
 5294                             	.LBB2116:
 5295 1447 FB 12 00 00 00 00       		mov.L	#__ZGVZN7MPU925011getInstanceEvE8instance, r1
 5296 144d 05 00 00 00             		bsr	___cxa_guard_release
 5297                             	.LVL512:
 5298 1451 FB 12 00 00 00 00       		mov.L	#__ZN7MPU9250D1Ev, r1
 5299 1457 FB 22 00 00 00 00       		mov.L	#__ZZN7MPU925011getInstanceEvE8instance, r2
 5300 145d FB 32 00 00 00 00       		mov.L	#___dso_handle, r3
 5301 1463 05 00 00 00             		bsr	___cxa_atexit
 5302                             	.LVL513:
 5303 1467 38 D9 FE                		bra	.L278
 5304                             	.LVL514:
 5305                             	.L327:
 5306                             	.LBE2116:
 5307                             	.LBE2115:
 5308                             	.LBE2125:
 5309                             	.LBE2127:
 5310                             	.LBE2131:
 5311                             	.LBE2308:
 5312                             	.LBB2309:
 5313                             	.LBB2289:
 5314                             	.LBB2280:
 5315                             	.LBB2266:
 5316                             	.LBB2257:
 5317                             	.LBB2258:
 5318                             	.LBB2259:
 5319                             	.LBB2260:
 5320                             	.LBB2261:
 110:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h **** 
 5321                             		.loc 8 110 0
 5322 146a 05 00 00 00             		bsr	__ZdlPv
 5323                             	.LVL515:
 5324                             	.LBE2261:
 5325                             	.LBE2260:
 5326                             	.LBE2259:
 508:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       this->_M_impl._M_finish._M_cur = this->_M_impl._M_finish._M_last - 1;
 5327                             		.loc 11 508 0
 5328 146e FB A2 00 00 00 00       		mov.L	#__ZZN10WallSensor11getInstanceEvE8instance, r10
 5329 1474 ED A7 17                		mov.L	92[r10], r7
 5330                             	.LVL516:
 5331 1477 60 47                   		sub	#4, r7
 5332                             	.LVL517:
 5333                             	.LBB2262:
 5334                             	.LBB2263:
 236:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	_M_first = *__new_node;
 5335                             		.loc 7 236 0
 5336 1479 E7 A7 17                		mov.L	r7, 92[r10]
 237:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	_M_last = _M_first + difference_type(_S_buffer_size());
 5337                             		.loc 7 237 0
 5338 147c EC 77                   		mov.L	[r7], r7
 5339                             	.LVL518:
 238:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       }
 5340                             		.loc 7 238 0
 5341 147e 72 7B 00 02             		add	#0x200, r7, r11
 5342                             	.LBE2263:
 5343                             	.LBE2262:
 509:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       this->_M_impl.destroy(this->_M_impl._M_finish._M_cur);
 5344                             		.loc 11 509 0
 5345 1482 72 7A FE 01             		add	#0x1fe, r7, r10
 5346                             	.LBB2265:
 5347                             	.LBB2264:
 237:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	_M_last = _M_first + difference_type(_S_buffer_size());
 5348                             		.loc 7 237 0
 5349 1486 FB C2 00 00 00 00       		mov.L	#__ZZN10WallSensor11getInstanceEvE8instance, r12
 5350 148c E7 C7 15                		mov.L	r7, 84[r12]
 5351                             	.LVL519:
 238:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       }
 5352                             		.loc 7 238 0
 5353 148f E7 CB 16                		mov.L	r11, 88[r12]
 5354                             	.LBE2264:
 5355                             	.LBE2265:
 509:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       this->_M_impl.destroy(this->_M_impl._M_finish._M_cur);
 5356                             		.loc 11 509 0
 5357 1492 E7 CA 14                		mov.L	r10, 80[r12]
 5358                             	.LVL520:
 5359 1495 38 DE FB                		bra	.L328
 5360                             	.LVL521:
 5361                             	.L325:
 5362                             	.LBE2258:
 5363                             	.LBE2257:
 5364                             	.LBE2266:
 5365                             	.LBE2280:
 5366                             	.LBB2281:
 5367                             	.LBB2254:
 5368                             	.LBB2245:
 5369                             	.LBB2246:
 5370                             	.LBB2247:
 5371                             	.LBB2248:
 5372                             	.LBB2249:
 110:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h **** 
 5373                             		.loc 8 110 0
 5374 1498 05 00 00 00             		bsr	__ZdlPv
 5375                             	.LVL522:
 5376                             	.LBE2249:
 5377                             	.LBE2248:
 5378                             	.LBE2247:
 508:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       this->_M_impl._M_finish._M_cur = this->_M_impl._M_finish._M_last - 1;
 5379                             		.loc 11 508 0
 5380 149c FB A2 00 00 00 00       		mov.L	#__ZZN10WallSensor11getInstanceEvE8instance, r10
 5381 14a2 ED A7 0D                		mov.L	52[r10], r7
 5382                             	.LVL523:
 5383 14a5 60 47                   		sub	#4, r7
 5384                             	.LVL524:
 5385                             	.LBB2250:
 5386                             	.LBB2251:
 236:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	_M_first = *__new_node;
 5387                             		.loc 7 236 0
 5388 14a7 E7 A7 0D                		mov.L	r7, 52[r10]
 237:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	_M_last = _M_first + difference_type(_S_buffer_size());
 5389                             		.loc 7 237 0
 5390 14aa EC 77                   		mov.L	[r7], r7
 5391                             	.LVL525:
 238:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       }
 5392                             		.loc 7 238 0
 5393 14ac 72 7B 00 02             		add	#0x200, r7, r11
 5394                             	.LBE2251:
 5395                             	.LBE2250:
 509:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       this->_M_impl.destroy(this->_M_impl._M_finish._M_cur);
 5396                             		.loc 11 509 0
 5397 14b0 72 7A FE 01             		add	#0x1fe, r7, r10
 5398                             	.LBB2253:
 5399                             	.LBB2252:
 237:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	_M_last = _M_first + difference_type(_S_buffer_size());
 5400                             		.loc 7 237 0
 5401 14b4 FB C2 00 00 00 00       		mov.L	#__ZZN10WallSensor11getInstanceEvE8instance, r12
 5402 14ba E7 C7 0B                		mov.L	r7, 44[r12]
 5403                             	.LVL526:
 238:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       }
 5404                             		.loc 7 238 0
 5405 14bd E7 CB 0C                		mov.L	r11, 48[r12]
 5406                             	.LBE2252:
 5407                             	.LBE2253:
 509:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       this->_M_impl.destroy(this->_M_impl._M_finish._M_cur);
 5408                             		.loc 11 509 0
 5409 14c0 E7 CA 0A                		mov.L	r10, 40[r12]
 5410                             	.LVL527:
 5411 14c3 38 9B FB                		bra	.L326
 5412                             	.LVL528:
 5413                             	.L321:
 5414                             	.LBE2246:
 5415                             	.LBE2245:
 5416                             	.LBE2254:
 5417                             	.LBE2281:
 5418                             	.LBB2282:
 5419                             	.LBB2241:
 5420                             	.LBB2224:
 5421                             	.LBB2225:
 5422                             	.LBB2226:
 5423                             	.LBB2227:
1934:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 				       - this->_M_impl._M_map))
 5424                             		.loc 7 1934 0
 5425 14c6 FB B2 00 00 00 00       		mov.L	#__ZZN10WallSensor11getInstanceEvE8instance, r11
 5426 14cc ED B7 1D                		mov.L	116[r11], r7
 5427 14cf ED BA 18                		mov.L	96[r11], r10
 5428 14d2 FF 0A A7                		sub	r10, r7, r10
 5429 14d5 6A 2A                   		shar	#2, r10
 5430 14d7 3A 15 01                		beq	.L517
 5431 14da A6 07                   		mov.L	r7, 96[r0]
 5432 14dc 76 10 01 00             		.balign 8,3,4
 5433                             	.L324:
 5434                             	.LVL529:
 5435                             	.LBE2227:
 5436                             	.LBE2226:
 5437                             	.LBB2229:
 5438                             	.LBB2230:
 5439                             	.LBB2231:
 104:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h ****       }
 5440                             		.loc 8 104 0
 5441 14e0 F9 06 0B FF             		mov.L	#-1, 44[r0]
 5442 14e4 FB 1A 00 02             		mov.L	#0x200, r1
 5443 14e8 05 00 00 00             		bsr	__Znwm
 5444                             	.LVL530:
 5445                             	.LBE2231:
 5446                             	.LBE2230:
 5447                             	.LBE2229:
 481:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	__try
 5448                             		.loc 11 481 0
 5449 14ec AE 07                   		mov.L	96[r0], r7
 5450 14ee 60 47                   		sub	#4, r7
 5451 14f0 E3 71                   		mov.L	r1, [r7]
 484:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 					       - 1);
 5452                             		.loc 11 484 0
 5453 14f2 ED 0C 17                		mov.L	92[r0], r12
 5454 14f5 ED C7 1D                		mov.L	116[r12], r7
 5455                             	.LVL531:
 5456 14f8 60 47                   		sub	#4, r7
 5457                             	.LVL532:
 5458                             	.LBB2232:
 5459                             	.LBB2233:
 236:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	_M_first = *__new_node;
 5460                             		.loc 7 236 0
 5461 14fa E7 C7 1D                		mov.L	r7, 116[r12]
 237:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	_M_last = _M_first + difference_type(_S_buffer_size());
 5462                             		.loc 7 237 0
 5463 14fd EC 77                   		mov.L	[r7], r7
 5464                             	.LVL533:
 238:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       }
 5465                             		.loc 7 238 0
 5466 14ff 72 7B 00 02             		add	#0x200, r7, r11
 5467                             	.LBE2233:
 5468                             	.LBE2232:
 486:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** #if __cplusplus >= 201103L
 5469                             		.loc 11 486 0
 5470 1503 72 7A FE 01             		add	#0x1fe, r7, r10
 5471                             	.LBB2235:
 5472                             	.LBB2234:
 237:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	_M_last = _M_first + difference_type(_S_buffer_size());
 5473                             		.loc 7 237 0
 5474 1507 E7 C7 1B                		mov.L	r7, 108[r12]
 5475                             	.LVL534:
 238:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       }
 5476                             		.loc 7 238 0
 5477 150a E7 CB 1C                		mov.L	r11, 112[r12]
 5478                             	.LBE2234:
 5479                             	.LBE2235:
 486:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** #if __cplusplus >= 201103L
 5480                             		.loc 11 486 0
 5481 150d E7 CA 1A                		mov.L	r10, 104[r12]
 5482                             	.LVL535:
 5483                             	.LBB2236:
 5484                             	.LBB2237:
 5485                             		.loc 8 120 0
 5486 1510 3A 39 FB                		beq	.L323
 5487 1513 AE 83                   		mov.L	104[r0], r3
 5488 1515 D7 73 FF                		mov.W	r3, 510[r7]
 5489 1518 38 31 FB                		bra	.L323
 5490                             	.LVL536:
 5491                             	.L317:
 5492                             	.LBE2237:
 5493                             	.LBE2236:
 5494                             	.LBE2225:
 5495                             	.LBE2224:
 5496                             	.LBE2241:
 5497                             	.LBE2282:
 5498                             	.LBB2283:
 5499                             	.LBB2218:
 5500                             	.LBB2201:
 5501                             	.LBB2202:
 5502                             	.LBB2203:
 5503                             	.LBB2204:
1934:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 				       - this->_M_impl._M_map))
 5504                             		.loc 7 1934 0
 5505 151b FB B2 00 00 00 00       		mov.L	#__ZZN10WallSensor11getInstanceEvE8instance, r11
 5506 1521 ED B7 13                		mov.L	76[r11], r7
 5507 1524 ED BA 0E                		mov.L	56[r11], r10
 5508 1527 FF 0A A7                		sub	r10, r7, r10
 5509 152a 6A 2A                   		shar	#2, r10
 5510 152c 3A D9 00                		beq	.L518
 5511 152f A6 07                   		mov.L	r7, 96[r0]
 5512                             	.LVL537:
 5513                             		.balign 8,3,4
 5514                             	.L320:
 5515                             	.LBE2204:
 5516                             	.LBE2203:
 5517                             	.LBB2206:
 5518                             	.LBB2207:
 5519                             	.LBB2208:
 104:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h ****       }
 5520                             		.loc 8 104 0
 5521 1531 F9 06 0B FF             		mov.L	#-1, 44[r0]
 5522 1535 FB 1A 00 02             		mov.L	#0x200, r1
 5523 1539 05 00 00 00             		bsr	__Znwm
 5524                             	.LVL538:
 5525                             	.LBE2208:
 5526                             	.LBE2207:
 5527                             	.LBE2206:
 481:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	__try
 5528                             		.loc 11 481 0
 5529 153d AE 07                   		mov.L	96[r0], r7
 5530 153f 60 47                   		sub	#4, r7
 5531 1541 E3 71                   		mov.L	r1, [r7]
 484:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 					       - 1);
 5532                             		.loc 11 484 0
 5533 1543 ED 0C 17                		mov.L	92[r0], r12
 5534 1546 ED C7 13                		mov.L	76[r12], r7
 5535                             	.LVL539:
 5536 1549 60 47                   		sub	#4, r7
 5537                             	.LVL540:
 5538                             	.LBB2209:
 5539                             	.LBB2210:
 236:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	_M_first = *__new_node;
 5540                             		.loc 7 236 0
 5541 154b E7 C7 13                		mov.L	r7, 76[r12]
 237:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	_M_last = _M_first + difference_type(_S_buffer_size());
 5542                             		.loc 7 237 0
 5543 154e EC 77                   		mov.L	[r7], r7
 5544                             	.LVL541:
 238:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       }
 5545                             		.loc 7 238 0
 5546 1550 72 7B 00 02             		add	#0x200, r7, r11
 5547                             	.LBE2210:
 5548                             	.LBE2209:
 486:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** #if __cplusplus >= 201103L
 5549                             		.loc 11 486 0
 5550 1554 72 7A FE 01             		add	#0x1fe, r7, r10
 5551                             	.LBB2212:
 5552                             	.LBB2211:
 237:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	_M_last = _M_first + difference_type(_S_buffer_size());
 5553                             		.loc 7 237 0
 5554 1558 E7 C7 11                		mov.L	r7, 68[r12]
 5555                             	.LVL542:
 238:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       }
 5556                             		.loc 7 238 0
 5557 155b E7 CB 12                		mov.L	r11, 72[r12]
 5558                             	.LBE2211:
 5559                             	.LBE2212:
 486:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** #if __cplusplus >= 201103L
 5560                             		.loc 11 486 0
 5561 155e E7 CA 10                		mov.L	r10, 64[r12]
 5562                             	.LVL543:
 5563                             	.LBB2213:
 5564                             	.LBB2214:
 5565                             		.loc 8 120 0
 5566 1561 3A CF FA                		beq	.L319
 5567 1564 AE 0B                   		mov.L	100[r0], r3
 5568 1566 D7 73 FF                		mov.W	r3, 510[r7]
 5569 1569 38 C7 FA                		bra	.L319
 5570                             	.LVL544:
 5571                             	.L313:
 5572 156c EF 7B                   		mov.L	r7, r11
 5573                             	.LVL545:
 5574                             	.LBE2214:
 5575                             	.LBE2213:
 5576                             	.LBE2202:
 5577                             	.LBE2201:
 5578                             	.LBE2218:
 5579                             	.LBE2283:
 5580                             	.LBB2284:
 5581                             	.LBB2194:
 5582                             	.LBB2176:
 5583                             	.LBB2177:
 5584                             	.LBB2178:
 5585                             	.LBB2179:
1934:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 				       - this->_M_impl._M_map))
 5586                             		.loc 7 1934 0
 5587 156e AA 7F                   		mov.L	36[r7], r7
 5588 1570 ED BA 04                		mov.L	16[r11], r10
 5589 1573 FF 0A A7                		sub	r10, r7, r10
 5590 1576 6A 2A                   		shar	#2, r10
 5591 1578 3A A6 00                		beq	.L519
 5592 157b A6 8F                   		mov.L	r7, 108[r0]
 5593                             	.LVL546:
 5594 157d FC 13 00                		.balign 8,3,4
 5595                             	.L316:
 5596                             	.LBE2179:
 5597                             	.LBE2178:
 5598                             	.LBB2181:
 5599                             	.LBB2182:
 5600                             	.LBB2183:
 104:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h ****       }
 5601                             		.loc 8 104 0
 5602 1580 F9 06 0B FF             		mov.L	#-1, 44[r0]
 5603 1584 FB 1A 00 02             		mov.L	#0x200, r1
 5604 1588 05 00 00 00             		bsr	__Znwm
 5605                             	.LVL547:
 5606                             	.LBE2183:
 5607                             	.LBE2182:
 5608                             	.LBE2181:
 481:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 	__try
 5609                             		.loc 11 481 0
 5610 158c AE 8F                   		mov.L	108[r0], r7
 5611 158e 60 47                   		sub	#4, r7
 5612 1590 E3 71                   		mov.L	r1, [r7]
 484:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** 					       - 1);
 5613                             		.loc 11 484 0
 5614 1592 ED 0C 17                		mov.L	92[r0], r12
 5615 1595 ED C7 09                		mov.L	36[r12], r7
 5616                             	.LVL548:
 5617 1598 60 47                   		sub	#4, r7
 5618                             	.LVL549:
 5619                             	.LBB2184:
 5620                             	.LBB2185:
 236:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	_M_first = *__new_node;
 5621                             		.loc 7 236 0
 5622 159a E7 C7 09                		mov.L	r7, 36[r12]
 237:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	_M_last = _M_first + difference_type(_S_buffer_size());
 5623                             		.loc 7 237 0
 5624 159d EC 77                   		mov.L	[r7], r7
 5625                             	.LVL550:
 238:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       }
 5626                             		.loc 7 238 0
 5627 159f 72 7B 00 02             		add	#0x200, r7, r11
 5628                             	.LBE2185:
 5629                             	.LBE2184:
 486:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** #if __cplusplus >= 201103L
 5630                             		.loc 11 486 0
 5631 15a3 72 7A FE 01             		add	#0x1fe, r7, r10
 5632                             	.LBB2187:
 5633                             	.LBB2186:
 237:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	_M_last = _M_first + difference_type(_S_buffer_size());
 5634                             		.loc 7 237 0
 5635 15a7 E7 C7 07                		mov.L	r7, 28[r12]
 5636                             	.LVL551:
 238:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       }
 5637                             		.loc 7 238 0
 5638 15aa E7 CB 08                		mov.L	r11, 32[r12]
 5639                             	.LBE2186:
 5640                             	.LBE2187:
 486:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc **** #if __cplusplus >= 201103L
 5641                             		.loc 11 486 0
 5642 15ad E7 CA 06                		mov.L	r10, 24[r12]
 5643                             	.LVL552:
 5644                             	.LBB2188:
 5645                             	.LBB2189:
 5646                             		.loc 8 120 0
 5647 15b0 3A 66 FA                		beq	.L315
 5648 15b3 AE 03                   		mov.L	96[r0], r3
 5649 15b5 D7 73 FF                		mov.W	r3, 510[r7]
 5650 15b8 38 5E FA                		bra	.L315
 5651                             	.LVL553:
 5652                             	.L334:
 5653                             	.LBE2189:
 5654                             	.LBE2188:
 5655                             	.LBE2177:
 5656                             	.LBE2176:
 5657                             	.LBE2194:
 5658                             	.LBE2284:
 5659                             	.LBE2289:
 5660                             	.LBE2309:
 5661                             	.LBB2310:
 5662                             	.LBB2013:
 5663                             	.LBB2009:
 5664                             	.LBB2006:
 5665                             	.LBB1991:
 5666                             	.LBB1990:
 5667                             	.LBB1989:
 5668                             	.LBB1988:
 5669                             	.LBB1984:
 641:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	_M_deallocate_node(*__n);
 5670                             		.loc 7 641 0
 5671 15bb EF 41                   		mov.L	r4, r1
 5672 15bd 38 B3 F3                		bra	.L224
 5673                             	.LVL554:
 5674                             	.L264:
 5675                             	.LBE1984:
 5676                             	.LBE1988:
 5677                             	.LBE1989:
 5678                             	.LBE1990:
 5679                             	.LBE1991:
 5680                             	.LBE2006:
 5681                             	.LBE2009:
 5682                             	.LBE2013:
 5683                             	.LBE2310:
 5684                             	.LBB2311:
 5685                             	.LBB2132:
 5686                             	.LBB2128:
 5687                             	.LBB2109:
 5688                             	.LBB2104:
 5689                             	.LBB2103:
 5690                             	.LBB2096:
 5691                             	.LBB2097:
 5692                             	.LBB2098:
 5693                             	.LBB2099:
 5694                             	.LBB2100:
 110:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h **** 
 5695                             		.loc 8 110 0
 5696 15c0 FB 72 00 00 00 00       		mov.L	#__ZZN9EventList11getInstanceEvE8instance, r7
 5697 15c6 A8 F9                   		mov.L	12[r7], r1
 5698 15c8 05 00 00 00             		bsr	__ZdlPv
 5699                             	.LVL555:
 5700                             	.LBE2100:
 5701                             	.LBE2099:
 5702                             	.LBE2098:
 524:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****       this->_M_impl._M_start._M_cur = this->_M_impl._M_start._M_first;
 5703                             		.loc 11 524 0
 5704 15cc A9 7F                   		mov.L	20[r7], r7
 5705                             	.LVL556:
 5706 15ce 71 7A 04                		add	#4, r7, r10
 5707                             	.LVL557:
 5708                             	.LBB2101:
 5709                             	.LBB2102:
 236:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	_M_first = *__new_node;
 5710                             		.loc 7 236 0
 5711 15d1 FB B2 00 00 00 00       		mov.L	#__ZZN9EventList11getInstanceEvE8instance, r11
 5712 15d7 E7 BA 05                		mov.L	r10, 20[r11]
 237:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	_M_last = _M_first + difference_type(_S_buffer_size());
 5713                             		.loc 7 237 0
 5714 15da A8 7F                   		mov.L	4[r7], r7
 238:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       }
 5715                             		.loc 7 238 0
 5716 15dc 72 7A 00 02             		add	#0x200, r7, r10
 5717                             	.LVL558:
 237:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	_M_last = _M_first + difference_type(_S_buffer_size());
 5718                             		.loc 7 237 0
 5719 15e0 E7 B7 03                		mov.L	r7, 12[r11]
 5720                             	.LVL559:
 238:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h ****       }
 5721                             		.loc 7 238 0
 5722 15e3 E7 BA 04                		mov.L	r10, 16[r11]
 5723                             	.LBE2102:
 5724                             	.LBE2101:
 525:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\deque.tcc ****     }
 5725                             		.loc 11 525 0
 5726 15e6 E7 B7 02                		mov.L	r7, 8[r11]
 5727 15e9 38 C7 F6                		bra	.L263
 5728                             	.LVL560:
 5729                             	.L517:
 5730                             	.LBE2097:
 5731                             	.LBE2096:
 5732                             	.LBE2103:
 5733                             	.LBE2104:
 5734                             	.LBE2109:
 5735                             	.LBE2128:
 5736                             	.LBE2132:
 5737                             	.LBE2311:
 5738                             	.LBB2312:
 5739                             	.LBB2290:
 5740                             	.LBB2285:
 5741                             	.LBB2242:
 5742                             	.LBB2240:
 5743                             	.LBB2239:
 5744                             	.LBB2238:
 5745                             	.LBB2228:
 5746                             		.loc 7 1936 0
 5747 15ec 66 12                   		mov.L	#1, r2
 5748 15ee F9 06 0B FF             		mov.L	#-1, 44[r0]
 5749 15f2 FB 12 00 00 00 00       		mov.L	#__ZZN10WallSensor11getInstanceEvE8instance+96, r1
 5750                             	.LVL561:
 5751 15f8 CF 23                   		mov.B	r2, r3
 5752 15fa 05 00 00 00             		bsr	__ZNSt5dequeIsSaIsEE17_M_reallocate_mapEmb
 5753                             	.LVL562:
 5754 15fe E5 B0 1D 18             		mov.L	116[r11], 96[r0]
 5755 1602 38 DE FE                		bra	.L324
 5756                             	.LVL563:
 5757                             	.L518:
 5758                             	.LBE2228:
 5759                             	.LBE2238:
 5760                             	.LBE2239:
 5761                             	.LBE2240:
 5762                             	.LBE2242:
 5763                             	.LBE2285:
 5764                             	.LBB2286:
 5765                             	.LBB2219:
 5766                             	.LBB2217:
 5767                             	.LBB2216:
 5768                             	.LBB2215:
 5769                             	.LBB2205:
 5770 1605 66 12                   		mov.L	#1, r2
 5771 1607 F9 06 0B FF             		mov.L	#-1, 44[r0]
 5772 160b FB 12 00 00 00 00       		mov.L	#__ZZN10WallSensor11getInstanceEvE8instance+56, r1
 5773                             	.LVL564:
 5774 1611 CF 23                   		mov.B	r2, r3
 5775 1613 05 00 00 00             		bsr	__ZNSt5dequeIsSaIsEE17_M_reallocate_mapEmb
 5776                             	.LVL565:
 5777 1617 E5 B0 13 18             		mov.L	76[r11], 96[r0]
 5778                             	.LVL566:
 5779 161b 38 16 FF                		bra	.L320
 5780                             	.LVL567:
 5781                             	.L519:
 5782                             	.LBE2205:
 5783                             	.LBE2215:
 5784                             	.LBE2216:
 5785                             	.LBE2217:
 5786                             	.LBE2219:
 5787                             	.LBE2286:
 5788                             	.LBB2287:
 5789                             	.LBB2195:
 5790                             	.LBB2192:
 5791                             	.LBB2191:
 5792                             	.LBB2190:
 5793                             	.LBB2180:
 5794 161e 66 12                   		mov.L	#1, r2
 5795                             	.LVL568:
 5796 1620 F9 06 0B FF             		mov.L	#-1, 44[r0]
 5797 1624 FB 12 00 00 00 00       		mov.L	#__ZZN10WallSensor11getInstanceEvE8instance+16, r1
 5798                             	.LVL569:
 5799 162a CF 23                   		mov.B	r2, r3
 5800 162c 05 00 00 00             		bsr	__ZNSt5dequeIsSaIsEE17_M_reallocate_mapEmb
 5801                             	.LVL570:
 5802 1630 E5 B0 09 1B             		mov.L	36[r11], 108[r0]
 5803 1634 38 4C FF                		bra	.L316
 5804                             	.LVL571:
 5805                             	.L343:
 5806 1637 AA 8F                   		mov.L	44[r0], r7
 5807 1639 E5 00 0C 17             		mov.L	48[r0], 92[r0]
 5808 163d 61 F7                   		cmp	#15, r7
 5809 163f 24 0E                   		bgtu	.L360
 5810 1641 6C 27                   		shll	#2, r7
 5811 1643 70 77 00 00 00 00       		add	#.L361, r7
 5812 1649 EC 77                   		mov.L	[r7], r7
 5813                             		
 5814 164b 7F 07                   	1:jmp	r7
 5815                             		.section C,"a",@progbits
 5816                             		.p2align 2
 5817                             		.balign 4
 5818                             		.balign 4
 5819                             	.L361:
 5820 0000 51 16 00 00             		.long .L344
 5821 0004 70 16 00 00             		.long .L193
 5822 0008 9A 16 00 00             		.long .L198
 5823 000c 90 16 00 00             		.long .L204
 5824 0010 84 16 00 00             		.long .L348
 5825 0014 65 16 00 00             		.long .L349
 5826 0018 A6 16 00 00             		.long .L350
 5827 001c B3 16 00 00             		.long .L351
 5828 0020 DC 16 00 00             		.long .L352
 5829 0024 E5 16 00 00             		.long .L353
 5830 0028 F2 16 00 00             		.long .L354
 5831 002c 1B 17 00 00             		.long .L355
 5832 0030 25 17 00 00             		.long .L356
 5833 0034 32 17 00 00             		.long .L357
 5834 0038 68 17 00 00             		.long .L232
 5835 003c 7C 17 00 00             		.long .L359
 5836                             		.section P,"ax"
 5837                             	.L360:
 5838 164d 05 00 00 00             		bsr	_abort
 5839                             	.LVL572:
 5840                             	.L344:
 5841                             	.LBE2180:
 5842                             	.LBE2190:
 5843                             	.LBE2191:
 5844                             	.LBE2192:
 5845                             	.LBE2195:
 5846                             	.LBE2287:
 5847                             	.LBE2290:
 5848                             	.LBE2312:
 5849                             	.LBB2313:
 5850                             	.LBB1675:
  26:C:\Users\ryota\e2_studio\workspace\umouse\src\robot_object\fcled.h **** 		return instance;
 5851                             		.loc 5 26 0
 5852 1651 FB 12 00 00 00 00       		mov.L	#__ZGVZN5FcLed11getInstanceEvE8instance, r1
 5853 1657 05 00 00 00             		bsr	___cxa_guard_abort
 5854                             	.LVL573:
 5855 165b AD 89                   		mov.L	92[r0], r1
 5856 165d F9 06 0B FF             		mov.L	#-1, 44[r0]
 5857 1661 05 00 00 00             		bsr	__Unwind_SjLj_Resume
 5858                             	.LVL574:
 5859                             	.L349:
 5860                             	.LBE1675:
 5861                             	.LBE2313:
 5862                             	.LBB2314:
 5863                             	.LBB1918:
 5864                             	.LBB1914:
 5865                             	.LBB1911:
 5866                             	.LBB1900:
 5867                             	.LBB1722:
 5868                             	.LBB1720:
 5869                             	.LBB1718:
 602:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	{
 5870                             		.loc 7 602 0
 5871 1665 3E 0B 00                		mov.L	#0, 44[r0]
 5872 1668 05 00 00 00             		bsr	___cxa_end_catch
 5873                             	.LVL575:
 5874 166c 76 10 01 00             		.balign 8,3,5
 5875                             	.L193:
 5876                             	.LBE1718:
 5877                             	.LBE1720:
 5878                             	.LBE1722:
 5879                             	.LBE1900:
 5880                             	.LBE1911:
 5881                             	.LBE1914:
 5882                             		.loc 9 133 0
 5883 1670 FB 12 00 00 00 00       		mov.L	#__ZGVZN10WallSensor11getInstanceEvE8instance, r1
 5884 1676 05 00 00 00             		bsr	___cxa_guard_abort
 5885                             	.LVL576:
 5886 167a AD 89                   		mov.L	92[r0], r1
 5887 167c F9 06 0B FF             		mov.L	#-1, 44[r0]
 5888 1680 05 00 00 00             		bsr	__Unwind_SjLj_Resume
 5889                             	.LVL577:
 5890                             	.L348:
 5891                             	.LBB1915:
 5892                             	.LBB1912:
 5893                             	.LBB1901:
 5894                             	.LBB1902:
 918:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 
 5895                             		.loc 7 918 0
 5896 1684 FB 12 00 00 00 00       		mov.L	#__ZZN10WallSensor11getInstanceEvE8instance+96, r1
 5897                             	.LVL578:
 5898 168a 05 00 00 00             		bsr	__ZNSt11_Deque_baseIsSaIsEED2Ev
 5899                             	.LVL579:
 5900 168e EF 00                   		.balign 8,3,5
 5901                             	.L204:
 5902                             	.LBE1902:
 5903                             	.LBE1901:
 5904                             	.LBB1903:
 5905                             	.LBB1904:
 5906 1690 FB 12 00 00 00 00       		mov.L	#__ZZN10WallSensor11getInstanceEvE8instance+56, r1
 5907                             	.LVL580:
 5908 1696 05 00 00 00             		bsr	__ZNSt11_Deque_baseIsSaIsEED2Ev
 5909                             	.LVL581:
 5910                             		.balign 8,3,5
 5911                             	.L198:
 5912                             	.LBE1904:
 5913                             	.LBE1903:
 5914                             	.LBB1905:
 5915                             	.LBB1906:
 5916 169a FB 12 00 00 00 00       		mov.L	#__ZZN10WallSensor11getInstanceEvE8instance+16, r1
 5917                             	.LVL582:
 5918 16a0 05 00 00 00             		bsr	__ZNSt11_Deque_baseIsSaIsEED2Ev
 5919                             	.LVL583:
 5920 16a4 2E CC                   		bra	.L193
 5921                             	.LVL584:
 5922                             	.L350:
 5923                             	.LBE1906:
 5924                             	.LBE1905:
 5925                             	.LBB1907:
 5926                             	.LBB1723:
 5927                             	.LBB1721:
 5928                             	.LBB1719:
 5929                             	.LBB1714:
 5930                             	.LBB1702:
 629:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	{
 5931                             		.loc 7 629 0
 5932 16a6 AD 89                   		mov.L	92[r0], r1
 5933 16a8 05 00 00 00             		bsr	___cxa_begin_catch
 5934                             	.LVL585:
 632:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	}
 5935                             		.loc 7 632 0
 5936 16ac 3E 0B 08                		mov.L	#8, 44[r0]
 5937 16af 05 00 00 00             		bsr	___cxa_rethrow
 5938                             	.LVL586:
 5939                             	.L351:
 629:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	{
 5940                             		.loc 7 629 0
 5941 16b3 3E 0B 00                		mov.L	#0, 44[r0]
 5942 16b6 05 00 00 00             		bsr	___cxa_end_catch
 5943                             	.LVL587:
 5944                             	.LBE1702:
 5945                             	.LBE1714:
 602:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	{
 5946                             		.loc 7 602 0
 5947 16ba AD 89                   		mov.L	92[r0], r1
 5948 16bc 05 00 00 00             		bsr	___cxa_begin_catch
 5949                             	.LVL588:
 5950                             	.LBB1715:
 5951                             	.LBB1716:
 5952                             	.LBB1717:
 110:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h **** 
 5953                             		.loc 8 110 0
 5954 16c0 FB B2 00 00 00 00       		mov.L	#__ZZN10WallSensor11getInstanceEvE8instance, r11
 5955 16c6 ED B1 04                		mov.L	16[r11], r1
 5956 16c9 05 00 00 00             		bsr	__ZdlPv
 5957                             	.LVL589:
 5958                             	.LBE1717:
 5959                             	.LBE1716:
 5960                             	.LBE1715:
 605:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	  this->_M_impl._M_map_size = 0;
 5961                             		.loc 7 605 0
 5962 16cd F9 B6 04 00             		mov.L	#0, 16[r11]
 606:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	  __throw_exception_again;
 5963                             		.loc 7 606 0
 5964 16d1 F9 B6 05 00             		mov.L	#0, 20[r11]
 607:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	}
 5965                             		.loc 7 607 0
 5966 16d5 3E 0B 06                		mov.L	#6, 44[r0]
 5967 16d8 05 00 00 00             		bsr	___cxa_rethrow
 5968                             	.LVL590:
 5969                             	.L352:
 5970                             	.LBE1719:
 5971                             	.LBE1721:
 5972                             	.LBE1723:
 5973                             	.LBE1907:
 5974                             	.LBB1908:
 5975                             	.LBB1764:
 5976                             	.LBB1763:
 5977                             	.LBB1762:
 602:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	{
 5978                             		.loc 7 602 0
 5979 16dc 3E 0B 00                		mov.L	#0, 44[r0]
 5980 16df 05 00 00 00             		bsr	___cxa_end_catch
 5981                             	.LVL591:
 5982 16e3 2E B7                   		bra	.L198
 5983                             	.L353:
 5984                             	.LBB1758:
 5985                             	.LBB1746:
 629:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	{
 5986                             		.loc 7 629 0
 5987 16e5 AD 89                   		mov.L	92[r0], r1
 5988 16e7 05 00 00 00             		bsr	___cxa_begin_catch
 5989                             	.LVL592:
 632:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	}
 5990                             		.loc 7 632 0
 5991 16eb 3E 0B 0B                		mov.L	#11, 44[r0]
 5992 16ee 05 00 00 00             		bsr	___cxa_rethrow
 5993                             	.LVL593:
 5994                             	.L354:
 629:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	{
 5995                             		.loc 7 629 0
 5996 16f2 3E 0B 00                		mov.L	#0, 44[r0]
 5997 16f5 05 00 00 00             		bsr	___cxa_end_catch
 5998                             	.LVL594:
 5999                             	.LBE1746:
 6000                             	.LBE1758:
 602:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	{
 6001                             		.loc 7 602 0
 6002 16f9 AD 89                   		mov.L	92[r0], r1
 6003 16fb 05 00 00 00             		bsr	___cxa_begin_catch
 6004                             	.LVL595:
 6005                             	.LBB1759:
 6006                             	.LBB1760:
 6007                             	.LBB1761:
 110:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h **** 
 6008                             		.loc 8 110 0
 6009 16ff FB A2 00 00 00 00       		mov.L	#__ZZN10WallSensor11getInstanceEvE8instance, r10
 6010 1705 ED A1 0E                		mov.L	56[r10], r1
 6011 1708 05 00 00 00             		bsr	__ZdlPv
 6012                             	.LVL596:
 6013                             	.LBE1761:
 6014                             	.LBE1760:
 6015                             	.LBE1759:
 605:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	  this->_M_impl._M_map_size = 0;
 6016                             		.loc 7 605 0
 6017 170c F9 A6 0E 00             		mov.L	#0, 56[r10]
 606:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	  __throw_exception_again;
 6018                             		.loc 7 606 0
 6019 1710 F9 A6 0F 00             		mov.L	#0, 60[r10]
 607:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	}
 6020                             		.loc 7 607 0
 6021 1714 3E 0B 09                		mov.L	#9, 44[r0]
 6022 1717 05 00 00 00             		bsr	___cxa_rethrow
 6023                             	.LVL597:
 6024                             	.L355:
 6025                             	.LBE1762:
 6026                             	.LBE1763:
 6027                             	.LBE1764:
 6028                             	.LBE1908:
 6029                             	.LBB1909:
 6030                             	.LBB1808:
 6031                             	.LBB1806:
 6032                             	.LBB1804:
 602:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	{
 6033                             		.loc 7 602 0
 6034 171b 3E 0B 00                		mov.L	#0, 44[r0]
 6035 171e 05 00 00 00             		bsr	___cxa_end_catch
 6036                             	.LVL598:
 6037 1722 38 6E FF                		bra	.L204
 6038                             	.L356:
 6039                             	.LBB1799:
 6040                             	.LBB1787:
 629:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	{
 6041                             		.loc 7 629 0
 6042 1725 AD 89                   		mov.L	92[r0], r1
 6043 1727 05 00 00 00             		bsr	___cxa_begin_catch
 6044                             	.LVL599:
 632:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	}
 6045                             		.loc 7 632 0
 6046 172b 3E 0B 0E                		mov.L	#14, 44[r0]
 6047 172e 05 00 00 00             		bsr	___cxa_rethrow
 6048                             	.LVL600:
 6049                             	.L357:
 629:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	{
 6050                             		.loc 7 629 0
 6051 1732 3E 0B 00                		mov.L	#0, 44[r0]
 6052 1735 05 00 00 00             		bsr	___cxa_end_catch
 6053                             	.LVL601:
 6054                             	.LBE1787:
 6055                             	.LBE1799:
 602:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	{
 6056                             		.loc 7 602 0
 6057 1739 AD 89                   		mov.L	92[r0], r1
 6058 173b 05 00 00 00             		bsr	___cxa_begin_catch
 6059                             	.LVL602:
 6060                             	.LBB1800:
 6061                             	.LBB1801:
 6062                             	.LBB1802:
 110:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h **** 
 6063                             		.loc 8 110 0
 6064 173f FB 32 00 00 00 00       		mov.L	#__ZZN10WallSensor11getInstanceEvE8instance+96, r3
 6065 1745 EC 31                   		mov.L	[r3], r1
 6066 1747 05 00 00 00             		bsr	__ZdlPv
 6067                             	.LVL603:
 6068                             	.LBE1802:
 6069                             	.LBE1801:
 6070                             	.LBE1800:
 605:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	  this->_M_impl._M_map_size = 0;
 6071                             		.loc 7 605 0
 6072 174b FB 42 00 00 00 00       		mov.L	#__ZZN10WallSensor11getInstanceEvE8instance, r4
 6073 1751 3E C8 00                		mov.L	#0, 96[r4]
 606:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	  __throw_exception_again;
 6074                             		.loc 7 606 0
 6075 1754 3E C9 00                		mov.L	#0, 100[r4]
 607:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	}
 6076                             		.loc 7 607 0
 6077 1757 3E 0B 0C                		mov.L	#12, 44[r0]
 6078 175a 05 00 00 00             		bsr	___cxa_rethrow
 6079                             	.LVL604:
 6080                             	.L520:
 6081                             	.LBE1804:
 6082                             	.LBE1806:
 6083                             	.LBE1808:
 6084                             	.LBE1909:
 6085                             	.LBE1912:
 6086                             	.LBE1915:
 6087                             	.LBE1918:
 6088                             	.LBE2314:
 6089                             	.LBB2315:
 6090                             	.LBB2014:
 6091                             	.LBB2010:
 6092                             	.LBB2007:
 6093                             	.LBB1992:
 6094                             	.LBB1993:
 6095                             	.LBB1994:
 6096                             	.LBB1995:
 6097                             	.LBB1996:
 6098                             	.LBB1997:
 110:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h **** 
 6099                             		.loc 8 110 0
 6100 175e EC 01                   		mov.L	[r0], r1
 6101 1760 05 00 00 00             		bsr	__ZdlPv
 6102                             	.LVL605:
 6103 1764 76 10 01 00             		.balign 8,3,5
 6104                             	.L232:
 6105                             	.LBE1997:
 6106                             	.LBE1996:
 6107                             	.LBE1995:
 6108                             	.LBE1994:
 6109                             	.LBE1993:
 6110                             	.LBE1992:
 6111                             	.LBE2007:
 6112                             	.LBE2010:
 976:C:\Users\ryota\e2_studio\workspace\umouse\src\umouse_object\moveEvent.h ****         return instance;
 6113                             		.loc 6 976 0
 6114 1768 FB 12 00 00 00 00       		mov.L	#__ZGVZN9EventList11getInstanceEvE8instance, r1
 6115 176e 05 00 00 00             		bsr	___cxa_guard_abort
 6116                             	.LVL606:
 6117 1772 AD 89                   		mov.L	92[r0], r1
 6118 1774 F9 06 0B FF             		mov.L	#-1, 44[r0]
 6119 1778 05 00 00 00             		bsr	__Unwind_SjLj_Resume
 6120                             	.LVL607:
 6121                             	.L359:
 6122                             	.LBB2011:
 6123                             	.LBB2008:
 6124                             	.LBB2005:
 6125                             	.LBB2004:
 6126                             	.LBB2003:
 563:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	{
 6127                             		.loc 7 563 0
 6128 177c EC 07                   		mov.L	[r0], r7
 6129 177e 61 07                   		cmp	#0, r7
 6130 1780 20 E8                   		beq	.L232
 566:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	  _M_deallocate_map(this->_M_impl._M_map, this->_M_impl._M_map_size);
 6131                             		.loc 7 566 0
 6132 1782 E5 00 05 18             		mov.L	20[r0], 96[r0]
 6133 1786 AA 0F                   		mov.L	36[r0], r7
 6134 1788 62 47                   		add	#4, r7
 6135 178a A6 0F                   		mov.L	r7, 100[r0]
 6136                             	.LVL608:
 6137                             		.balign 8,3,1
 6138                             	.L230:
 6139                             	.LBB1998:
 6140                             	.LBB1999:
 641:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\bits\stl_deque.h **** 	_M_deallocate_node(*__n);
 6141                             		.loc 7 641 0
 6142 178c ED 0C 19                		mov.L	100[r0], r12
 6143 178f AE 03                   		mov.L	96[r0], r3
 6144 1791 47 3C                   		cmp	r3, r12
 6145 1793 25 CB                   		bleu	.L520
 6146                             	.LVL609:
 6147                             	.LBB2000:
 6148                             	.LBB2001:
 6149                             	.LBB2002:
 110:c:\progra~2\gccfor~2.201\rx-elf\rx-elf\rx-elf\include\c++\4.8.0.201602-gnurx\ext\new_allocator.h **** 
 6150                             		.loc 8 110 0
 6151 1795 ED 0B 18                		mov.L	96[r0], r11
 6152 1798 FD 2A B1                		mov.L	[r11+], r1
 6153 179b E7 0B 18                		mov.L	r11, 96[r0]
 6154                             	.LVL610:
 6155 179e 05 00 00 00             		bsr	__ZdlPv
 6156                             	.LVL611:
 6157 17a2 2E EA                   		bra	.L230
 6158                             	.LBE2002:
 6159                             	.LBE2001:
 6160                             	.LBE2000:
 6161                             	.LBE1999:
 6162                             	.LBE1998:
 6163                             	.LBE2003:
 6164                             	.LBE2004:
 6165                             	.LBE2005:
 6166                             	.LBE2008:
 6167                             	.LBE2011:
 6168                             	.LBE2014:
 6169                             	.LBE2315:
 6170                             	.LBE2317:
 6171                             	.LFE1466:
 6172                             		.section	.gcc_except_table,"aw",@progbits
 6173                             		.balign 4
 6174                             	.LLSDA1466:
 6175 0000 FF                      		.byte	0xff
 6176 0001 00                      		.byte	0
 6177 0002 29                      		.uleb128 .LLSDATT1466-.LLSDATTD1466
 6178                             	.LLSDATTD1466:
 6179 0003 01                      		.byte	0x1
 6180 0004 20                      		.uleb128 .LLSDACSE1466-.LLSDACSB1466
 6181                             	.LLSDACSB1466:
 6182 0005 00                      		.uleb128 0
 6183 0006 00                      		.uleb128 0
 6184 0007 01                      		.uleb128 0x1
 6185 0008 00                      		.uleb128 0
 6186 0009 02                      		.uleb128 0x2
 6187 000a 00                      		.uleb128 0
 6188 000b 03                      		.uleb128 0x3
 6189 000c 00                      		.uleb128 0
 6190 000d 04                      		.uleb128 0x4
 6191 000e 00                      		.uleb128 0
 6192 000f 05                      		.uleb128 0x5
 6193 0010 00                      		.uleb128 0
 6194 0011 06                      		.uleb128 0x6
 6195 0012 01                      		.uleb128 0x1
 6196 0013 07                      		.uleb128 0x7
 6197 0014 01                      		.uleb128 0x1
 6198 0015 08                      		.uleb128 0x8
 6199 0016 00                      		.uleb128 0
 6200 0017 09                      		.uleb128 0x9
 6201 0018 01                      		.uleb128 0x1
 6202 0019 0A                      		.uleb128 0xa
 6203 001a 01                      		.uleb128 0x1
 6204 001b 0B                      		.uleb128 0xb
 6205 001c 00                      		.uleb128 0
 6206 001d 0C                      		.uleb128 0xc
 6207 001e 01                      		.uleb128 0x1
 6208 001f 0D                      		.uleb128 0xd
 6209 0020 01                      		.uleb128 0x1
 6210 0021 0E                      		.uleb128 0xe
 6211 0022 00                      		.uleb128 0
 6212 0023 0F                      		.uleb128 0xf
 6213 0024 00                      		.uleb128 0
 6214                             	.LLSDACSE1466:
 6215 0025 01                      		.byte	0x1
 6216 0026 00                      		.byte	0
 6217 0027 00                      		.balign 4
 6218 0028 00 00 00 00             		.long	0
 6219                             	.LLSDATT1466:
 6220                             		.section P,"ax"
 6222                             		.weak	__ZZN6UMouse6updateEvE9L_ENC_pre
 6223                             		.section	.bss._ZZN6UMouse6updateEvE9L_ENC_pre,"awG",@nobits,_ZZN6UMouse6updateEvE9L_ENC_pre,comdat
 6224                             		.balign 4
 6227                             	__ZZN6UMouse6updateEvE9L_ENC_pre:
 6228 0000 00 00                   		.zero	2
 6229                             		.weak	__ZZN6UMouse6updateEvE9L_ENC_now
 6230 0002 00 00                   		.section	.bss._ZZN6UMouse6updateEvE9L_ENC_now,"awG",@nobits,_ZZN6UMouse6updateEvE9L_ENC_now,comdat
 6231                             		.balign 4
 6234                             	__ZZN6UMouse6updateEvE9L_ENC_now:
 6235 0000 00 00                   		.zero	2
 6236                             		.weak	__ZZN6UMouse6updateEvE9R_ENC_pre
 6237 0002 00 00                   		.section	.bss._ZZN6UMouse6updateEvE9R_ENC_pre,"awG",@nobits,_ZZN6UMouse6updateEvE9R_ENC_pre,comdat
 6238                             		.balign 4
 6241                             	__ZZN6UMouse6updateEvE9R_ENC_pre:
 6242 0000 00 00                   		.zero	2
 6243                             		.weak	__ZZN6UMouse6updateEvE9R_ENC_now
 6244 0002 00 00                   		.section	.bss._ZZN6UMouse6updateEvE9R_ENC_now,"awG",@nobits,_ZZN6UMouse6updateEvE9R_ENC_now,comdat
 6245                             		.balign 4
 6248                             	__ZZN6UMouse6updateEvE9R_ENC_now:
 6249 0000 00 00                   		.zero	2
 6250                             		.weak	__ZZN9EventList11getInstanceEvE8instance
 6251 0002 00 00                   		.section	.bss._ZZN9EventList11getInstanceEvE8instance,"awG",@nobits,_ZZN9EventList11getInstanceEvE
 6252                             		.balign 4
 6255                             	__ZZN9EventList11getInstanceEvE8instance:
 6256 0000 00 00 00 00 00 00 00 00 		.zero	40
 6256      00 00 00 00 00 00 00 00 
 6256      00 00 00 00 00 00 00 00 
 6256      00 00 00 00 00 00 00 00 
 6256      00 00 00 00 00 00 00 00 
 6257                             		.weak	__ZZN7Gamepad11getInstanceEvE8instance
 6258                             		.section	.bss._ZZN7Gamepad11getInstanceEvE8instance,"awG",@nobits,_ZZN7Gamepad11getInstanceEvE8ins
 6259                             		.balign 4
 6262                             	__ZZN7Gamepad11getInstanceEvE8instance:
 6263 0000 00 00 00 00 00 00 00 00 		.zero	68
 6263      00 00 00 00 00 00 00 00 
 6263      00 00 00 00 00 00 00 00 
 6263      00 00 00 00 00 00 00 00 
 6263      00 00 00 00 00 00 00 00 
 6264                             		.weak	__ZZN10WallSensor11getInstanceEvE8instance
 6265                             		.section	.bss._ZZN10WallSensor11getInstanceEvE8instance,"awG",@nobits,_ZZN10WallSensor11getInstanc
 6266                             		.balign 4
 6269                             	__ZZN10WallSensor11getInstanceEvE8instance:
 6270 0000 00 00 00 00 00 00 00 00 		.zero	136
 6270      00 00 00 00 00 00 00 00 
 6270      00 00 00 00 00 00 00 00 
 6270      00 00 00 00 00 00 00 00 
 6270      00 00 00 00 00 00 00 00 
 6271                             		.weak	__ZZN5FcLed11getInstanceEvE8instance
 6272                             		.section	.bss._ZZN5FcLed11getInstanceEvE8instance,"awG",@nobits,_ZZN5FcLed11getInstanceEvE8instanc
 6273                             		.balign 4
 6276                             	__ZZN5FcLed11getInstanceEvE8instance:
 6277 0000 00 00 00 00 00 00 00 00 		.zero	36
 6277      00 00 00 00 00 00 00 00 
 6277      00 00 00 00 00 00 00 00 
 6277      00 00 00 00 00 00 00 00 
 6277      00 00 00 00 
 6278                             		.weak	__ZZN6TactSw11getInstanceEvE8instance
 6279                             		.section	.bss._ZZN6TactSw11getInstanceEvE8instance,"awG",@nobits,_ZZN6TactSw11getInstanceEvE8insta
 6280                             		.balign 4
 6283                             	__ZZN6TactSw11getInstanceEvE8instance:
 6284 0000 00 00                   		.zero	2
 6285                             		.weak	__ZZN9Icm20608G11getInstanceEvE8instance
 6286 0002 00 00                   		.section	.bss._ZZN9Icm20608G11getInstanceEvE8instance,"awG",@nobits,_ZZN9Icm20608G11getInstanceEvE
 6287                             		.balign 4
 6290                             	__ZZN9Icm20608G11getInstanceEvE8instance:
 6291 0000 00 00 00 00 00 00 00 00 		.zero	84
 6291      00 00 00 00 00 00 00 00 
 6291      00 00 00 00 00 00 00 00 
 6291      00 00 00 00 00 00 00 00 
 6291      00 00 00 00 00 00 00 00 
 6292                             		.local	__ZZ13timeInterruptE11countIntNum
 6293                             		.comm	__ZZ13timeInterruptE11countIntNum,8,4
 6294                             		.weak	__ZZN6UMouse11getInstanceEvE8instance
 6295                             		.section	.bss._ZZN6UMouse11getInstanceEvE8instance,"awG",@nobits,_ZZN6UMouse11getInstanceEvE8insta
 6296                             		.balign 4
 6299                             	__ZZN6UMouse11getInstanceEvE8instance:
 6300 0000 00 00 00 00 00 00 00 00 		.zero	2456
 6300      00 00 00 00 00 00 00 00 
 6300      00 00 00 00 00 00 00 00 
 6300      00 00 00 00 00 00 00 00 
 6300      00 00 00 00 00 00 00 00 
 6301                             		.weak	__ZZN7MPU925011getInstanceEvE8instance
 6302                             		.section	.bss._ZZN7MPU925011getInstanceEvE8instance,"awG",@nobits,_ZZN7MPU925011getInstanceEvE8ins
 6303                             		.balign 4
 6306                             	__ZZN7MPU925011getInstanceEvE8instance:
 6307 0000 00 00 00 00 00 00 00 00 		.zero	100
 6307      00 00 00 00 00 00 00 00 
 6307      00 00 00 00 00 00 00 00 
 6307      00 00 00 00 00 00 00 00 
 6307      00 00 00 00 00 00 00 00 
 6308                             		.local	__ZZ6__mainE11initialized
 6309                             		.comm	__ZZ6__mainE11initialized,4,4
 6310                             		.global	_temp_V
 6311                             		.section B,"w",@nobits
 6312                             		.p2align 2
 6313                             		.balign 2
 6316                             	_temp_V:
 6317 0000 00 00                   		.zero	2
 6318                             		.weak	__ZGVZN9EventList11getInstanceEvE8instance
 6319 0002 00 00                   		.section	.bss._ZGVZN9EventList11getInstanceEvE8instance,"awG",@nobits,_ZGVZN9EventList11getInstanc
 6320                             		.balign 4
 6323                             	__ZGVZN9EventList11getInstanceEvE8instance:
 6324 0000 00 00 00 00 00 00 00 00 		.zero	8
 6325                             		.weak	__ZGVZN7Gamepad11getInstanceEvE8instance
 6326                             		.section	.bss._ZGVZN7Gamepad11getInstanceEvE8instance,"awG",@nobits,_ZGVZN7Gamepad11getInstanceEvE
 6327                             		.balign 4
 6330                             	__ZGVZN7Gamepad11getInstanceEvE8instance:
 6331 0000 00 00 00 00 00 00 00 00 		.zero	8
 6332                             		.weak	__ZGVZN10WallSensor11getInstanceEvE8instance
 6333                             		.section	.bss._ZGVZN10WallSensor11getInstanceEvE8instance,"awG",@nobits,_ZGVZN10WallSensor11getIns
 6334                             		.balign 4
 6337                             	__ZGVZN10WallSensor11getInstanceEvE8instance:
 6338 0000 00 00 00 00 00 00 00 00 		.zero	8
 6339                             		.weak	__ZGVZN6UMouse11getInstanceEvE8instance
 6340                             		.section	.bss._ZGVZN6UMouse11getInstanceEvE8instance,"awG",@nobits,_ZGVZN6UMouse11getInstanceEvE8i
 6341                             		.balign 4
 6344                             	__ZGVZN6UMouse11getInstanceEvE8instance:
 6345 0000 00 00 00 00 00 00 00 00 		.zero	8
 6346                             		.weak	__ZGVZN5FcLed11getInstanceEvE8instance
 6347                             		.section	.bss._ZGVZN5FcLed11getInstanceEvE8instance,"awG",@nobits,_ZGVZN5FcLed11getInstanceEvE8ins
 6348                             		.balign 4
 6351                             	__ZGVZN5FcLed11getInstanceEvE8instance:
 6352 0000 00 00 00 00 00 00 00 00 		.zero	8
 6353                             		.weak	__ZGVZN6TactSw11getInstanceEvE8instance
 6354                             		.section	.bss._ZGVZN6TactSw11getInstanceEvE8instance,"awG",@nobits,_ZGVZN6TactSw11getInstanceEvE8i
 6355                             		.balign 4
 6358                             	__ZGVZN6TactSw11getInstanceEvE8instance:
 6359 0000 00 00 00 00 00 00 00 00 		.zero	8
 6360                             		.weak	__ZGVZN7MPU925011getInstanceEvE8instance
 6361                             		.section	.bss._ZGVZN7MPU925011getInstanceEvE8instance,"awG",@nobits,_ZGVZN7MPU925011getInstanceEvE
 6362                             		.balign 4
 6365                             	__ZGVZN7MPU925011getInstanceEvE8instance:
 6366 0000 00 00 00 00 00 00 00 00 		.zero	8
 6367                             		.weak	__ZGVZN9Icm20608G11getInstanceEvE8instance
 6368                             		.section	.bss._ZGVZN9Icm20608G11getInstanceEvE8instance,"awG",@nobits,_ZGVZN9Icm20608G11getInstanc
 6369                             		.balign 4
 6372                             	__ZGVZN9Icm20608G11getInstanceEvE8instance:
 6373 0000 00 00 00 00 00 00 00 00 		.zero	8
 6698                             	.Letext0:
 6699                             		.file 14 "C:\\Users\\ryota\\e2_studio\\workspace\\umouse\\src\\other/iodefine.h"
 6700                             		.file 15 "c:\\progra~2\\gccfor~2.201\\rx-elf\\rx-elf\\rx-elf\\include\\machine\\_default_types.h"
 6701                             		.file 16 "c:\\progra~2\\gccfor~2.201\\rx-elf\\rx-elf\\rx-elf\\include\\stdint.h"
 6702                             		.file 17 "c:\\progra~2\\gccfor~2.201\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\4.8.0.201602-gnurx\\ty
 6703                             		.file 18 "c:\\progra~2\\gccfor~2.201\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\4.8.0.201602-gnurx\\cw
 6704                             		.file 19 "c:\\progra~2\\gccfor~2.201\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\4.8.0.201602-gnurx\\rx
 6705                             		.file 20 "c:\\progra~2\\gccfor~2.201\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\4.8.0.201602-gnurx\\cs
 6706                             		.file 21 "c:\\progra~2\\gccfor~2.201\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\4.8.0.201602-gnurx\\cl
 6707                             		.file 22 "c:\\progra~2\\gccfor~2.201\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\4.8.0.201602-gnurx\\bi
 6708                             		.file 23 "c:\\progra~2\\gccfor~2.201\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\4.8.0.201602-gnurx\\in
 6709                             		.file 24 "c:\\progra~2\\gccfor~2.201\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\4.8.0.201602-gnurx\\bi
 6710                             		.file 25 "c:\\progra~2\\gccfor~2.201\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\4.8.0.201602-gnurx\\bi
 6711                             		.file 26 "c:\\progra~2\\gccfor~2.201\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\4.8.0.201602-gnurx\\ex
 6712                             		.file 27 "c:\\progra~2\\gccfor~2.201\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\4.8.0.201602-gnurx\\ex
 6713                             		.file 28 "c:\\progra~2\\gccfor~2.201\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\4.8.0.201602-gnurx\\de
 6714                             		.file 29 "c:\\progra~2\\gccfor~2.201\\rx-elf\\rx-elf\\lib\\gcc\\rx-elf\\4.8.0.201602-gnurx\\includ
 6715                             		.file 30 "c:\\progra~2\\gccfor~2.201\\rx-elf\\rx-elf\\rx-elf\\include\\sys\\lock.h"
 6716                             		.file 31 "c:\\progra~2\\gccfor~2.201\\rx-elf\\rx-elf\\rx-elf\\include\\sys\\_types.h"
 6717                             		.file 32 "c:\\progra~2\\gccfor~2.201\\rx-elf\\rx-elf\\rx-elf\\include\\sys\\reent.h"
 6718                             		.file 33 "c:\\progra~2\\gccfor~2.201\\rx-elf\\rx-elf\\lib\\gcc\\rx-elf\\4.8.0.201602-gnurx\\includ
 6719                             		.file 34 "c:\\progra~2\\gccfor~2.201\\rx-elf\\rx-elf\\rx-elf\\include\\wchar.h"
 6720                             		.file 35 "c:\\progra~2\\gccfor~2.201\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\4.8.0.201602-gnurx\\bi
 6721                             		.file 36 "c:\\progra~2\\gccfor~2.201\\rx-elf\\rx-elf\\rx-elf\\include\\locale.h"
 6722                             		.file 37 "C:\\Users\\ryota\\e2_studio\\workspace\\umouse\\src\\umouse_object/maze.h"
 6723                             		.file 38 "C:\\Users\\ryota\\e2_studio\\workspace\\umouse\\src\\robot_object/abcled.h"
 6724                             		.file 39 "c:\\progra~2\\gccfor~2.201\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\4.8.0.201602-gnurx\\ne
 6725                             		.file 40 "c:\\progra~2\\gccfor~2.201\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\4.8.0.201602-gnurx\\bi
 6726                             		.file 41 "C:\\Users\\ryota\\e2_studio\\workspace\\umouse\\src\\peripheral/clock.h"
 6727                             		.file 42 "C:\\Users\\ryota\\e2_studio\\workspace\\umouse\\src\\umouse_object/sound.h"
 6728                             		.file 43 "C:\\Users\\ryota\\e2_studio\\workspace\\umouse\\src\\peripheral/gpio.h"
 6729                             		.file 44 "C:\\Users\\ryota\\e2_studio\\workspace\\umouse\\src\\peripheral/uart.hpp"
 6730                             		.file 45 "C:\\Users\\ryota\\e2_studio\\workspace\\umouse\\src\\peripheral/timeInterrupt.hpp"
 6731                             		.file 46 "C:\\Users\\ryota\\e2_studio\\workspace\\umouse\\src\\peripheral/spi.h"
 6732                             		.file 47 "C:\\Users\\ryota\\e2_studio\\workspace\\umouse\\src\\peripheral/timer.h"
 6733                             		.file 48 "C:\\Users\\ryota\\e2_studio\\workspace\\umouse\\src\\peripheral/ad.h"
 6734                             		.file 49 "C:\\Users\\ryota\\e2_studio\\workspace\\umouse\\src\\peripheral/phaseCounting.h"
 6735                             		.file 50 "C:\\Users\\ryota\\e2_studio\\workspace\\umouse\\src\\peripheral/pwm.h"
 6736                             		.file 51 "C:\\Users\\ryota\\e2_studio\\workspace\\umouse\\src\\peripheral/da.h"
 6737                             		.file 52 "C:\\Users\\ryota\\e2_studio\\workspace\\umouse\\src\\mode/mode.h"
 6738                             		.file 53 "C:\\Users\\ryota\\e2_studio\\workspace\\umouse\\src\\utility/myUtil.h"
 6739                             		.file 54 "c:\\progra~2\\gccfor~2.201\\rx-elf\\rx-elf\\rx-elf\\include\\math.h"
 6740                             		.file 55 "<built-in>"
