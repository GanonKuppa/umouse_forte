   1                             		.file	"imu.cpp"
   2                             		.section P,"ax"
   3                             	.Ltext0:
   4                             		.global	__ZN7MPU92506whoAmIEv
   6                             	__ZN7MPU92506whoAmIEv:
   7                             	.LFB539:
   8                             		.file 1 "../src/umouse_object/imu.cpp"
   1:../src/umouse_object/imu.cpp **** 
   2:../src/umouse_object/imu.cpp **** #include <imu.hpp>
   3:../src/umouse_object/imu.cpp **** #include <stdint.h>
   4:../src/umouse_object/imu.cpp **** #include <uart.hpp>
   5:../src/umouse_object/imu.cpp **** 
   6:../src/umouse_object/imu.cpp **** #include "spi.h"
   7:../src/umouse_object/imu.cpp **** #include "iodefine.h"
   8:../src/umouse_object/imu.cpp **** #include "timer.h"
   9:../src/umouse_object/imu.cpp **** #include "myUtil.h"
  10:../src/umouse_object/imu.cpp **** #include <deque>
  11:../src/umouse_object/imu.cpp **** 
  12:../src/umouse_object/imu.cpp **** static const uint8_t MPU9250_REG_WHOAMI   = 0x75;
  13:../src/umouse_object/imu.cpp **** static const uint8_t ICM20608G_REG_WHOAMI = 0x75;
  14:../src/umouse_object/imu.cpp **** 
  15:../src/umouse_object/imu.cpp **** //https://developer.mbed.org/users/kylongmu/code/MPU9250_SPI/file/084e8ba240c1/MPU9250.cpp
  16:../src/umouse_object/imu.cpp **** //https://github.com/fenrir-naru/ninja-scan-light/blob/master/firmware/mpu9250.c
  17:../src/umouse_object/imu.cpp **** 
  18:../src/umouse_object/imu.cpp **** using std::deque;
  19:../src/umouse_object/imu.cpp **** 
  20:../src/umouse_object/imu.cpp **** 
  21:../src/umouse_object/imu.cpp **** 
  22:../src/umouse_object/imu.cpp **** uint8_t MPU9250::whoAmI(void){
   9                             		.loc 1 22 0
  10                             	.LVL0:
  11 0000 60 80                   		sub	#8, r0
  12                             	.LCFI0:
  13                             	.LVL1:
  14                             	.LBB134:
  15                             	.LBB135:
  23:../src/umouse_object/imu.cpp **** 	return readReg(MPU9250_REG_WHOAMI);
  24:../src/umouse_object/imu.cpp **** }
  25:../src/umouse_object/imu.cpp **** 
  26:../src/umouse_object/imu.cpp **** void MPU9250::writeReg(uint8_t adress, uint8_t data){
  27:../src/umouse_object/imu.cpp **** 	uint8_t sendBuf[2];
  28:../src/umouse_object/imu.cpp **** 	uint8_t recvBuf[2];
  29:../src/umouse_object/imu.cpp **** 
  30:../src/umouse_object/imu.cpp **** 	sendBuf[0] = adress;
  31:../src/umouse_object/imu.cpp **** 	sendBuf[1] = data;
  32:../src/umouse_object/imu.cpp **** 	communicateNbyteRSPI1(sendBuf, recvBuf, 2);
  33:../src/umouse_object/imu.cpp **** }
  34:../src/umouse_object/imu.cpp **** 
  35:../src/umouse_object/imu.cpp **** uint8_t MPU9250::readReg(uint8_t adress){
  36:../src/umouse_object/imu.cpp **** 	uint8_t sendBuf[2];
  37:../src/umouse_object/imu.cpp **** 	uint8_t recvBuf[2];
  38:../src/umouse_object/imu.cpp **** 
  39:../src/umouse_object/imu.cpp **** 	sendBuf[0] = READ_FLAG | adress;
  40:../src/umouse_object/imu.cpp **** 	sendBuf[1] = 0x00;
  41:../src/umouse_object/imu.cpp **** 	communicateNbyteRSPI1(sendBuf, recvBuf, 2);
  16                             		.loc 1 41 0
  17 0002 71 01 04                		add	#4, r0, r1
  18                             	.LVL2:
  19 0005 EF 02                   		mov.L	r0, r2
  20 0007 66 23                   		mov	#2, r3
  39:../src/umouse_object/imu.cpp **** 	sendBuf[1] = 0x00;
  21                             		.loc 1 39 0
  22 0009 F9 04 04 F5             		mov.B	#-11, 4[r0]
  40:../src/umouse_object/imu.cpp **** 	communicateNbyteRSPI1(sendBuf, recvBuf, 2);
  23                             		.loc 1 40 0
  24 000d 3C 05 00                		mov.B	#0, 5[r0]
  25                             		.loc 1 41 0
  26 0010 05 00 00 00             		bsr	__Z21communicateNbyteRSPI1PhS_h
  27                             	.LVL3:
  28                             	.LBE135:
  29                             	.LBE134:
  24:../src/umouse_object/imu.cpp **** 
  30                             		.loc 1 24 0
  31 0014 B0 09                   		movu.B	1[r0], r1
  32 0016 67 02                   		rtsd	#8
  33                             	.LFE539:
  35                             		.global	__ZN7MPU92508writeRegEhh
  37                             	__ZN7MPU92508writeRegEhh:
  38                             	.LFB540:
  26:../src/umouse_object/imu.cpp **** 	uint8_t sendBuf[2];
  39                             		.loc 1 26 0
  40                             	.LVL4:
  41 0018 60 80                   		sub	#8, r0
  42                             	.LCFI1:
  43                             	.LBB136:
  30:../src/umouse_object/imu.cpp **** 	sendBuf[1] = data;
  44                             		.loc 1 30 0
  45 001a 81 02                   		mov.B	r2, 4[r0]
  31:../src/umouse_object/imu.cpp **** 	communicateNbyteRSPI1(sendBuf, recvBuf, 2);
  46                             		.loc 1 31 0
  47 001c 81 0B                   		mov.B	r3, 5[r0]
  32:../src/umouse_object/imu.cpp **** }
  48                             		.loc 1 32 0
  49 001e 71 01 04                		add	#4, r0, r1
  50                             	.LVL5:
  51 0021 EF 02                   		mov.L	r0, r2
  52                             	.LVL6:
  53 0023 66 23                   		mov	#2, r3
  54                             	.LVL7:
  55 0025 05 00 00 00             		bsr	__Z21communicateNbyteRSPI1PhS_h
  56                             	.LVL8:
  57                             	.LBE136:
  33:../src/umouse_object/imu.cpp **** 
  58                             		.loc 1 33 0
  59 0029 67 02                   		rtsd	#8
  60                             	.LFE540:
  62                             		.global	__ZN7MPU92507readRegEh
  64                             	__ZN7MPU92507readRegEh:
  65                             	.LFB541:
  35:../src/umouse_object/imu.cpp **** 	uint8_t sendBuf[2];
  66                             		.loc 1 35 0
  67                             	.LVL9:
  68 002b 60 80                   		sub	#8, r0
  69                             	.LCFI2:
  70                             	.LBB137:
  39:../src/umouse_object/imu.cpp **** 	sendBuf[1] = 0x00;
  71                             		.loc 1 39 0
  72 002d FB E6 80                		mov.L	#0xffffff80, r14
  73 0030 57 2E                   		or	r2, r14
  74                             		.loc 1 41 0
  75 0032 71 01 04                		add	#4, r0, r1
  76                             	.LVL10:
  77 0035 EF 02                   		mov.L	r0, r2
  78                             	.LVL11:
  79 0037 66 23                   		mov	#2, r3
  39:../src/umouse_object/imu.cpp **** 	sendBuf[1] = 0x00;
  80                             		.loc 1 39 0
  81 0039 C7 0E 04                		mov.B	r14, 4[r0]
  40:../src/umouse_object/imu.cpp **** 	communicateNbyteRSPI1(sendBuf, recvBuf, 2);
  82                             		.loc 1 40 0
  83 003c 3C 05 00                		mov.B	#0, 5[r0]
  84                             		.loc 1 41 0
  85 003f 05 00 00 00             		bsr	__Z21communicateNbyteRSPI1PhS_h
  86                             	.LVL12:
  87                             	.LBE137:
  42:../src/umouse_object/imu.cpp **** 	return recvBuf[1];
  43:../src/umouse_object/imu.cpp **** }
  88                             		.loc 1 43 0
  89 0043 B0 09                   		movu.B	1[r0], r1
  90 0045 67 02                   		rtsd	#8
  91                             	.LFE541:
  93                             		.global	__ZN7MPU92504initEv
  95                             	__ZN7MPU92504initEv:
  96                             	.LFB542:
  44:../src/umouse_object/imu.cpp **** 
  45:../src/umouse_object/imu.cpp **** 
  46:../src/umouse_object/imu.cpp **** 
  47:../src/umouse_object/imu.cpp **** void MPU9250::init(){
  97                             		.loc 1 47 0
  98                             	.LVL13:
  99 0047 60 80                   		sub	#8, r0
 100                             	.LCFI3:
 101                             	.LVL14:
 102                             	.LBB138:
 103                             	.LBB139:
  32:../src/umouse_object/imu.cpp **** }
 104                             		.loc 1 32 0
 105 0049 EF 02                   		mov.L	r0, r2
 106 004b 66 23                   		mov	#2, r3
 107 004d 66 41                   		mov.L	#4, r1
 108                             	.LVL15:
 109 004f 4B 01                   		add	r0, r1
  30:../src/umouse_object/imu.cpp **** 	sendBuf[1] = data;
 110                             		.loc 1 30 0
 111 0051 3C 04 6B                		mov.B	#0x6b, 4[r0]
  31:../src/umouse_object/imu.cpp **** 	communicateNbyteRSPI1(sendBuf, recvBuf, 2);
 112                             		.loc 1 31 0
 113 0054 F9 04 05 80             		mov.B	#0xffffff80, 5[r0]
  32:../src/umouse_object/imu.cpp **** }
 114                             		.loc 1 32 0
 115 0058 05 00 00 00             		bsr	__Z21communicateNbyteRSPI1PhS_h
 116                             	.LVL16:
 117                             	.LBE139:
 118                             	.LBE138:
  48:../src/umouse_object/imu.cpp **** 
  49:../src/umouse_object/imu.cpp **** 	writeReg(MPUREG_PWR_MGMT_1,0x80);
  50:../src/umouse_object/imu.cpp **** 	waitmsec(10);
 119                             		.loc 1 50 0
 120 005c 66 A1                   		mov.L	#10, r1
 121 005e 05 00 00 00             		bsr	__Z8waitmsecm
 122                             	.LVL17:
 123                             	.LBB140:
 124                             	.LBB141:
  32:../src/umouse_object/imu.cpp **** }
 125                             		.loc 1 32 0
 126 0062 EF 02                   		mov.L	r0, r2
 127 0064 66 23                   		mov	#2, r3
 128 0066 66 41                   		mov.L	#4, r1
 129 0068 4B 01                   		add	r0, r1
  30:../src/umouse_object/imu.cpp **** 	sendBuf[1] = data;
 130                             		.loc 1 30 0
 131 006a 3C 04 6B                		mov.B	#0x6b, 4[r0]
  31:../src/umouse_object/imu.cpp **** 	communicateNbyteRSPI1(sendBuf, recvBuf, 2);
 132                             		.loc 1 31 0
 133 006d 3C 05 00                		mov.B	#0, 5[r0]
  32:../src/umouse_object/imu.cpp **** }
 134                             		.loc 1 32 0
 135 0070 05 00 00 00             		bsr	__Z21communicateNbyteRSPI1PhS_h
 136                             	.LVL18:
 137                             	.LBE141:
 138                             	.LBE140:
  51:../src/umouse_object/imu.cpp **** 	writeReg(MPUREG_PWR_MGMT_1,0x00);
  52:../src/umouse_object/imu.cpp **** 	waitmsec(10);
 139                             		.loc 1 52 0
 140 0074 66 A1                   		mov.L	#10, r1
 141 0076 05 00 00 00             		bsr	__Z8waitmsecm
 142                             	.LVL19:
 143                             	.LBB142:
 144                             	.LBB143:
  32:../src/umouse_object/imu.cpp **** }
 145                             		.loc 1 32 0
 146 007a EF 02                   		mov.L	r0, r2
 147 007c 66 23                   		mov	#2, r3
 148 007e 66 41                   		mov.L	#4, r1
 149 0080 4B 01                   		add	r0, r1
  30:../src/umouse_object/imu.cpp **** 	sendBuf[1] = data;
 150                             		.loc 1 30 0
 151 0082 3C 04 6C                		mov.B	#0x6c, 4[r0]
  31:../src/umouse_object/imu.cpp **** 	communicateNbyteRSPI1(sendBuf, recvBuf, 2);
 152                             		.loc 1 31 0
 153 0085 3C 05 00                		mov.B	#0, 5[r0]
  32:../src/umouse_object/imu.cpp **** }
 154                             		.loc 1 32 0
 155 0088 05 00 00 00             		bsr	__Z21communicateNbyteRSPI1PhS_h
 156                             	.LVL20:
 157                             	.LBE143:
 158                             	.LBE142:
  53:../src/umouse_object/imu.cpp **** 	writeReg(MPUREG_PWR_MGMT_2,0x00);
  54:../src/umouse_object/imu.cpp **** 	waitmsec(10);
 159                             		.loc 1 54 0
 160 008c 66 A1                   		mov.L	#10, r1
 161 008e 05 00 00 00             		bsr	__Z8waitmsecm
 162                             	.LVL21:
 163                             	.LBB144:
 164                             	.LBB145:
  32:../src/umouse_object/imu.cpp **** }
 165                             		.loc 1 32 0
 166 0092 EF 02                   		mov.L	r0, r2
 167 0094 66 23                   		mov	#2, r3
 168 0096 66 41                   		mov.L	#4, r1
 169 0098 4B 01                   		add	r0, r1
  30:../src/umouse_object/imu.cpp **** 	sendBuf[1] = data;
 170                             		.loc 1 30 0
 171 009a 3C 04 1A                		mov.B	#26, 4[r0]
  31:../src/umouse_object/imu.cpp **** 	communicateNbyteRSPI1(sendBuf, recvBuf, 2);
 172                             		.loc 1 31 0
 173 009d 3C 05 04                		mov.B	#4, 5[r0]
  32:../src/umouse_object/imu.cpp **** }
 174                             		.loc 1 32 0
 175 00a0 05 00 00 00             		bsr	__Z21communicateNbyteRSPI1PhS_h
 176                             	.LVL22:
 177                             	.LBE145:
 178                             	.LBE144:
  55:../src/umouse_object/imu.cpp **** 
  56:../src/umouse_object/imu.cpp **** 	//55 INT Pin / Bypass Enable Configuration
  57:../src/umouse_object/imu.cpp **** 	//writeReg(0x37, 0x02);
  58:../src/umouse_object/imu.cpp **** 	//waitmsec(10);
  59:../src/umouse_object/imu.cpp **** 
  60:../src/umouse_object/imu.cpp **** 
  61:../src/umouse_object/imu.cpp **** 	//Register 26 – Configuration
  62:../src/umouse_object/imu.cpp **** 	//writeReg(0x1A, 0x07);
  63:../src/umouse_object/imu.cpp **** 	//waitmsec(10);
  64:../src/umouse_object/imu.cpp **** 	//Register 26 – Configuration
  65:../src/umouse_object/imu.cpp **** 	writeReg(0x1A, 0x04);
  66:../src/umouse_object/imu.cpp **** 	waitmsec(10);
 179                             		.loc 1 66 0
 180 00a4 66 A1                   		mov.L	#10, r1
 181 00a6 05 00 00 00             		bsr	__Z8waitmsecm
 182                             	.LVL23:
 183                             	.LBB146:
 184                             	.LBB147:
  32:../src/umouse_object/imu.cpp **** }
 185                             		.loc 1 32 0
 186 00aa EF 02                   		mov.L	r0, r2
 187 00ac 66 23                   		mov	#2, r3
 188 00ae 66 41                   		mov.L	#4, r1
 189 00b0 4B 01                   		add	r0, r1
  30:../src/umouse_object/imu.cpp **** 	sendBuf[1] = data;
 190                             		.loc 1 30 0
 191 00b2 3C 04 1B                		mov.B	#27, 4[r0]
  31:../src/umouse_object/imu.cpp **** 	communicateNbyteRSPI1(sendBuf, recvBuf, 2);
 192                             		.loc 1 31 0
 193 00b5 3C 05 18                		mov.B	#24, 5[r0]
  32:../src/umouse_object/imu.cpp **** }
 194                             		.loc 1 32 0
 195 00b8 05 00 00 00             		bsr	__Z21communicateNbyteRSPI1PhS_h
 196                             	.LVL24:
 197                             	.LBE147:
 198                             	.LBE146:
  67:../src/umouse_object/imu.cpp **** 
  68:../src/umouse_object/imu.cpp **** 	//range gyro
  69:../src/umouse_object/imu.cpp **** 	writeReg(0x1B, 0b00011000);
  70:../src/umouse_object/imu.cpp **** 	waitmsec(10);
 199                             		.loc 1 70 0
 200 00bc 66 A1                   		mov.L	#10, r1
 201 00be 05 00 00 00             		bsr	__Z8waitmsecm
 202                             	.LVL25:
 203                             	.LBB148:
 204                             	.LBB149:
  32:../src/umouse_object/imu.cpp **** }
 205                             		.loc 1 32 0
 206 00c2 EF 02                   		mov.L	r0, r2
 207 00c4 66 23                   		mov	#2, r3
 208 00c6 66 41                   		mov.L	#4, r1
 209 00c8 4B 01                   		add	r0, r1
  30:../src/umouse_object/imu.cpp **** 	sendBuf[1] = data;
 210                             		.loc 1 30 0
 211 00ca 3C 04 1C                		mov.B	#28, 4[r0]
  31:../src/umouse_object/imu.cpp **** 	communicateNbyteRSPI1(sendBuf, recvBuf, 2);
 212                             		.loc 1 31 0
 213 00cd 3C 05 00                		mov.B	#0, 5[r0]
  32:../src/umouse_object/imu.cpp **** }
 214                             		.loc 1 32 0
 215 00d0 05 00 00 00             		bsr	__Z21communicateNbyteRSPI1PhS_h
 216                             	.LVL26:
 217                             	.LBE149:
 218                             	.LBE148:
  71:../src/umouse_object/imu.cpp **** 
  72:../src/umouse_object/imu.cpp **** 	//range acc
  73:../src/umouse_object/imu.cpp **** 	writeReg(0x1C, 0x00); //-2g to 2g
  74:../src/umouse_object/imu.cpp **** 	waitmsec(10);
 219                             		.loc 1 74 0
 220 00d4 66 A1                   		mov.L	#10, r1
 221 00d6 05 00 00 00             		bsr	__Z8waitmsecm
 222                             	.LVL27:
 223                             	.LBB150:
 224                             	.LBB151:
  32:../src/umouse_object/imu.cpp **** }
 225                             		.loc 1 32 0
 226 00da EF 02                   		mov.L	r0, r2
 227 00dc 66 23                   		mov	#2, r3
 228 00de 66 41                   		mov.L	#4, r1
 229 00e0 4B 01                   		add	r0, r1
  30:../src/umouse_object/imu.cpp **** 	sendBuf[1] = data;
 230                             		.loc 1 30 0
 231 00e2 3C 04 1D                		mov.B	#29, 4[r0]
  31:../src/umouse_object/imu.cpp **** 	communicateNbyteRSPI1(sendBuf, recvBuf, 2);
 232                             		.loc 1 31 0
 233 00e5 3C 05 0C                		mov.B	#12, 5[r0]
  32:../src/umouse_object/imu.cpp **** }
 234                             		.loc 1 32 0
 235 00e8 05 00 00 00             		bsr	__Z21communicateNbyteRSPI1PhS_h
 236                             	.LVL28:
 237                             	.LBE151:
 238                             	.LBE150:
  75:../src/umouse_object/imu.cpp **** 
  76:../src/umouse_object/imu.cpp ****     //lpf acc
  77:../src/umouse_object/imu.cpp ****     writeReg(0x1D, 0x0C); //LPC  20Hz
  78:../src/umouse_object/imu.cpp ****     waitmsec(10);
 239                             		.loc 1 78 0
 240 00ec 66 A1                   		mov.L	#10, r1
 241 00ee 05 00 00 00             		bsr	__Z8waitmsecm
 242                             	.LVL29:
  79:../src/umouse_object/imu.cpp **** 
  80:../src/umouse_object/imu.cpp **** 
  81:../src/umouse_object/imu.cpp **** 	waitmsec(10);
 243                             		.loc 1 81 0
 244 00f2 66 A1                   		mov.L	#10, r1
 245 00f4 05 00 00 00             		bsr	__Z8waitmsecm
 246                             	.LVL30:
  82:../src/umouse_object/imu.cpp **** 	//書き込み時と読み出し時でSPIの通信速度が異なる
  83:../src/umouse_object/imu.cpp **** 	RSPI1.SPBR = 1;
 247                             		.loc 1 83 0
 248 00f8 FB EE 20 01 0D          		mov.L	#0xd0120, r14
 249 00fd F9 E4 0A 01             		mov.B	#1, 10[r14]
  84:../src/umouse_object/imu.cpp **** 
  85:../src/umouse_object/imu.cpp **** }
 250                             		.loc 1 85 0
 251 0101 67 02                   		rtsd	#8
 252                             	.LFE542:
 254                             		.global	__ZN7MPU92506updateEv
 256                             	__ZN7MPU92506updateEv:
 257                             	.LFB543:
  86:../src/umouse_object/imu.cpp **** 
  87:../src/umouse_object/imu.cpp **** void MPU9250::update(){
 258                             		.loc 1 87 0
 259                             	.LVL31:
 260 0103 6E 6D                   		pushm	r6-r13
 261                             	.LCFI4:
 262 0105 71 00 F0                		add	#-16, r0
 263                             	.LCFI5:
 264                             		.loc 1 87 0
 265 0108 EF 17                   		mov.L	r1, r7
 266                             	.LVL32:
 267                             	.LBB152:
 268                             	.LBB153:
 269                             	.LBB154:
  41:../src/umouse_object/imu.cpp **** 	return recvBuf[1];
 270                             		.loc 1 41 0
 271 010a EF 02                   		mov.L	r0, r2
 272 010c 66 41                   		mov.L	#4, r1
 273                             	.LVL33:
 274 010e 4B 01                   		add	r0, r1
 275 0110 66 23                   		mov	#2, r3
  39:../src/umouse_object/imu.cpp **** 	sendBuf[1] = 0x00;
 276                             		.loc 1 39 0
 277 0112 F9 04 04 BB             		mov.B	#0xffffffbb, 4[r0]
  40:../src/umouse_object/imu.cpp **** 	communicateNbyteRSPI1(sendBuf, recvBuf, 2);
 278                             		.loc 1 40 0
 279 0116 3C 05 00                		mov.B	#0, 5[r0]
  41:../src/umouse_object/imu.cpp **** 	return recvBuf[1];
 280                             		.loc 1 41 0
 281 0119 05 00 00 00             		bsr	__Z21communicateNbyteRSPI1PhS_h
 282                             	.LVL34:
 283                             	.LBE154:
 284                             	.LBE153:
 285                             	.LBB156:
 286                             	.LBB157:
 287 011d 66 41                   		mov.L	#4, r1
 288 011f 4B 01                   		add	r0, r1
 289 0121 EF 02                   		mov.L	r0, r2
 290 0123 66 23                   		mov	#2, r3
 291                             	.LBE157:
 292                             	.LBE156:
 293                             	.LBB160:
 294                             	.LBB155:
  42:../src/umouse_object/imu.cpp **** }
 295                             		.loc 1 42 0
 296 0125 CD 08 01                		mov.B	1[r0], r8
 297                             	.LVL35:
 298                             	.LBE155:
 299                             	.LBE160:
 300                             	.LBB161:
 301                             	.LBB158:
  39:../src/umouse_object/imu.cpp **** 	sendBuf[1] = 0x00;
 302                             		.loc 1 39 0
 303 0128 F9 04 04 BC             		mov.B	#0xffffffbc, 4[r0]
  40:../src/umouse_object/imu.cpp **** 	communicateNbyteRSPI1(sendBuf, recvBuf, 2);
 304                             		.loc 1 40 0
 305 012c 3C 05 00                		mov.B	#0, 5[r0]
  41:../src/umouse_object/imu.cpp **** 	return recvBuf[1];
 306                             		.loc 1 41 0
 307 012f 05 00 00 00             		bsr	__Z21communicateNbyteRSPI1PhS_h
 308                             	.LVL36:
 309                             	.LBE158:
 310                             	.LBE161:
 311                             	.LBB162:
 312                             	.LBB163:
 313 0133 66 41                   		mov.L	#4, r1
 314 0135 4B 01                   		add	r0, r1
 315 0137 EF 02                   		mov.L	r0, r2
 316 0139 66 23                   		mov	#2, r3
 317                             	.LBE163:
 318                             	.LBE162:
 319                             	.LBB166:
 320                             	.LBB159:
  42:../src/umouse_object/imu.cpp **** }
 321                             		.loc 1 42 0
 322 013b 88 0E                   		mov.B	1[r0], r6
 323                             	.LVL37:
 324                             	.LBE159:
 325                             	.LBE166:
 326                             	.LBB167:
 327                             	.LBB164:
  39:../src/umouse_object/imu.cpp **** 	sendBuf[1] = 0x00;
 328                             		.loc 1 39 0
 329 013d F9 04 04 BD             		mov.B	#0xffffffbd, 4[r0]
  40:../src/umouse_object/imu.cpp **** 	communicateNbyteRSPI1(sendBuf, recvBuf, 2);
 330                             		.loc 1 40 0
 331 0141 3C 05 00                		mov.B	#0, 5[r0]
  41:../src/umouse_object/imu.cpp **** 	return recvBuf[1];
 332                             		.loc 1 41 0
 333 0144 05 00 00 00             		bsr	__Z21communicateNbyteRSPI1PhS_h
 334                             	.LVL38:
 335                             	.LBE164:
 336                             	.LBE167:
 337                             	.LBB168:
 338                             	.LBB169:
 339 0148 66 41                   		mov.L	#4, r1
 340 014a 4B 01                   		add	r0, r1
 341 014c EF 02                   		mov.L	r0, r2
 342 014e 66 23                   		mov	#2, r3
 343                             	.LBE169:
 344                             	.LBE168:
 345                             	.LBB172:
 346                             	.LBB165:
  42:../src/umouse_object/imu.cpp **** }
 347                             		.loc 1 42 0
 348 0150 CD 0D 01                		mov.B	1[r0], r13
 349                             	.LVL39:
 350                             	.LBE165:
 351                             	.LBE172:
 352                             	.LBB173:
 353                             	.LBB170:
  39:../src/umouse_object/imu.cpp **** 	sendBuf[1] = 0x00;
 354                             		.loc 1 39 0
 355 0153 F9 04 04 BE             		mov.B	#0xffffffbe, 4[r0]
  40:../src/umouse_object/imu.cpp **** 	communicateNbyteRSPI1(sendBuf, recvBuf, 2);
 356                             		.loc 1 40 0
 357 0157 3C 05 00                		mov.B	#0, 5[r0]
  41:../src/umouse_object/imu.cpp **** 	return recvBuf[1];
 358                             		.loc 1 41 0
 359 015a 05 00 00 00             		bsr	__Z21communicateNbyteRSPI1PhS_h
 360                             	.LVL40:
 361                             	.LBE170:
 362                             	.LBE173:
 363                             	.LBB174:
 364                             	.LBB175:
 365 015e 66 41                   		mov.L	#4, r1
 366 0160 4B 01                   		add	r0, r1
 367 0162 EF 02                   		mov.L	r0, r2
 368 0164 66 23                   		mov	#2, r3
 369                             	.LBE175:
 370                             	.LBE174:
 371                             	.LBB178:
 372                             	.LBB171:
  42:../src/umouse_object/imu.cpp **** }
 373                             		.loc 1 42 0
 374 0166 CD 09 01                		mov.B	1[r0], r9
 375                             	.LVL41:
 376                             	.LBE171:
 377                             	.LBE178:
 378                             	.LBB179:
 379                             	.LBB176:
  39:../src/umouse_object/imu.cpp **** 	sendBuf[1] = 0x00;
 380                             		.loc 1 39 0
 381 0169 F9 04 04 BF             		mov.B	#0xffffffbf, 4[r0]
  40:../src/umouse_object/imu.cpp **** 	communicateNbyteRSPI1(sendBuf, recvBuf, 2);
 382                             		.loc 1 40 0
 383 016d 3C 05 00                		mov.B	#0, 5[r0]
  41:../src/umouse_object/imu.cpp **** 	return recvBuf[1];
 384                             		.loc 1 41 0
 385 0170 05 00 00 00             		bsr	__Z21communicateNbyteRSPI1PhS_h
 386                             	.LVL42:
 387                             	.LBE176:
 388                             	.LBE179:
 389                             	.LBB180:
 390                             	.LBB181:
 391 0174 66 41                   		mov.L	#4, r1
 392 0176 4B 01                   		add	r0, r1
 393 0178 EF 02                   		mov.L	r0, r2
 394 017a 66 23                   		mov	#2, r3
 395                             	.LBE181:
 396                             	.LBE180:
 397                             	.LBB184:
 398                             	.LBB177:
  42:../src/umouse_object/imu.cpp **** }
 399                             		.loc 1 42 0
 400 017c CD 0B 01                		mov.B	1[r0], r11
 401                             	.LVL43:
 402                             	.LBE177:
 403                             	.LBE184:
 404                             	.LBB185:
 405                             	.LBB182:
  39:../src/umouse_object/imu.cpp **** 	sendBuf[1] = 0x00;
 406                             		.loc 1 39 0
 407 017f F9 04 04 C0             		mov.B	#-64, 4[r0]
  40:../src/umouse_object/imu.cpp **** 	communicateNbyteRSPI1(sendBuf, recvBuf, 2);
 408                             		.loc 1 40 0
 409 0183 3C 05 00                		mov.B	#0, 5[r0]
  41:../src/umouse_object/imu.cpp **** 	return recvBuf[1];
 410                             		.loc 1 41 0
 411 0186 05 00 00 00             		bsr	__Z21communicateNbyteRSPI1PhS_h
 412                             	.LVL44:
 413                             	.LBE182:
 414                             	.LBE185:
 415                             	.LBB186:
 416                             	.LBB187:
 417 018a 66 41                   		mov.L	#4, r1
 418 018c 4B 01                   		add	r0, r1
 419 018e EF 02                   		mov.L	r0, r2
 420 0190 66 23                   		mov	#2, r3
 421                             	.LBE187:
 422                             	.LBE186:
 423                             	.LBB190:
 424                             	.LBB183:
  42:../src/umouse_object/imu.cpp **** }
 425                             		.loc 1 42 0
 426 0192 CD 0C 01                		mov.B	1[r0], r12
 427                             	.LVL45:
 428                             	.LBE183:
 429                             	.LBE190:
 430                             	.LBB191:
 431                             	.LBB188:
  39:../src/umouse_object/imu.cpp **** 	sendBuf[1] = 0x00;
 432                             		.loc 1 39 0
 433 0195 F9 04 04 C1             		mov.B	#-63, 4[r0]
  40:../src/umouse_object/imu.cpp **** 	communicateNbyteRSPI1(sendBuf, recvBuf, 2);
 434                             		.loc 1 40 0
 435 0199 3C 05 00                		mov.B	#0, 5[r0]
  41:../src/umouse_object/imu.cpp **** 	return recvBuf[1];
 436                             		.loc 1 41 0
 437 019c 05 00 00 00             		bsr	__Z21communicateNbyteRSPI1PhS_h
 438                             	.LVL46:
 439                             	.LBE188:
 440                             	.LBE191:
 441                             	.LBB192:
 442                             	.LBB193:
 443 01a0 66 41                   		mov.L	#4, r1
 444 01a2 4B 01                   		add	r0, r1
 445 01a4 EF 02                   		mov.L	r0, r2
 446 01a6 66 23                   		mov	#2, r3
 447                             	.LBE193:
 448                             	.LBE192:
 449                             	.LBB196:
 450                             	.LBB189:
  42:../src/umouse_object/imu.cpp **** }
 451                             		.loc 1 42 0
 452 01a8 C5 00 01 08             		mov.B	1[r0], 8[r0]
 453                             	.LVL47:
 454                             	.LBE189:
 455                             	.LBE196:
 456                             	.LBB197:
 457                             	.LBB194:
  39:../src/umouse_object/imu.cpp **** 	sendBuf[1] = 0x00;
 458                             		.loc 1 39 0
 459 01ac F9 04 04 C2             		mov.B	#-62, 4[r0]
  40:../src/umouse_object/imu.cpp **** 	communicateNbyteRSPI1(sendBuf, recvBuf, 2);
 460                             		.loc 1 40 0
 461 01b0 3C 05 00                		mov.B	#0, 5[r0]
  41:../src/umouse_object/imu.cpp **** 	return recvBuf[1];
 462                             		.loc 1 41 0
 463 01b3 05 00 00 00             		bsr	__Z21communicateNbyteRSPI1PhS_h
 464                             	.LVL48:
 465                             	.LBE194:
 466                             	.LBE197:
 467                             	.LBB198:
 468                             	.LBB199:
 469 01b7 66 41                   		mov.L	#4, r1
 470 01b9 4B 01                   		add	r0, r1
 471 01bb EF 02                   		mov.L	r0, r2
 472 01bd 66 23                   		mov	#2, r3
 473                             	.LBE199:
 474                             	.LBE198:
 475                             	.LBB202:
 476                             	.LBB195:
  42:../src/umouse_object/imu.cpp **** }
 477                             		.loc 1 42 0
 478 01bf C5 00 01 09             		mov.B	1[r0], 9[r0]
 479                             	.LVL49:
 480                             	.LBE195:
 481                             	.LBE202:
 482                             	.LBB203:
 483                             	.LBB200:
  39:../src/umouse_object/imu.cpp **** 	sendBuf[1] = 0x00;
 484                             		.loc 1 39 0
 485 01c3 F9 04 04 C3             		mov.B	#-61, 4[r0]
  40:../src/umouse_object/imu.cpp **** 	communicateNbyteRSPI1(sendBuf, recvBuf, 2);
 486                             		.loc 1 40 0
 487 01c7 3C 05 00                		mov.B	#0, 5[r0]
  41:../src/umouse_object/imu.cpp **** 	return recvBuf[1];
 488                             		.loc 1 41 0
 489 01ca 05 00 00 00             		bsr	__Z21communicateNbyteRSPI1PhS_h
 490                             	.LVL50:
 491                             	.LBE200:
 492                             	.LBE203:
 493                             	.LBB204:
 494                             	.LBB205:
 495 01ce 66 41                   		mov.L	#4, r1
 496 01d0 4B 01                   		add	r0, r1
 497 01d2 EF 02                   		mov.L	r0, r2
 498 01d4 66 23                   		mov	#2, r3
 499                             	.LBE205:
 500                             	.LBE204:
 501                             	.LBB208:
 502                             	.LBB201:
  42:../src/umouse_object/imu.cpp **** }
 503                             		.loc 1 42 0
 504 01d6 C5 00 01 0A             		mov.B	1[r0], 10[r0]
 505                             	.LVL51:
 506                             	.LBE201:
 507                             	.LBE208:
 508                             	.LBB209:
 509                             	.LBB206:
  39:../src/umouse_object/imu.cpp **** 	sendBuf[1] = 0x00;
 510                             		.loc 1 39 0
 511 01da F9 04 04 C4             		mov.B	#-60, 4[r0]
  40:../src/umouse_object/imu.cpp **** 	communicateNbyteRSPI1(sendBuf, recvBuf, 2);
 512                             		.loc 1 40 0
 513 01de 3C 05 00                		mov.B	#0, 5[r0]
  41:../src/umouse_object/imu.cpp **** 	return recvBuf[1];
 514                             		.loc 1 41 0
 515 01e1 05 00 00 00             		bsr	__Z21communicateNbyteRSPI1PhS_h
 516                             	.LVL52:
 517                             	.LBE206:
 518                             	.LBE209:
 519                             	.LBB210:
 520                             	.LBB211:
 521 01e5 66 41                   		mov.L	#4, r1
 522 01e7 4B 01                   		add	r0, r1
 523 01e9 EF 02                   		mov.L	r0, r2
 524 01eb 66 23                   		mov	#2, r3
 525                             	.LBE211:
 526                             	.LBE210:
 527                             	.LBB214:
 528                             	.LBB207:
  42:../src/umouse_object/imu.cpp **** }
 529                             		.loc 1 42 0
 530 01ed C5 00 01 0B             		mov.B	1[r0], 11[r0]
 531                             	.LVL53:
 532                             	.LBE207:
 533                             	.LBE214:
 534                             	.LBB215:
 535                             	.LBB212:
  39:../src/umouse_object/imu.cpp **** 	sendBuf[1] = 0x00;
 536                             		.loc 1 39 0
 537 01f1 F9 04 04 C5             		mov.B	#-59, 4[r0]
  40:../src/umouse_object/imu.cpp **** 	communicateNbyteRSPI1(sendBuf, recvBuf, 2);
 538                             		.loc 1 40 0
 539 01f5 3C 05 00                		mov.B	#0, 5[r0]
  41:../src/umouse_object/imu.cpp **** 	return recvBuf[1];
 540                             		.loc 1 41 0
 541 01f8 05 00 00 00             		bsr	__Z21communicateNbyteRSPI1PhS_h
 542                             	.LVL54:
 543                             	.LBE212:
 544                             	.LBE215:
 545                             	.LBB216:
 546                             	.LBB217:
 547 01fc 66 41                   		mov.L	#4, r1
 548 01fe 4B 01                   		add	r0, r1
 549 0200 EF 02                   		mov.L	r0, r2
 550 0202 66 23                   		mov	#2, r3
 551                             	.LBE217:
 552                             	.LBE216:
 553                             	.LBB220:
 554                             	.LBB213:
  42:../src/umouse_object/imu.cpp **** }
 555                             		.loc 1 42 0
 556 0204 C5 00 01 0C             		mov.B	1[r0], 12[r0]
 557                             	.LVL55:
 558                             	.LBE213:
 559                             	.LBE220:
 560                             	.LBB221:
 561                             	.LBB218:
  39:../src/umouse_object/imu.cpp **** 	sendBuf[1] = 0x00;
 562                             		.loc 1 39 0
 563 0208 F9 04 04 C6             		mov.B	#-58, 4[r0]
  40:../src/umouse_object/imu.cpp **** 	communicateNbyteRSPI1(sendBuf, recvBuf, 2);
 564                             		.loc 1 40 0
 565 020c 3C 05 00                		mov.B	#0, 5[r0]
  41:../src/umouse_object/imu.cpp **** 	return recvBuf[1];
 566                             		.loc 1 41 0
 567 020f 05 00 00 00             		bsr	__Z21communicateNbyteRSPI1PhS_h
 568                             	.LVL56:
 569                             	.LBE218:
 570                             	.LBE221:
 571                             	.LBB222:
 572                             	.LBB223:
 573 0213 66 41                   		mov.L	#4, r1
 574 0215 4B 01                   		add	r0, r1
 575 0217 EF 02                   		mov.L	r0, r2
 576 0219 66 23                   		mov	#2, r3
 577                             	.LBE223:
 578                             	.LBE222:
 579                             	.LBB226:
 580                             	.LBB219:
  42:../src/umouse_object/imu.cpp **** }
 581                             		.loc 1 42 0
 582 021b C5 00 01 0D             		mov.B	1[r0], 13[r0]
 583                             	.LVL57:
 584                             	.LBE219:
 585                             	.LBE226:
 586                             	.LBB227:
 587                             	.LBB224:
  39:../src/umouse_object/imu.cpp **** 	sendBuf[1] = 0x00;
 588                             		.loc 1 39 0
 589 021f F9 04 04 C7             		mov.B	#-57, 4[r0]
  40:../src/umouse_object/imu.cpp **** 	communicateNbyteRSPI1(sendBuf, recvBuf, 2);
 590                             		.loc 1 40 0
 591 0223 3C 05 00                		mov.B	#0, 5[r0]
  41:../src/umouse_object/imu.cpp **** 	return recvBuf[1];
 592                             		.loc 1 41 0
 593 0226 05 00 00 00             		bsr	__Z21communicateNbyteRSPI1PhS_h
 594                             	.LVL58:
 595                             	.LBE224:
 596                             	.LBE227:
 597                             	.LBB228:
 598                             	.LBB229:
 599 022a 66 23                   		mov	#2, r3
 600 022c 66 41                   		mov.L	#4, r1
 601 022e 4B 01                   		add	r0, r1
 602 0230 EF 02                   		mov.L	r0, r2
 603                             	.LBE229:
 604                             	.LBE228:
 605                             	.LBB232:
 606                             	.LBB225:
  42:../src/umouse_object/imu.cpp **** }
 607                             		.loc 1 42 0
 608 0232 CD 0A 01                		mov.B	1[r0], r10
 609                             	.LVL59:
 610                             	.LBE225:
 611                             	.LBE232:
 612                             	.LBB233:
 613                             	.LBB230:
  39:../src/umouse_object/imu.cpp **** 	sendBuf[1] = 0x00;
 614                             		.loc 1 39 0
 615 0235 F9 04 04 C8             		mov.B	#-56, 4[r0]
  40:../src/umouse_object/imu.cpp **** 	communicateNbyteRSPI1(sendBuf, recvBuf, 2);
 616                             		.loc 1 40 0
 617 0239 3C 05 00                		mov.B	#0, 5[r0]
  41:../src/umouse_object/imu.cpp **** 	return recvBuf[1];
 618                             		.loc 1 41 0
 619 023c 05 00 00 00             		bsr	__Z21communicateNbyteRSPI1PhS_h
 620                             	.LVL60:
 621                             	.LBE230:
 622                             	.LBE233:
  88:../src/umouse_object/imu.cpp **** 
  89:../src/umouse_object/imu.cpp **** 	uint8_t accel_xout_h = readReg(0x3b);
  90:../src/umouse_object/imu.cpp **** 	uint8_t accel_xout_l = readReg(0x3c);
  91:../src/umouse_object/imu.cpp **** 
  92:../src/umouse_object/imu.cpp **** 	uint8_t accel_yout_h = readReg(0x3d);
  93:../src/umouse_object/imu.cpp **** 	uint8_t accel_yout_l = readReg(0x3e);
  94:../src/umouse_object/imu.cpp **** 
  95:../src/umouse_object/imu.cpp **** 	uint8_t accel_zout_h = readReg(0x3f);
  96:../src/umouse_object/imu.cpp **** 	uint8_t accel_zout_l = readReg(0x40);
  97:../src/umouse_object/imu.cpp **** 
  98:../src/umouse_object/imu.cpp **** 	uint8_t temp_out_h   = readReg(0x41);
  99:../src/umouse_object/imu.cpp **** 	uint8_t temp_out_l   = readReg(0x42);
 100:../src/umouse_object/imu.cpp **** 
 101:../src/umouse_object/imu.cpp **** 	uint8_t gyro_xout_h  = readReg(0x43);
 102:../src/umouse_object/imu.cpp **** 	uint8_t gyro_xout_l  = readReg(0x44);
 103:../src/umouse_object/imu.cpp **** 
 104:../src/umouse_object/imu.cpp **** 	uint8_t gyro_yout_h  = readReg(0x45);
 105:../src/umouse_object/imu.cpp **** 	uint8_t gyro_yout_l  = readReg(0x46);
 106:../src/umouse_object/imu.cpp **** 
 107:../src/umouse_object/imu.cpp **** 	uint8_t gyro_zout_h  = readReg(0x47);
 108:../src/umouse_object/imu.cpp **** 	uint8_t gyro_zout_l  = readReg(0x48);
 109:../src/umouse_object/imu.cpp **** 
 110:../src/umouse_object/imu.cpp **** 	acc_raw[0] =  concatenate2Byte_int(accel_xout_h, accel_xout_l);
 623                             		.loc 1 110 0
 624 0240 CF 62                   		mov.B	r6, r2
 625 0242 CF 81                   		mov.B	r8, r1
 626                             	.LBB234:
 627                             	.LBB231:
  42:../src/umouse_object/imu.cpp **** }
 628                             		.loc 1 42 0
 629 0244 CD 08 01                		mov.B	1[r0], r8
 630                             	.LVL61:
 631                             	.LBE231:
 632                             	.LBE234:
 633                             		.loc 1 110 0
 634 0247 05 00 00 00             		bsr	__Z20concatenate2Byte_inthh
 635                             	.LVL62:
 111:../src/umouse_object/imu.cpp **** 	acc_raw[1] =  concatenate2Byte_int(accel_yout_h, accel_yout_l);
 636                             		.loc 1 111 0
 637 024b CF 92                   		mov.B	r9, r2
 110:../src/umouse_object/imu.cpp **** 	acc_raw[1] =  concatenate2Byte_int(accel_yout_h, accel_yout_l);
 638                             		.loc 1 110 0
 639 024d 90 F9                   		mov.W	r1, 6[r7]
 640                             		.loc 1 111 0
 641 024f CF D1                   		mov.B	r13, r1
 642 0251 05 00 00 00             		bsr	__Z20concatenate2Byte_inthh
 643                             	.LVL63:
 112:../src/umouse_object/imu.cpp **** 	acc_raw[2] = - concatenate2Byte_int(accel_zout_h, accel_zout_l);
 644                             		.loc 1 112 0
 645 0255 CF C2                   		mov.B	r12, r2
 111:../src/umouse_object/imu.cpp **** 	acc_raw[1] =  concatenate2Byte_int(accel_yout_h, accel_yout_l);
 646                             		.loc 1 111 0
 647 0257 91 71                   		mov.W	r1, 8[r7]
 648                             		.loc 1 112 0
 649 0259 CF B1                   		mov.B	r11, r1
 650 025b 05 00 00 00             		bsr	__Z20concatenate2Byte_inthh
 651                             	.LVL64:
 652 025f 7E 11                   		neg	r1
 113:../src/umouse_object/imu.cpp **** 
 114:../src/umouse_object/imu.cpp **** 	omega_raw[0] = - concatenate2Byte_int(gyro_xout_h, gyro_xout_l);
 653                             		.loc 1 114 0
 654 0261 8A 8A                   		mov.B	11[r0], r2
 112:../src/umouse_object/imu.cpp **** 	acc_raw[2] = - concatenate2Byte_int(accel_zout_h, accel_zout_l);
 655                             		.loc 1 112 0
 656 0263 91 79                   		mov.W	r1, 10[r7]
 657                             		.loc 1 114 0
 658 0265 8A 81                   		mov.B	10[r0], r1
 659 0267 05 00 00 00             		bsr	__Z20concatenate2Byte_inthh
 660                             	.LVL65:
 661 026b 7E 11                   		neg	r1
 115:../src/umouse_object/imu.cpp **** 	omega_raw[1] = - concatenate2Byte_int(gyro_yout_h, gyro_yout_l);
 662                             		.loc 1 115 0
 663 026d 8B 0A                   		mov.B	13[r0], r2
 114:../src/umouse_object/imu.cpp **** 	omega_raw[1] = - concatenate2Byte_int(gyro_yout_h, gyro_yout_l);
 664                             		.loc 1 114 0
 665 026f D3 71                   		mov.W	r1, [r7]
 666                             		.loc 1 115 0
 667 0271 8B 01                   		mov.B	12[r0], r1
 668 0273 05 00 00 00             		bsr	__Z20concatenate2Byte_inthh
 669                             	.LVL66:
 670 0277 7E 11                   		neg	r1
 116:../src/umouse_object/imu.cpp **** 	omega_raw[2] = - concatenate2Byte_int(gyro_zout_h, gyro_zout_l);
 671                             		.loc 1 116 0
 672 0279 CF 82                   		mov.B	r8, r2
 115:../src/umouse_object/imu.cpp **** 	omega_raw[1] = - concatenate2Byte_int(gyro_yout_h, gyro_yout_l);
 673                             		.loc 1 115 0
 674 027b 90 79                   		mov.W	r1, 2[r7]
 675                             		.loc 1 116 0
 676 027d CF A1                   		mov.B	r10, r1
 677 027f 05 00 00 00             		bsr	__Z20concatenate2Byte_inthh
 678                             	.LVL67:
 679 0283 7E 11                   		neg	r1
 680 0285 90 F1                   		mov.W	r1, 4[r7]
 117:../src/umouse_object/imu.cpp **** 
 118:../src/umouse_object/imu.cpp **** 
 119:../src/umouse_object/imu.cpp **** 	//mag_row[];
 120:../src/umouse_object/imu.cpp **** 	temp_raw = concatenate2Byte_int(temp_out_h, temp_out_l);
 681                             		.loc 1 120 0
 682 0287 8A 01                   		mov.B	8[r0], r1
 683 0289 8A 0A                   		mov.B	9[r0], r2
 684 028b 05 00 00 00             		bsr	__Z20concatenate2Byte_inthh
 685                             	.LVL68:
 686 028f 92 79                   		mov.W	r1, 18[r7]
 687                             	.LVL69:
 688                             	.LBB235:
 689                             	.LBB236:
 121:../src/umouse_object/imu.cpp **** 	for(int i=0;i<3;i++){
 122:../src/umouse_object/imu.cpp **** 		omega_c[i] = omega_raw[i] - omega_ref[i];
 690                             		.loc 1 122 0
 691 0291 DC 7B                   		mov.W	[r7], r11
 692                             	.LVL70:
 693 0293 DD 7A 0A                		mov.W	20[r7], r10
 694                             	.LVL71:
 695 0296 FF 0A AB                		sub	r10, r11, r10
 696 0299 D7 7A 13                		mov.W	r10, 38[r7]
 123:../src/umouse_object/imu.cpp **** 		omega_f[i] = omega_c[i] *MPU9250G_2000dps;
 697                             		.loc 1 123 0
 698 029c DD 7A 13                		mov.W	38[r7], r10
 699 029f FC 47 AA                		itof	r10, r10
 700 02a2 FD 72 3A 90 C1 79 3D    		fmul	#0x3d79c190, r10
 701 02a9 E7 7A 0E                		mov.L	r10, 56[r7]
 124:../src/umouse_object/imu.cpp **** 		acc_c[i] = acc_raw[i] - acc_ref[i];
 702                             		.loc 1 124 0
 703 02ac DD 7B 03                		mov.W	6[r7], r11
 704 02af DD 7A 0D                		mov.W	26[r7], r10
 705 02b2 FF 0A AB                		sub	r10, r11, r10
 706 02b5 D7 7A 16                		mov.W	r10, 44[r7]
 125:../src/umouse_object/imu.cpp **** 		float temp = acc_c[i] * MPU9250A_2g * 9.8;
 707                             		.loc 1 125 0
 708 02b8 DD 7A 16                		mov.W	44[r7], r10
 709                             	.LVL72:
 126:../src/umouse_object/imu.cpp **** 		acc_f[i] = 0.3 * acc_f[i] + 0.7 *temp;
 710                             		.loc 1 126 0
 711 02bb ED 7B 11                		mov.L	68[r7], r11
 125:../src/umouse_object/imu.cpp **** 		float temp = acc_c[i] * MPU9250A_2g * 9.8;
 712                             		.loc 1 125 0
 713 02be DF AA                   		mov.W	r10, r10
 714 02c0 FC 47 AA                		itof	r10, r10
 715                             	.LVL73:
 716                             		.loc 1 126 0
 717 02c3 FD 72 3B 9A 99 99 3E    		fmul	#0x3e99999a, r11
 125:../src/umouse_object/imu.cpp **** 		float temp = acc_c[i] * MPU9250A_2g * 9.8;
 718                             		.loc 1 125 0
 719 02ca FD 72 3A 00 00 80 38    		fmul	#0x38800000, r10
 720 02d1 FD 72 3A CD CC 1C 41    		fmul	#0x411ccccd, r10
 721                             		.loc 1 126 0
 722 02d8 FD 72 3A 33 33 33 3F    		fmul	#0x3f333333, r10
 723 02df FC 8B BA                		fadd	r11, r10
 724 02e2 E7 7A 11                		mov.L	r10, 68[r7]
 725                             	.LVL74:
 122:../src/umouse_object/imu.cpp **** 		omega_f[i] = omega_c[i] *MPU9250G_2000dps;
 726                             		.loc 1 122 0
 727 02e5 DD 7B 01                		mov.W	2[r7], r11
 728 02e8 DD 7A 0B                		mov.W	22[r7], r10
 729 02eb FF 0A AB                		sub	r10, r11, r10
 730 02ee D7 7A 14                		mov.W	r10, 40[r7]
 123:../src/umouse_object/imu.cpp **** 		acc_c[i] = acc_raw[i] - acc_ref[i];
 731                             		.loc 1 123 0
 732 02f1 DD 7A 14                		mov.W	40[r7], r10
 733 02f4 FC 47 AA                		itof	r10, r10
 734 02f7 FD 72 3A 90 C1 79 3D    		fmul	#0x3d79c190, r10
 735 02fe E7 7A 0F                		mov.L	r10, 60[r7]
 124:../src/umouse_object/imu.cpp **** 		float temp = acc_c[i] * MPU9250A_2g * 9.8;
 736                             		.loc 1 124 0
 737 0301 DD 7B 04                		mov.W	8[r7], r11
 738 0304 DD 7A 0E                		mov.W	28[r7], r10
 739 0307 FF 0A AB                		sub	r10, r11, r10
 740 030a D7 7A 17                		mov.W	r10, 46[r7]
 125:../src/umouse_object/imu.cpp **** 		acc_f[i] = 0.3 * acc_f[i] + 0.7 *temp;
 741                             		.loc 1 125 0
 742 030d DD 7A 17                		mov.W	46[r7], r10
 743                             	.LVL75:
 744                             		.loc 1 126 0
 745 0310 ED 7B 12                		mov.L	72[r7], r11
 125:../src/umouse_object/imu.cpp **** 		acc_f[i] = 0.3 * acc_f[i] + 0.7 *temp;
 746                             		.loc 1 125 0
 747 0313 DF AA                   		mov.W	r10, r10
 748 0315 FC 47 AA                		itof	r10, r10
 749                             	.LVL76:
 750 0318 FD 72 3A 00 00 80 38    		fmul	#0x38800000, r10
 751 031f FD 72 3A CD CC 1C 41    		fmul	#0x411ccccd, r10
 752                             		.loc 1 126 0
 753 0326 FD 72 3B 9A 99 99 3E    		fmul	#0x3e99999a, r11
 754 032d FD 72 3A 33 33 33 3F    		fmul	#0x3f333333, r10
 755 0334 FC 8B BA                		fadd	r11, r10
 756 0337 E7 7A 12                		mov.L	r10, 72[r7]
 757                             	.LVL77:
 122:../src/umouse_object/imu.cpp **** 		omega_f[i] = omega_c[i] *MPU9250G_2000dps;
 758                             		.loc 1 122 0
 759 033a DD 7B 02                		mov.W	4[r7], r11
 760 033d DD 7A 0C                		mov.W	24[r7], r10
 761 0340 FF 0A AB                		sub	r10, r11, r10
 762 0343 D7 7A 15                		mov.W	r10, 42[r7]
 123:../src/umouse_object/imu.cpp **** 		acc_c[i] = acc_raw[i] - acc_ref[i];
 763                             		.loc 1 123 0
 764 0346 DD 7A 15                		mov.W	42[r7], r10
 765 0349 FC 47 AA                		itof	r10, r10
 766 034c FD 72 3A 90 C1 79 3D    		fmul	#0x3d79c190, r10
 767 0353 E7 7A 10                		mov.L	r10, 64[r7]
 124:../src/umouse_object/imu.cpp **** 		float temp = acc_c[i] * MPU9250A_2g * 9.8;
 768                             		.loc 1 124 0
 769 0356 DD 7B 05                		mov.W	10[r7], r11
 770 0359 DD 7A 0F                		mov.W	30[r7], r10
 771 035c FF 0A AB                		sub	r10, r11, r10
 772 035f D7 7A 18                		mov.W	r10, 48[r7]
 125:../src/umouse_object/imu.cpp **** 		acc_f[i] = 0.3 * acc_f[i] + 0.7 *temp;
 773                             		.loc 1 125 0
 774 0362 DD 7A 18                		mov.W	48[r7], r10
 775                             	.LVL78:
 776                             		.loc 1 126 0
 777 0365 ED 7B 13                		mov.L	76[r7], r11
 125:../src/umouse_object/imu.cpp **** 		acc_f[i] = 0.3 * acc_f[i] + 0.7 *temp;
 778                             		.loc 1 125 0
 779 0368 DF AA                   		mov.W	r10, r10
 780 036a FC 47 AA                		itof	r10, r10
 781                             	.LVL79:
 782 036d FD 72 3A 00 00 80 38    		fmul	#0x38800000, r10
 783 0374 FD 72 3A CD CC 1C 41    		fmul	#0x411ccccd, r10
 784                             		.loc 1 126 0
 785 037b FD 72 3B 9A 99 99 3E    		fmul	#0x3e99999a, r11
 786 0382 FD 72 3A 33 33 33 3F    		fmul	#0x3f333333, r10
 787 0389 FC 8B BA                		fadd	r11, r10
 788 038c E7 7A 13                		mov.L	r10, 76[r7]
 789                             	.LVL80:
 790                             	.LBE236:
 791                             	.LBE235:
 792                             	.LBE152:
 127:../src/umouse_object/imu.cpp **** 	}
 128:../src/umouse_object/imu.cpp **** 
 129:../src/umouse_object/imu.cpp **** 	//z軸の値にローパスフィルタをかけてみる
 130:../src/umouse_object/imu.cpp **** /*
 131:../src/umouse_object/imu.cpp **** 	static std::deque<float> vec(10,0.0);
 132:../src/umouse_object/imu.cpp **** 	vec.push_back(float(omega_f[2]));
 133:../src/umouse_object/imu.cpp **** 	vec.pop_front();
 134:../src/umouse_object/imu.cpp **** 	float max = vec[0];
 135:../src/umouse_object/imu.cpp **** 	float min = vec[0];
 136:../src/umouse_object/imu.cpp **** 	for(int i=1;i<10;i++){
 137:../src/umouse_object/imu.cpp **** 	    if(vec[i] < min) min = vec[i];
 138:../src/umouse_object/imu.cpp **** 	    if(vec[i] > max) max = vec[i];
 139:../src/umouse_object/imu.cpp **** 	}
 140:../src/umouse_object/imu.cpp **** 
 141:../src/umouse_object/imu.cpp **** 	float low_pass = 0.0;
 142:../src/umouse_object/imu.cpp **** 	low_pass = (vec[0] + vec[1] + vec[2] + vec[3] + vec[4]+
 143:../src/umouse_object/imu.cpp ****                 vec[5] + vec[6] + vec[7] + vec[8] + vec[9]
 144:../src/umouse_object/imu.cpp ****                 - min -max                                )*0.125;
 145:../src/umouse_object/imu.cpp **** 	omega_f[2] = low_pass;
 146:../src/umouse_object/imu.cpp **** */
 147:../src/umouse_object/imu.cpp **** 	/*
 148:../src/umouse_object/imu.cpp **** 	static std::deque<float> vec_acc0(40,0.0);
 149:../src/umouse_object/imu.cpp ****     vec_acc0.push_back(float(acc_f[0]));
 150:../src/umouse_object/imu.cpp ****     vec_acc0.pop_front();
 151:../src/umouse_object/imu.cpp **** 
 152:../src/umouse_object/imu.cpp ****     float low_pass_acc0 = 0.0;
 153:../src/umouse_object/imu.cpp ****     for(int i=0;i<40;i++){
 154:../src/umouse_object/imu.cpp ****         low_pass_acc0 += vec_acc0[i];
 155:../src/umouse_object/imu.cpp ****     }
 156:../src/umouse_object/imu.cpp ****     low_pass_acc0 = low_pass_acc0/40.0;
 157:../src/umouse_object/imu.cpp ****     acc_f[0] = low_pass_acc0;
 158:../src/umouse_object/imu.cpp **** 
 159:../src/umouse_object/imu.cpp **** 
 160:../src/umouse_object/imu.cpp ****     static std::deque<float> vec_acc1(40,0.0);
 161:../src/umouse_object/imu.cpp ****     vec_acc1.push_back(float(acc_f[1]));
 162:../src/umouse_object/imu.cpp ****     vec_acc1.pop_front();
 163:../src/umouse_object/imu.cpp ****     float low_pass_acc1 = 0.0;
 164:../src/umouse_object/imu.cpp ****     for(int i=0;i<40;i++){
 165:../src/umouse_object/imu.cpp ****         low_pass_acc1 += vec_acc1[i];
 166:../src/umouse_object/imu.cpp ****     }
 167:../src/umouse_object/imu.cpp ****     low_pass_acc1 = low_pass_acc1/40.0;
 168:../src/umouse_object/imu.cpp **** 
 169:../src/umouse_object/imu.cpp ****     acc_f[1] = low_pass_acc1;
 170:../src/umouse_object/imu.cpp **** */
 171:../src/umouse_object/imu.cpp **** 
 172:../src/umouse_object/imu.cpp **** 
 173:../src/umouse_object/imu.cpp **** }
 793                             		.loc 1 173 0
 794 038f 3F 6D 0C                		rtsd	#48, r6-r13
 795                             	.LFE543:
 797                             		.section	.rodata.str1.1,"aMS",@progbits,1
 798                             	.LC0:
 799 0000 3D 3D 3D 3D 6D 70 75 39 		.string	"====mpu9250======\n gyro offset %d, %d, %d\n"
 799      32 35 30 3D 3D 3D 3D 3D 
 799      3D 0A 20 67 79 72 6F 20 
 799      6F 66 66 73 65 74 20 25 
 799      64 2C 20 25 64 2C 20 25 
 800                             		.section P,"ax"
 801                             		.global	__ZN7MPU925016calibOmegaOffsetEm
 803                             	__ZN7MPU925016calibOmegaOffsetEm:
 804                             	.LFB544:
 174:../src/umouse_object/imu.cpp **** 
 175:../src/umouse_object/imu.cpp **** /**
 176:../src/umouse_object/imu.cpp ****  * ジャイロオフセット設定用関数<br>
 177:../src/umouse_object/imu.cpp ****  * 静止状態でNUM_REF回のサンプルを取り, そのデータの上位25%と下位25%の値
 178:../src/umouse_object/imu.cpp ****  * クイックソートによって取り除く残りの50%で平均値を求めオフセットと
 179:../src/umouse_object/imu.cpp ****  *
 180:../src/umouse_object/imu.cpp ****  */
 181:../src/umouse_object/imu.cpp **** void  MPU9250::calibOmegaOffset(uint32_t ref_num)
 182:../src/umouse_object/imu.cpp **** {
 805                             		.loc 1 182 0
 806                             	.LVL81:
 807 0392 6E 6D                   		pushm	r6-r13
 808                             	.LCFI6:
 809 0394 71 06 F4                		add	#-12, r0, r6
 810                             	.LCFI7:
 811 0397 71 60 F0                		add	#-16, r6, r0
 812                             	.LCFI8:
 813                             	.LVL82:
 814                             		.loc 1 182 0
 815 039a EF 29                   		mov.L	r2, r9
 816                             	.LVL83:
 817                             	.LBB237:
 183:../src/umouse_object/imu.cpp **** 	uint32_t i = 0;
 184:../src/umouse_object/imu.cpp **** 
 185:../src/umouse_object/imu.cpp **** 
 186:../src/umouse_object/imu.cpp **** 	int16_t omega_x[ref_num];
 818                             		.loc 1 186 0
 819 039c FF 2A 22                		add	r2, r2, r10
 820 039f 62 4A                   		add	#4, r10
 821 03a1 75 2A FC                		and #-4, r10
 822                             	.LBE237:
 187:../src/umouse_object/imu.cpp **** 	int16_t omega_y[ref_num];
 188:../src/umouse_object/imu.cpp **** 	int16_t omega_z[ref_num];
 189:../src/umouse_object/imu.cpp **** 
 190:../src/umouse_object/imu.cpp **** 	float omega_x_sum = 0.0;
 191:../src/umouse_object/imu.cpp **** 	float omega_y_sum = 0.0;
 192:../src/umouse_object/imu.cpp **** 	float omega_z_sum = 0.0;
 193:../src/umouse_object/imu.cpp **** 
 194:../src/umouse_object/imu.cpp **** 	for(uint32_t i=0;i<3;i++)
 195:../src/umouse_object/imu.cpp **** 	{
 196:../src/umouse_object/imu.cpp **** 		omega_ref[i] = 0;
 197:../src/umouse_object/imu.cpp **** 	}
 198:../src/umouse_object/imu.cpp **** 
 199:../src/umouse_object/imu.cpp **** 	for(uint32_t i=0;i<ref_num;i++)
 200:../src/umouse_object/imu.cpp **** 	{
 201:../src/umouse_object/imu.cpp **** 		omega_x[i] = omega_raw[0];
 202:../src/umouse_object/imu.cpp **** 		omega_y[i] = omega_raw[1];
 203:../src/umouse_object/imu.cpp **** 		omega_z[i] = omega_raw[2];
 204:../src/umouse_object/imu.cpp **** 		waitusec(500);
 205:../src/umouse_object/imu.cpp **** 		//myprintf3("%d| calibrating... %d, %d, %d\n",i,omega_x[i],omega_y[i],omega_z[i] );
 206:../src/umouse_object/imu.cpp **** 	}
 207:../src/umouse_object/imu.cpp **** 	quickSort_int16(omega_x,0 ,ref_num -1);
 208:../src/umouse_object/imu.cpp **** 	quickSort_int16(omega_y,0 ,ref_num -1);
 209:../src/umouse_object/imu.cpp **** 	quickSort_int16(omega_z,0 ,ref_num -1);
 210:../src/umouse_object/imu.cpp **** 
 211:../src/umouse_object/imu.cpp **** 	for(i=ref_num/4;i<(ref_num*3/4 +1) ;i++)
 212:../src/umouse_object/imu.cpp **** 	{
 213:../src/umouse_object/imu.cpp **** 		omega_x_sum += (float)(omega_x[i]);
 214:../src/umouse_object/imu.cpp **** 		omega_y_sum += (float)(omega_y[i]);
 215:../src/umouse_object/imu.cpp **** 		omega_z_sum += (float)(omega_z[i]);
 216:../src/umouse_object/imu.cpp **** 	}
 217:../src/umouse_object/imu.cpp **** 	omega_ref[0] = (int16_t)(omega_x_sum/(float)ref_num *2.0);
 218:../src/umouse_object/imu.cpp **** 	omega_ref[1] = (int16_t)(omega_y_sum/(float)ref_num *2.0);
 219:../src/umouse_object/imu.cpp **** 	omega_ref[2] = (int16_t)(omega_z_sum/(float)ref_num *2.0);
 220:../src/umouse_object/imu.cpp **** 
 221:../src/umouse_object/imu.cpp **** 	//writeEEPROMOffsetOmegaInt(&omega_offset_vec[0]);
 222:../src/umouse_object/imu.cpp **** 	myprintf3("====mpu9250======\n gyro offset %d, %d, %d\n",omega_ref[0],omega_ref[1],omega_ref[2] );
 223:../src/umouse_object/imu.cpp **** }
 823                             		.loc 1 223 0
 824 03a4 A0 68                   		mov.L	r0, 4[r6]
 825                             	.LBB243:
 186:../src/umouse_object/imu.cpp **** 	int16_t omega_y[ref_num];
 826                             		.loc 1 186 0
 827 03a6 43 A0                   		sub	r10, r0
 828                             	.LBE243:
 182:../src/umouse_object/imu.cpp **** 	uint32_t i = 0;
 829                             		.loc 1 182 0
 830 03a8 EF 17                   		mov.L	r1, r7
 831                             	.LBB244:
 186:../src/umouse_object/imu.cpp **** 	int16_t omega_y[ref_num];
 832                             		.loc 1 186 0
 833 03aa 71 0B 11                		add	#17, r0, r11
 187:../src/umouse_object/imu.cpp **** 	int16_t omega_y[ref_num];
 834                             		.loc 1 187 0
 835 03ad 43 A0                   		sub	r10, r0
 836 03af 71 08 11                		add	#17, r0, r8
 837                             	.LBB238:
 196:../src/umouse_object/imu.cpp **** 	}
 838                             		.loc 1 196 0
 839 03b2 3D 1A 00                		mov.W	#0, 20[r1]
 840                             	.LBE238:
 188:../src/umouse_object/imu.cpp **** 
 841                             		.loc 1 188 0
 842 03b5 43 A0                   		sub	r10, r0
 843 03b7 71 0A 11                		add	#17, r0, r10
 844                             	.LBB239:
 196:../src/umouse_object/imu.cpp **** 	}
 845                             		.loc 1 196 0
 846 03ba 3D 1B 00                		mov.W	#0, 22[r1]
 847                             	.LBE239:
 186:../src/umouse_object/imu.cpp **** 	int16_t omega_y[ref_num];
 848                             		.loc 1 186 0
 849 03bd 68 1B                   		shlr	#1, r11
 187:../src/umouse_object/imu.cpp **** 	int16_t omega_z[ref_num];
 850                             		.loc 1 187 0
 851 03bf 68 18                   		shlr	#1, r8
 188:../src/umouse_object/imu.cpp **** 
 852                             		.loc 1 188 0
 853 03c1 68 1A                   		shlr	#1, r10
 854                             	.LBB240:
 196:../src/umouse_object/imu.cpp **** 	}
 855                             		.loc 1 196 0
 856 03c3 3D 1C 00                		mov.W	#0, 24[r1]
 857                             	.LBE240:
 186:../src/umouse_object/imu.cpp **** 	int16_t omega_y[ref_num];
 858                             		.loc 1 186 0
 859 03c6 4B BB                   		add	r11, r11
 860 03c8 E7 6B 02                		mov.L	r11, 8[r6]
 861                             	.LVL84:
 187:../src/umouse_object/imu.cpp **** 	int16_t omega_z[ref_num];
 862                             		.loc 1 187 0
 863 03cb 4B 88                   		add	r8, r8
 864                             	.LVL85:
 188:../src/umouse_object/imu.cpp **** 
 865                             		.loc 1 188 0
 866 03cd 4B AA                   		add	r10, r10
 867 03cf E3 6A                   		mov.L	r10, [r6]
 868                             	.LVL86:
 869                             	.LBB241:
 199:../src/umouse_object/imu.cpp **** 	{
 870                             		.loc 1 199 0
 871 03d1 61 02                   		cmp	#0, r2
 872 03d3 3A E2 00                		beq	.L12
 873 03d6 EF BD                   		mov.L	r11, r13
 874 03d8 EF 8C                   		mov.L	r8, r12
 875 03da EF AB                   		mov.L	r10, r11
 876                             	.LVL87:
 877 03dc 66 0A                   		mov.L	#0, r10
 878                             	.LVL88:
 879 03de EF 00                   		.balign 8,3,5
 880                             	.L14:
 201:../src/umouse_object/imu.cpp **** 		omega_y[i] = omega_raw[1];
 881                             		.loc 1 201 0
 882 03e0 DC 7E                   		mov.W	[r7], r14
 204:../src/umouse_object/imu.cpp **** 		//myprintf3("%d| calibrating... %d, %d, %d\n",i,omega_x[i],omega_y[i],omega_z[i] );
 883                             		.loc 1 204 0
 884 03e2 FB 1A F4 01             		mov.L	#0x1f4, r1
 201:../src/umouse_object/imu.cpp **** 		omega_y[i] = omega_raw[1];
 885                             		.loc 1 201 0
 886 03e6 FD 21 DE                		mov.W	r14, [r13+]
 202:../src/umouse_object/imu.cpp **** 		omega_z[i] = omega_raw[2];
 887                             		.loc 1 202 0
 888 03e9 DD 7E 01                		mov.W	2[r7], r14
 199:../src/umouse_object/imu.cpp **** 	{
 889                             		.loc 1 199 0
 890 03ec 62 1A                   		add	#1, r10
 891                             	.LVL89:
 202:../src/umouse_object/imu.cpp **** 		omega_z[i] = omega_raw[2];
 892                             		.loc 1 202 0
 893 03ee FD 21 CE                		mov.W	r14, [r12+]
 203:../src/umouse_object/imu.cpp **** 		waitusec(500);
 894                             		.loc 1 203 0
 895 03f1 DD 7E 02                		mov.W	4[r7], r14
 896 03f4 FD 21 BE                		mov.W	r14, [r11+]
 204:../src/umouse_object/imu.cpp **** 		//myprintf3("%d| calibrating... %d, %d, %d\n",i,omega_x[i],omega_y[i],omega_z[i] );
 897                             		.loc 1 204 0
 898 03f7 05 00 00 00             		bsr	__Z8waitusecm
 899                             	.LVL90:
 199:../src/umouse_object/imu.cpp **** 	{
 900                             		.loc 1 199 0
 901 03fb 47 9A                   		cmp	r9, r10
 902 03fd 21 E3                   		bne	.L14
 903                             	.LBE241:
 207:../src/umouse_object/imu.cpp **** 	quickSort_int16(omega_y,0 ,ref_num -1);
 904                             		.loc 1 207 0
 905 03ff 71 9A FF                		add	#-1, r9, r10
 906                             	.LVL91:
 907 0402 66 02                   		mov.L	#0, r2
 908 0404 EF A3                   		mov.L	r10, r3
 909 0406 A8 E1                   		mov.L	8[r6], r1
 910 0408 05 00 00 00             		bsr	__Z15quickSort_int16Psmm
 911                             	.LVL92:
 208:../src/umouse_object/imu.cpp **** 	quickSort_int16(omega_z,0 ,ref_num -1);
 912                             		.loc 1 208 0
 913 040c EF 81                   		mov.L	r8, r1
 914 040e 66 02                   		mov.L	#0, r2
 915 0410 EF A3                   		mov.L	r10, r3
 916 0412 05 00 00 00             		bsr	__Z15quickSort_int16Psmm
 917                             	.LVL93:
 209:../src/umouse_object/imu.cpp **** 
 918                             		.loc 1 209 0
 919 0416 EC 61                   		mov.L	[r6], r1
 920 0418 66 02                   		mov.L	#0, r2
 921 041a EF A3                   		mov.L	r10, r3
 922 041c 05 00 00 00             		bsr	__Z15quickSort_int16Psmm
 923                             	.LVL94:
 211:../src/umouse_object/imu.cpp **** 	{
 924                             		.loc 1 211 0
 925 0420 66 33                   		mov.L	#3, r3
 926 0422 4F 93                   		mul	r9, r3
 927 0424 68 23                   		shlr	#2, r3
 928 0426 FD 82 9A                		shlr	#2, r9, r10
 929                             	.LVL95:
 930 0429 62 13                   		add	#1, r3
 931 042b 47 3A                   		cmp	r3, r10
 932 042d 23 05 38 AC 00          		bgeu	.L21
 933                             	.LVL96:
 934                             		.balign 8,3,2
 935                             	.L15:
 936 0432 FF 2E AA                		add	r10, r10, r14
 937                             	.LBB242:
 199:../src/umouse_object/imu.cpp **** 	{
 938                             		.loc 1 199 0 discriminator 2
 939 0435 66 0B                   		mov.L	#0x0, r11
 940 0437 A8 E5                   		mov.L	8[r6], r5
 941 0439 4B E5                   		add	r14, r5
 942 043b 4B E8                   		add	r14, r8
 943                             	.LVL97:
 944 043d 06 88 6E                		add	[r6], r14
 945 0440 EF BD                   		mov.L	r11, r13
 946 0442 EF BC                   		mov.L	r11, r12
 947                             	.LVL98:
 948 0444 76 10 01 00             		.balign 8,3,5
 949                             	.L17:
 950                             	.LBE242:
 213:../src/umouse_object/imu.cpp **** 		omega_y_sum += (float)(omega_y[i]);
 951                             		.loc 1 213 0 discriminator 2
 952 0448 FD 29 51                		mov.W	[r5+], r1
 214:../src/umouse_object/imu.cpp **** 		omega_z_sum += (float)(omega_z[i]);
 953                             		.loc 1 214 0 discriminator 2
 954 044b FD 29 82                		mov.W	[r8+], r2
 215:../src/umouse_object/imu.cpp **** 	}
 955                             		.loc 1 215 0 discriminator 2
 956 044e FD 29 E4                		mov.W	[r14+], r4
 213:../src/umouse_object/imu.cpp **** 		omega_y_sum += (float)(omega_y[i]);
 957                             		.loc 1 213 0 discriminator 2
 958 0451 FC 47 11                		itof	r1, r1
 214:../src/umouse_object/imu.cpp **** 		omega_z_sum += (float)(omega_z[i]);
 959                             		.loc 1 214 0 discriminator 2
 960 0454 FC 47 22                		itof	r2, r2
 215:../src/umouse_object/imu.cpp **** 	}
 961                             		.loc 1 215 0 discriminator 2
 962 0457 FC 47 44                		itof	r4, r4
 211:../src/umouse_object/imu.cpp **** 	{
 963                             		.loc 1 211 0 discriminator 2
 964 045a 62 1A                   		add	#1, r10
 965                             	.LVL99:
 213:../src/umouse_object/imu.cpp **** 		omega_y_sum += (float)(omega_y[i]);
 966                             		.loc 1 213 0 discriminator 2
 967 045c FC 8B 1C                		fadd	r1, r12
 968                             	.LVL100:
 214:../src/umouse_object/imu.cpp **** 		omega_z_sum += (float)(omega_z[i]);
 969                             		.loc 1 214 0 discriminator 2
 970 045f FC 8B 2D                		fadd	r2, r13
 971                             	.LVL101:
 215:../src/umouse_object/imu.cpp **** 	}
 972                             		.loc 1 215 0 discriminator 2
 973 0462 FC 8B 4B                		fadd	r4, r11
 974                             	.LVL102:
 211:../src/umouse_object/imu.cpp **** 	{
 975                             		.loc 1 211 0 discriminator 2
 976 0465 47 3A                   		cmp	r3, r10
 977 0467 23 E1                   		bltu	.L17
 978                             	.LVL103:
 979                             		.balign 8,3,2
 980                             	.L16:
 217:../src/umouse_object/imu.cpp **** 	omega_ref[1] = (int16_t)(omega_y_sum/(float)ref_num *2.0);
 981                             		.loc 1 217 0
 982 0469 FC 57 99                		utof	r9, r9
 983                             	.LVL104:
 984 046c FC 93 9C                		fdiv	r9, r12
 985 046f FC 8B CC                		fadd	r12, r12
 218:../src/umouse_object/imu.cpp **** 	omega_ref[2] = (int16_t)(omega_z_sum/(float)ref_num *2.0);
 986                             		.loc 1 218 0
 987 0472 FC 93 9D                		fdiv	r9, r13
 217:../src/umouse_object/imu.cpp **** 	omega_ref[1] = (int16_t)(omega_y_sum/(float)ref_num *2.0);
 988                             		.loc 1 217 0
 989 0475 FC 97 CC                		ftoi	r12, r12
 218:../src/umouse_object/imu.cpp **** 	omega_ref[2] = (int16_t)(omega_z_sum/(float)ref_num *2.0);
 990                             		.loc 1 218 0
 991 0478 FC 8B DD                		fadd	r13, r13
 219:../src/umouse_object/imu.cpp **** 
 992                             		.loc 1 219 0
 993 047b FC 93 9B                		fdiv	r9, r11
 217:../src/umouse_object/imu.cpp **** 	omega_ref[1] = (int16_t)(omega_y_sum/(float)ref_num *2.0);
 994                             		.loc 1 217 0
 995 047e D7 7C 0A                		mov.W	r12, 20[r7]
 218:../src/umouse_object/imu.cpp **** 	omega_ref[2] = (int16_t)(omega_z_sum/(float)ref_num *2.0);
 996                             		.loc 1 218 0
 997 0481 FC 97 DD                		ftoi	r13, r13
 219:../src/umouse_object/imu.cpp **** 
 998                             		.loc 1 219 0
 999 0484 FC 8B BB                		fadd	r11, r11
 218:../src/umouse_object/imu.cpp **** 	omega_ref[2] = (int16_t)(omega_z_sum/(float)ref_num *2.0);
 1000                             		.loc 1 218 0
 1001 0487 D7 7D 0B                		mov.W	r13, 22[r7]
 219:../src/umouse_object/imu.cpp **** 
 1002                             		.loc 1 219 0
 1003 048a FC 97 BB                		ftoi	r11, r11
 1004 048d D7 7B 0C                		mov.W	r11, 24[r7]
 222:../src/umouse_object/imu.cpp **** }
 1005                             		.loc 1 222 0
 1006 0490 DD 7B 0A                		mov.W	20[r7], r11
 1007 0493 DD 7A 0B                		mov.W	22[r7], r10
 1008                             	.LVL105:
 1009 0496 9B 77                   		mov.W	24[r7], r7
 1010                             	.LVL106:
 1011 0498 DF BB                   		mov.W	r11, r11
 1012 049a DF AA                   		mov.W	r10, r10
 1013 049c DF 77                   		mov.W	r7, r7
 1014 049e F8 02 00 00 00 00       		mov.L	#.LC0, [r0]
 1015                             	.LVL107:
 1016 04a4 E7 0B 01                		mov.L	r11, 4[r0]
 1017 04a7 E7 0A 02                		mov.L	r10, 8[r0]
 1018 04aa A0 8F                   		mov.L	r7, 12[r0]
 1019 04ac 05 00 00 00             		bsr	__Z9myprintf3PKcz
 1020                             	.LVL108:
 1021                             	.LBE244:
 1022                             		.loc 1 223 0
 1023 04b0 A8 68                   		mov.L	4[r6], r0
 1024                             	.LVL109:
 1025 04b2 3F 6D 0F                		rtsd	#60, r6-r13
 1026                             	.LVL110:
 1027                             	.L12:
 1028 04b5 EF B1                   		mov.L	r11, r1
 1029                             	.LVL111:
 1030                             	.LBB245:
 207:../src/umouse_object/imu.cpp **** 	quickSort_int16(omega_y,0 ,ref_num -1);
 1031                             		.loc 1 207 0
 1032 04b7 FB 36 FF                		mov.L	#-1, r3
 1033 04ba 05 00 00 00             		bsr	__Z15quickSort_int16Psmm
 1034                             	.LVL112:
 208:../src/umouse_object/imu.cpp **** 	quickSort_int16(omega_z,0 ,ref_num -1);
 1035                             		.loc 1 208 0
 1036 04be EF 81                   		mov.L	r8, r1
 1037 04c0 EF 92                   		mov.L	r9, r2
 1038 04c2 FB 36 FF                		mov.L	#-1, r3
 1039 04c5 05 00 00 00             		bsr	__Z15quickSort_int16Psmm
 1040                             	.LVL113:
 209:../src/umouse_object/imu.cpp **** 
 1041                             		.loc 1 209 0
 1042 04c9 EC 61                   		mov.L	[r6], r1
 1043 04cb EF 92                   		mov.L	r9, r2
 1044 04cd FB 36 FF                		mov.L	#-1, r3
 1045 04d0 05 00 00 00             		bsr	__Z15quickSort_int16Psmm
 1046                             	.LVL114:
 211:../src/umouse_object/imu.cpp **** 	{
 1047                             		.loc 1 211 0
 1048 04d4 66 13                   		mov.L	#1, r3
 1049 04d6 EF 9A                   		mov.L	r9, r10
 1050                             	.LVL115:
 1051 04d8 38 5A FF                		bra	.L15
 1052                             	.LVL116:
 1053                             	.L21:
 192:../src/umouse_object/imu.cpp **** 
 1054                             		.loc 1 192 0
 1055 04db 66 0B                   		mov.L	#0x0, r11
 191:../src/umouse_object/imu.cpp **** 	float omega_z_sum = 0.0;
 1056                             		.loc 1 191 0
 1057 04dd EF BD                   		mov.L	r11, r13
 190:../src/umouse_object/imu.cpp **** 	float omega_y_sum = 0.0;
 1058                             		.loc 1 190 0
 1059 04df EF BC                   		mov.L	r11, r12
 1060 04e1 2E 88                   		bra	.L16
 1061                             	.LBE245:
 1062                             	.LFE544:
 1064                             		.section	.rodata.str1.1
 1065                             	.LC1:
 1066 002b 3D 3D 3D 3D 6D 70 75 39 		.string	"====mpu9250======\n acc offset %d, %d, %d\n"
 1066      32 35 30 3D 3D 3D 3D 3D 
 1066      3D 0A 20 61 63 63 20 6F 
 1066      66 66 73 65 74 20 25 64 
 1066      2C 20 25 64 2C 20 25 64 
 1067                             		.section P,"ax"
 1068                             		.global	__ZN7MPU925014calibAccOffsetEm
 1070                             	__ZN7MPU925014calibAccOffsetEm:
 1071                             	.LFB545:
 224:../src/umouse_object/imu.cpp **** 
 225:../src/umouse_object/imu.cpp **** void  MPU9250::calibAccOffset(uint32_t ref_num)
 226:../src/umouse_object/imu.cpp **** {
 1072                             		.loc 1 226 0
 1073                             	.LVL117:
 1074 04e3 6E 6D                   		pushm	r6-r13
 1075                             	.LCFI9:
 1076 04e5 71 06 F4                		add	#-12, r0, r6
 1077                             	.LCFI10:
 1078 04e8 71 60 F0                		add	#-16, r6, r0
 1079                             	.LCFI11:
 1080                             	.LVL118:
 1081                             		.loc 1 226 0
 1082 04eb EF 29                   		mov.L	r2, r9
 1083                             	.LVL119:
 1084                             	.LBB246:
 227:../src/umouse_object/imu.cpp ****     uint32_t i = 0;
 228:../src/umouse_object/imu.cpp **** 
 229:../src/umouse_object/imu.cpp **** 
 230:../src/umouse_object/imu.cpp ****     int16_t acc_x[ref_num];
 1085                             		.loc 1 230 0
 1086 04ed FF 2A 22                		add	r2, r2, r10
 1087 04f0 62 4A                   		add	#4, r10
 1088 04f2 75 2A FC                		and #-4, r10
 1089                             	.LBE246:
 231:../src/umouse_object/imu.cpp ****     int16_t acc_y[ref_num];
 232:../src/umouse_object/imu.cpp ****     int16_t acc_z[ref_num];
 233:../src/umouse_object/imu.cpp **** 
 234:../src/umouse_object/imu.cpp ****     float acc_x_sum = 0.0;
 235:../src/umouse_object/imu.cpp ****     float acc_y_sum = 0.0;
 236:../src/umouse_object/imu.cpp ****     float acc_z_sum = 0.0;
 237:../src/umouse_object/imu.cpp **** 
 238:../src/umouse_object/imu.cpp ****     for(uint32_t i=0;i<3;i++)
 239:../src/umouse_object/imu.cpp ****     {
 240:../src/umouse_object/imu.cpp ****         acc_ref[i] = 0;
 241:../src/umouse_object/imu.cpp ****     }
 242:../src/umouse_object/imu.cpp **** 
 243:../src/umouse_object/imu.cpp ****     for(uint32_t i=0;i<ref_num;i++)
 244:../src/umouse_object/imu.cpp ****     {
 245:../src/umouse_object/imu.cpp ****         acc_x[i] = acc_raw[0];
 246:../src/umouse_object/imu.cpp ****         acc_y[i] = acc_raw[1];
 247:../src/umouse_object/imu.cpp ****         acc_z[i] = acc_raw[2];
 248:../src/umouse_object/imu.cpp ****         waitusec(500);
 249:../src/umouse_object/imu.cpp ****         //myprintf3("%d| calibrating... %d, %d, %d\n",i,acc_x[i],acc_y[i],acc_z[i] );
 250:../src/umouse_object/imu.cpp ****     }
 251:../src/umouse_object/imu.cpp ****     quickSort_int16(acc_x,0 ,ref_num -1);
 252:../src/umouse_object/imu.cpp ****     quickSort_int16(acc_y,0 ,ref_num -1);
 253:../src/umouse_object/imu.cpp ****     quickSort_int16(acc_z,0 ,ref_num -1);
 254:../src/umouse_object/imu.cpp **** 
 255:../src/umouse_object/imu.cpp ****     for(i=ref_num/4;i<(ref_num*3/4 +1) ;i++)
 256:../src/umouse_object/imu.cpp ****     {
 257:../src/umouse_object/imu.cpp ****         acc_x_sum += (float)(acc_x[i]);
 258:../src/umouse_object/imu.cpp ****         acc_y_sum += (float)(acc_y[i]);
 259:../src/umouse_object/imu.cpp ****         acc_z_sum += (float)(acc_z[i]);
 260:../src/umouse_object/imu.cpp ****     }
 261:../src/umouse_object/imu.cpp ****     acc_ref[0] = (int16_t)(acc_x_sum/(float)ref_num *2.0);
 262:../src/umouse_object/imu.cpp ****     acc_ref[1] = (int16_t)(acc_y_sum/(float)ref_num *2.0);
 263:../src/umouse_object/imu.cpp ****     acc_ref[2] = (int16_t)(acc_z_sum/(float)ref_num *2.0);
 264:../src/umouse_object/imu.cpp **** 
 265:../src/umouse_object/imu.cpp ****     //writeEEPROMOffsetOmegaInt(&omega_offset_vec[0]);
 266:../src/umouse_object/imu.cpp ****     myprintf3("====mpu9250======\n acc offset %d, %d, %d\n",acc_ref[0],acc_ref[1],acc_ref[2] );
 267:../src/umouse_object/imu.cpp **** }
 1090                             		.loc 1 267 0
 1091 04f5 A0 68                   		mov.L	r0, 4[r6]
 1092                             	.LBB252:
 230:../src/umouse_object/imu.cpp ****     int16_t acc_y[ref_num];
 1093                             		.loc 1 230 0
 1094 04f7 43 A0                   		sub	r10, r0
 1095                             	.LBE252:
 226:../src/umouse_object/imu.cpp ****     uint32_t i = 0;
 1096                             		.loc 1 226 0
 1097 04f9 EF 17                   		mov.L	r1, r7
 1098                             	.LBB253:
 230:../src/umouse_object/imu.cpp ****     int16_t acc_y[ref_num];
 1099                             		.loc 1 230 0
 1100 04fb 71 0B 11                		add	#17, r0, r11
 231:../src/umouse_object/imu.cpp ****     int16_t acc_y[ref_num];
 1101                             		.loc 1 231 0
 1102 04fe 43 A0                   		sub	r10, r0
 1103 0500 71 08 11                		add	#17, r0, r8
 1104                             	.LBB247:
 240:../src/umouse_object/imu.cpp ****     }
 1105                             		.loc 1 240 0
 1106 0503 3D 1D 00                		mov.W	#0, 26[r1]
 1107                             	.LBE247:
 232:../src/umouse_object/imu.cpp **** 
 1108                             		.loc 1 232 0
 1109 0506 43 A0                   		sub	r10, r0
 1110 0508 71 0A 11                		add	#17, r0, r10
 1111                             	.LBB248:
 240:../src/umouse_object/imu.cpp ****     }
 1112                             		.loc 1 240 0
 1113 050b 3D 1E 00                		mov.W	#0, 28[r1]
 1114                             	.LBE248:
 230:../src/umouse_object/imu.cpp ****     int16_t acc_y[ref_num];
 1115                             		.loc 1 230 0
 1116 050e 68 1B                   		shlr	#1, r11
 231:../src/umouse_object/imu.cpp ****     int16_t acc_z[ref_num];
 1117                             		.loc 1 231 0
 1118 0510 68 18                   		shlr	#1, r8
 232:../src/umouse_object/imu.cpp **** 
 1119                             		.loc 1 232 0
 1120 0512 68 1A                   		shlr	#1, r10
 1121                             	.LBB249:
 240:../src/umouse_object/imu.cpp ****     }
 1122                             		.loc 1 240 0
 1123 0514 3D 1F 00                		mov.W	#0, 30[r1]
 1124                             	.LBE249:
 230:../src/umouse_object/imu.cpp ****     int16_t acc_y[ref_num];
 1125                             		.loc 1 230 0
 1126 0517 4B BB                   		add	r11, r11
 1127 0519 E7 6B 02                		mov.L	r11, 8[r6]
 1128                             	.LVL120:
 231:../src/umouse_object/imu.cpp ****     int16_t acc_z[ref_num];
 1129                             		.loc 1 231 0
 1130 051c 4B 88                   		add	r8, r8
 1131                             	.LVL121:
 232:../src/umouse_object/imu.cpp **** 
 1132                             		.loc 1 232 0
 1133 051e 4B AA                   		add	r10, r10
 1134 0520 E3 6A                   		mov.L	r10, [r6]
 1135                             	.LVL122:
 1136                             	.LBB250:
 243:../src/umouse_object/imu.cpp ****     {
 1137                             		.loc 1 243 0
 1138 0522 61 02                   		cmp	#0, r2
 1139 0524 3A E1 00                		beq	.L23
 1140 0527 EF BD                   		mov.L	r11, r13
 1141 0529 EF 8C                   		mov.L	r8, r12
 1142 052b EF AB                   		mov.L	r10, r11
 1143                             	.LVL123:
 1144 052d 66 0A                   		mov.L	#0, r10
 1145                             	.LVL124:
 1146 052f 03                      		.balign 8,3,5
 1147                             	.L25:
 245:../src/umouse_object/imu.cpp ****         acc_y[i] = acc_raw[1];
 1148                             		.loc 1 245 0
 1149 0530 DD 7E 03                		mov.W	6[r7], r14
 248:../src/umouse_object/imu.cpp ****         //myprintf3("%d| calibrating... %d, %d, %d\n",i,acc_x[i],acc_y[i],acc_z[i] );
 1150                             		.loc 1 248 0
 1151 0533 FB 1A F4 01             		mov.L	#0x1f4, r1
 245:../src/umouse_object/imu.cpp ****         acc_y[i] = acc_raw[1];
 1152                             		.loc 1 245 0
 1153 0537 FD 21 DE                		mov.W	r14, [r13+]
 246:../src/umouse_object/imu.cpp ****         acc_z[i] = acc_raw[2];
 1154                             		.loc 1 246 0
 1155 053a DD 7E 04                		mov.W	8[r7], r14
 243:../src/umouse_object/imu.cpp ****     {
 1156                             		.loc 1 243 0
 1157 053d 62 1A                   		add	#1, r10
 1158                             	.LVL125:
 246:../src/umouse_object/imu.cpp ****         acc_z[i] = acc_raw[2];
 1159                             		.loc 1 246 0
 1160 053f FD 21 CE                		mov.W	r14, [r12+]
 247:../src/umouse_object/imu.cpp ****         waitusec(500);
 1161                             		.loc 1 247 0
 1162 0542 DD 7E 05                		mov.W	10[r7], r14
 1163 0545 FD 21 BE                		mov.W	r14, [r11+]
 248:../src/umouse_object/imu.cpp ****         //myprintf3("%d| calibrating... %d, %d, %d\n",i,acc_x[i],acc_y[i],acc_z[i] );
 1164                             		.loc 1 248 0
 1165 0548 05 00 00 00             		bsr	__Z8waitusecm
 1166                             	.LVL126:
 243:../src/umouse_object/imu.cpp ****     {
 1167                             		.loc 1 243 0
 1168 054c 47 9A                   		cmp	r9, r10
 1169 054e 21 E2                   		bne	.L25
 1170                             	.LBE250:
 251:../src/umouse_object/imu.cpp ****     quickSort_int16(acc_y,0 ,ref_num -1);
 1171                             		.loc 1 251 0
 1172 0550 71 9A FF                		add	#-1, r9, r10
 1173                             	.LVL127:
 1174 0553 66 02                   		mov.L	#0, r2
 1175 0555 EF A3                   		mov.L	r10, r3
 1176 0557 A8 E1                   		mov.L	8[r6], r1
 1177 0559 05 00 00 00             		bsr	__Z15quickSort_int16Psmm
 1178                             	.LVL128:
 252:../src/umouse_object/imu.cpp ****     quickSort_int16(acc_z,0 ,ref_num -1);
 1179                             		.loc 1 252 0
 1180 055d EF 81                   		mov.L	r8, r1
 1181 055f 66 02                   		mov.L	#0, r2
 1182 0561 EF A3                   		mov.L	r10, r3
 1183 0563 05 00 00 00             		bsr	__Z15quickSort_int16Psmm
 1184                             	.LVL129:
 253:../src/umouse_object/imu.cpp **** 
 1185                             		.loc 1 253 0
 1186 0567 EC 61                   		mov.L	[r6], r1
 1187 0569 66 02                   		mov.L	#0, r2
 1188 056b EF A3                   		mov.L	r10, r3
 1189 056d 05 00 00 00             		bsr	__Z15quickSort_int16Psmm
 1190                             	.LVL130:
 255:../src/umouse_object/imu.cpp ****     {
 1191                             		.loc 1 255 0
 1192 0571 66 33                   		mov.L	#3, r3
 1193 0573 4F 93                   		mul	r9, r3
 1194 0575 68 23                   		shlr	#2, r3
 1195 0577 FD 82 9A                		shlr	#2, r9, r10
 1196                             	.LVL131:
 1197 057a 62 13                   		add	#1, r3
 1198 057c 47 3A                   		cmp	r3, r10
 1199 057e 23 05 38 AB 00          		bgeu	.L31
 1200                             	.LVL132:
 1201                             		.balign 8,3,2
 1202                             	.L26:
 1203 0583 FF 2E AA                		add	r10, r10, r14
 1204                             	.LBB251:
 243:../src/umouse_object/imu.cpp ****     {
 1205                             		.loc 1 243 0 discriminator 2
 1206 0586 66 0B                   		mov.L	#0x0, r11
 1207 0588 A8 E5                   		mov.L	8[r6], r5
 1208 058a 4B E5                   		add	r14, r5
 1209 058c 4B E8                   		add	r14, r8
 1210                             	.LVL133:
 1211 058e 06 88 6E                		add	[r6], r14
 1212 0591 EF BD                   		mov.L	r11, r13
 1213 0593 EF BC                   		mov.L	r11, r12
 1214                             	.LVL134:
 1215 0595 FC 13 00                		.balign 8,3,5
 1216                             	.L28:
 1217                             	.LBE251:
 257:../src/umouse_object/imu.cpp ****         acc_y_sum += (float)(acc_y[i]);
 1218                             		.loc 1 257 0 discriminator 2
 1219 0598 FD 29 51                		mov.W	[r5+], r1
 258:../src/umouse_object/imu.cpp ****         acc_z_sum += (float)(acc_z[i]);
 1220                             		.loc 1 258 0 discriminator 2
 1221 059b FD 29 82                		mov.W	[r8+], r2
 259:../src/umouse_object/imu.cpp ****     }
 1222                             		.loc 1 259 0 discriminator 2
 1223 059e FD 29 E4                		mov.W	[r14+], r4
 257:../src/umouse_object/imu.cpp ****         acc_y_sum += (float)(acc_y[i]);
 1224                             		.loc 1 257 0 discriminator 2
 1225 05a1 FC 47 11                		itof	r1, r1
 258:../src/umouse_object/imu.cpp ****         acc_z_sum += (float)(acc_z[i]);
 1226                             		.loc 1 258 0 discriminator 2
 1227 05a4 FC 47 22                		itof	r2, r2
 259:../src/umouse_object/imu.cpp ****     }
 1228                             		.loc 1 259 0 discriminator 2
 1229 05a7 FC 47 44                		itof	r4, r4
 255:../src/umouse_object/imu.cpp ****     {
 1230                             		.loc 1 255 0 discriminator 2
 1231 05aa 62 1A                   		add	#1, r10
 1232                             	.LVL135:
 257:../src/umouse_object/imu.cpp ****         acc_y_sum += (float)(acc_y[i]);
 1233                             		.loc 1 257 0 discriminator 2
 1234 05ac FC 8B 1C                		fadd	r1, r12
 1235                             	.LVL136:
 258:../src/umouse_object/imu.cpp ****         acc_z_sum += (float)(acc_z[i]);
 1236                             		.loc 1 258 0 discriminator 2
 1237 05af FC 8B 2D                		fadd	r2, r13
 1238                             	.LVL137:
 259:../src/umouse_object/imu.cpp ****     }
 1239                             		.loc 1 259 0 discriminator 2
 1240 05b2 FC 8B 4B                		fadd	r4, r11
 1241                             	.LVL138:
 255:../src/umouse_object/imu.cpp ****     {
 1242                             		.loc 1 255 0 discriminator 2
 1243 05b5 47 3A                   		cmp	r3, r10
 1244 05b7 23 E1                   		bltu	.L28
 1245                             	.LVL139:
 1246                             		.balign 8,3,2
 1247                             	.L27:
 261:../src/umouse_object/imu.cpp ****     acc_ref[1] = (int16_t)(acc_y_sum/(float)ref_num *2.0);
 1248                             		.loc 1 261 0
 1249 05b9 FC 57 99                		utof	r9, r9
 1250                             	.LVL140:
 1251 05bc FC 93 9C                		fdiv	r9, r12
 1252 05bf FC 8B CC                		fadd	r12, r12
 262:../src/umouse_object/imu.cpp ****     acc_ref[2] = (int16_t)(acc_z_sum/(float)ref_num *2.0);
 1253                             		.loc 1 262 0
 1254 05c2 FC 93 9D                		fdiv	r9, r13
 261:../src/umouse_object/imu.cpp ****     acc_ref[1] = (int16_t)(acc_y_sum/(float)ref_num *2.0);
 1255                             		.loc 1 261 0
 1256 05c5 FC 97 CC                		ftoi	r12, r12
 262:../src/umouse_object/imu.cpp ****     acc_ref[2] = (int16_t)(acc_z_sum/(float)ref_num *2.0);
 1257                             		.loc 1 262 0
 1258 05c8 FC 8B DD                		fadd	r13, r13
 263:../src/umouse_object/imu.cpp **** 
 1259                             		.loc 1 263 0
 1260 05cb FC 93 9B                		fdiv	r9, r11
 261:../src/umouse_object/imu.cpp ****     acc_ref[1] = (int16_t)(acc_y_sum/(float)ref_num *2.0);
 1261                             		.loc 1 261 0
 1262 05ce D7 7C 0D                		mov.W	r12, 26[r7]
 262:../src/umouse_object/imu.cpp ****     acc_ref[2] = (int16_t)(acc_z_sum/(float)ref_num *2.0);
 1263                             		.loc 1 262 0
 1264 05d1 FC 97 DD                		ftoi	r13, r13
 263:../src/umouse_object/imu.cpp **** 
 1265                             		.loc 1 263 0
 1266 05d4 FC 8B BB                		fadd	r11, r11
 262:../src/umouse_object/imu.cpp ****     acc_ref[2] = (int16_t)(acc_z_sum/(float)ref_num *2.0);
 1267                             		.loc 1 262 0
 1268 05d7 D7 7D 0E                		mov.W	r13, 28[r7]
 263:../src/umouse_object/imu.cpp **** 
 1269                             		.loc 1 263 0
 1270 05da FC 97 BB                		ftoi	r11, r11
 1271 05dd D7 7B 0F                		mov.W	r11, 30[r7]
 266:../src/umouse_object/imu.cpp **** }
 1272                             		.loc 1 266 0
 1273 05e0 DD 7B 0D                		mov.W	26[r7], r11
 1274 05e3 DD 7A 0E                		mov.W	28[r7], r10
 1275                             	.LVL141:
 1276 05e6 9B FF                   		mov.W	30[r7], r7
 1277                             	.LVL142:
 1278 05e8 DF BB                   		mov.W	r11, r11
 1279 05ea DF AA                   		mov.W	r10, r10
 1280 05ec DF 77                   		mov.W	r7, r7
 1281 05ee F8 02 2B 00 00 00       		mov.L	#.LC1, [r0]
 1282                             	.LVL143:
 1283 05f4 E7 0B 01                		mov.L	r11, 4[r0]
 1284 05f7 E7 0A 02                		mov.L	r10, 8[r0]
 1285 05fa A0 8F                   		mov.L	r7, 12[r0]
 1286 05fc 05 00 00 00             		bsr	__Z9myprintf3PKcz
 1287                             	.LVL144:
 1288                             	.LBE253:
 1289                             		.loc 1 267 0
 1290 0600 A8 68                   		mov.L	4[r6], r0
 1291                             	.LVL145:
 1292 0602 3F 6D 0F                		rtsd	#60, r6-r13
 1293                             	.LVL146:
 1294                             	.L23:
 1295 0605 EF B1                   		mov.L	r11, r1
 1296                             	.LVL147:
 1297                             	.LBB254:
 251:../src/umouse_object/imu.cpp ****     quickSort_int16(acc_y,0 ,ref_num -1);
 1298                             		.loc 1 251 0
 1299 0607 FB 36 FF                		mov.L	#-1, r3
 1300 060a 05 00 00 00             		bsr	__Z15quickSort_int16Psmm
 1301                             	.LVL148:
 252:../src/umouse_object/imu.cpp ****     quickSort_int16(acc_z,0 ,ref_num -1);
 1302                             		.loc 1 252 0
 1303 060e EF 81                   		mov.L	r8, r1
 1304 0610 EF 92                   		mov.L	r9, r2
 1305 0612 FB 36 FF                		mov.L	#-1, r3
 1306 0615 05 00 00 00             		bsr	__Z15quickSort_int16Psmm
 1307                             	.LVL149:
 253:../src/umouse_object/imu.cpp **** 
 1308                             		.loc 1 253 0
 1309 0619 EC 61                   		mov.L	[r6], r1
 1310 061b EF 92                   		mov.L	r9, r2
 1311 061d FB 36 FF                		mov.L	#-1, r3
 1312 0620 05 00 00 00             		bsr	__Z15quickSort_int16Psmm
 1313                             	.LVL150:
 255:../src/umouse_object/imu.cpp ****     {
 1314                             		.loc 1 255 0
 1315 0624 66 13                   		mov.L	#1, r3
 1316 0626 EF 9A                   		mov.L	r9, r10
 1317                             	.LVL151:
 1318 0628 38 5B FF                		bra	.L26
 1319                             	.LVL152:
 1320                             	.L31:
 236:../src/umouse_object/imu.cpp **** 
 1321                             		.loc 1 236 0
 1322 062b 66 0B                   		mov.L	#0x0, r11
 235:../src/umouse_object/imu.cpp ****     float acc_z_sum = 0.0;
 1323                             		.loc 1 235 0
 1324 062d EF BD                   		mov.L	r11, r13
 234:../src/umouse_object/imu.cpp ****     float acc_y_sum = 0.0;
 1325                             		.loc 1 234 0
 1326 062f EF BC                   		mov.L	r11, r12
 1327 0631 2E 88                   		bra	.L27
 1328                             	.LBE254:
 1329                             	.LFE545:
 1331                             		.global	__ZN9Icm20608G6whoAmIEv
 1333                             	__ZN9Icm20608G6whoAmIEv:
 1334                             	.LFB546:
 268:../src/umouse_object/imu.cpp **** 
 269:../src/umouse_object/imu.cpp **** 
 270:../src/umouse_object/imu.cpp **** 
 271:../src/umouse_object/imu.cpp **** 
 272:../src/umouse_object/imu.cpp **** 
 273:../src/umouse_object/imu.cpp **** uint8_t Icm20608G::whoAmI(void){
 1335                             		.loc 1 273 0
 1336                             	.LVL153:
 1337 0633 60 80                   		sub	#8, r0
 1338                             	.LCFI12:
 1339                             	.LVL154:
 1340                             	.LBB255:
 1341                             	.LBB256:
 274:../src/umouse_object/imu.cpp **** 	return readReg(ICM20608G_REG_WHOAMI);
 275:../src/umouse_object/imu.cpp **** }
 276:../src/umouse_object/imu.cpp **** 
 277:../src/umouse_object/imu.cpp **** void Icm20608G::writeReg(uint8_t adress, uint8_t data){
 278:../src/umouse_object/imu.cpp **** 	uint8_t sendBuf[2];
 279:../src/umouse_object/imu.cpp **** 	uint8_t recvBuf[2];
 280:../src/umouse_object/imu.cpp **** 
 281:../src/umouse_object/imu.cpp **** 	sendBuf[0] = adress;
 282:../src/umouse_object/imu.cpp **** 	sendBuf[1] = data;
 283:../src/umouse_object/imu.cpp **** 	communicateNbyteRSPI0(sendBuf, recvBuf, 2);
 284:../src/umouse_object/imu.cpp **** }
 285:../src/umouse_object/imu.cpp **** 
 286:../src/umouse_object/imu.cpp **** uint8_t Icm20608G::readReg(uint8_t adress){
 287:../src/umouse_object/imu.cpp **** 	uint8_t sendBuf[2];
 288:../src/umouse_object/imu.cpp **** 	uint8_t recvBuf[2];
 289:../src/umouse_object/imu.cpp **** 
 290:../src/umouse_object/imu.cpp **** 	sendBuf[0] = READ_FLAG | adress;
 291:../src/umouse_object/imu.cpp **** 	sendBuf[1] = 0x00;
 292:../src/umouse_object/imu.cpp **** 	communicateNbyteRSPI0(sendBuf, recvBuf, 2);
 1342                             		.loc 1 292 0
 1343 0635 71 01 04                		add	#4, r0, r1
 1344                             	.LVL155:
 1345 0638 EF 02                   		mov.L	r0, r2
 1346 063a 66 23                   		mov	#2, r3
 290:../src/umouse_object/imu.cpp **** 	sendBuf[1] = 0x00;
 1347                             		.loc 1 290 0
 1348 063c F9 04 04 F5             		mov.B	#-11, 4[r0]
 291:../src/umouse_object/imu.cpp **** 	communicateNbyteRSPI0(sendBuf, recvBuf, 2);
 1349                             		.loc 1 291 0
 1350 0640 3C 05 00                		mov.B	#0, 5[r0]
 1351                             		.loc 1 292 0
 1352 0643 05 00 00 00             		bsr	__Z21communicateNbyteRSPI0PhS_h
 1353                             	.LVL156:
 1354                             	.LBE256:
 1355                             	.LBE255:
 275:../src/umouse_object/imu.cpp **** 
 1356                             		.loc 1 275 0
 1357 0647 B0 09                   		movu.B	1[r0], r1
 1358 0649 67 02                   		rtsd	#8
 1359                             	.LFE546:
 1361                             		.global	__ZN9Icm20608G8writeRegEhh
 1363                             	__ZN9Icm20608G8writeRegEhh:
 1364                             	.LFB547:
 277:../src/umouse_object/imu.cpp **** 	uint8_t sendBuf[2];
 1365                             		.loc 1 277 0
 1366                             	.LVL157:
 1367 064b 60 80                   		sub	#8, r0
 1368                             	.LCFI13:
 1369                             	.LBB257:
 281:../src/umouse_object/imu.cpp **** 	sendBuf[1] = data;
 1370                             		.loc 1 281 0
 1371 064d 81 02                   		mov.B	r2, 4[r0]
 282:../src/umouse_object/imu.cpp **** 	communicateNbyteRSPI0(sendBuf, recvBuf, 2);
 1372                             		.loc 1 282 0
 1373 064f 81 0B                   		mov.B	r3, 5[r0]
 283:../src/umouse_object/imu.cpp **** }
 1374                             		.loc 1 283 0
 1375 0651 71 01 04                		add	#4, r0, r1
 1376                             	.LVL158:
 1377 0654 EF 02                   		mov.L	r0, r2
 1378                             	.LVL159:
 1379 0656 66 23                   		mov	#2, r3
 1380                             	.LVL160:
 1381 0658 05 00 00 00             		bsr	__Z21communicateNbyteRSPI0PhS_h
 1382                             	.LVL161:
 1383                             	.LBE257:
 284:../src/umouse_object/imu.cpp **** 
 1384                             		.loc 1 284 0
 1385 065c 67 02                   		rtsd	#8
 1386                             	.LFE547:
 1388                             		.global	__ZN9Icm20608G7readRegEh
 1390                             	__ZN9Icm20608G7readRegEh:
 1391                             	.LFB548:
 286:../src/umouse_object/imu.cpp **** 	uint8_t sendBuf[2];
 1392                             		.loc 1 286 0
 1393                             	.LVL162:
 1394 065e 60 80                   		sub	#8, r0
 1395                             	.LCFI14:
 1396                             	.LBB258:
 290:../src/umouse_object/imu.cpp **** 	sendBuf[1] = 0x00;
 1397                             		.loc 1 290 0
 1398 0660 FB E6 80                		mov.L	#0xffffff80, r14
 1399 0663 57 2E                   		or	r2, r14
 1400                             		.loc 1 292 0
 1401 0665 71 01 04                		add	#4, r0, r1
 1402                             	.LVL163:
 1403 0668 EF 02                   		mov.L	r0, r2
 1404                             	.LVL164:
 1405 066a 66 23                   		mov	#2, r3
 290:../src/umouse_object/imu.cpp **** 	sendBuf[1] = 0x00;
 1406                             		.loc 1 290 0
 1407 066c C7 0E 04                		mov.B	r14, 4[r0]
 291:../src/umouse_object/imu.cpp **** 	communicateNbyteRSPI0(sendBuf, recvBuf, 2);
 1408                             		.loc 1 291 0
 1409 066f 3C 05 00                		mov.B	#0, 5[r0]
 1410                             		.loc 1 292 0
 1411 0672 05 00 00 00             		bsr	__Z21communicateNbyteRSPI0PhS_h
 1412                             	.LVL165:
 1413                             	.LBE258:
 293:../src/umouse_object/imu.cpp **** 	return recvBuf[1];
 294:../src/umouse_object/imu.cpp **** }
 1414                             		.loc 1 294 0
 1415 0676 B0 09                   		movu.B	1[r0], r1
 1416 0678 67 02                   		rtsd	#8
 1417                             	.LFE548:
 1419                             		.global	__ZN9Icm20608G4initEv
 1421                             	__ZN9Icm20608G4initEv:
 1422                             	.LFB549:
 295:../src/umouse_object/imu.cpp **** 
 296:../src/umouse_object/imu.cpp **** 
 297:../src/umouse_object/imu.cpp **** 
 298:../src/umouse_object/imu.cpp **** void Icm20608G::init(){
 1423                             		.loc 1 298 0
 1424                             	.LVL166:
 1425 067a 60 80                   		sub	#8, r0
 1426                             	.LCFI15:
 1427                             	.LVL167:
 1428                             	.LBB259:
 1429                             	.LBB260:
 1430                             	.LBB261:
 283:../src/umouse_object/imu.cpp **** }
 1431                             		.loc 1 283 0
 1432 067c EF 02                   		mov.L	r0, r2
 1433 067e 66 23                   		mov	#2, r3
 1434 0680 66 41                   		mov.L	#4, r1
 1435                             	.LVL168:
 1436 0682 4B 01                   		add	r0, r1
 281:../src/umouse_object/imu.cpp **** 	sendBuf[1] = data;
 1437                             		.loc 1 281 0
 1438 0684 3C 04 6B                		mov.B	#0x6b, 4[r0]
 282:../src/umouse_object/imu.cpp **** 	communicateNbyteRSPI0(sendBuf, recvBuf, 2);
 1439                             		.loc 1 282 0
 1440 0687 F9 04 05 80             		mov.B	#0xffffff80, 5[r0]
 283:../src/umouse_object/imu.cpp **** }
 1441                             		.loc 1 283 0
 1442 068b 05 00 00 00             		bsr	__Z21communicateNbyteRSPI0PhS_h
 1443                             	.LVL169:
 1444                             	.LBE261:
 1445                             	.LBE260:
 299:../src/umouse_object/imu.cpp **** 
 300:../src/umouse_object/imu.cpp **** 	writeReg(MPUREG_PWR_MGMT_1,0x80);
 301:../src/umouse_object/imu.cpp **** 	waitmsec(10);
 1446                             		.loc 1 301 0
 1447 068f 66 A1                   		mov.L	#10, r1
 1448 0691 05 00 00 00             		bsr	__Z8waitmsecm
 1449                             	.LVL170:
 1450                             	.LBB262:
 1451                             	.LBB263:
 283:../src/umouse_object/imu.cpp **** }
 1452                             		.loc 1 283 0
 1453 0695 EF 02                   		mov.L	r0, r2
 1454 0697 66 23                   		mov	#2, r3
 1455 0699 66 41                   		mov.L	#4, r1
 1456 069b 4B 01                   		add	r0, r1
 281:../src/umouse_object/imu.cpp **** 	sendBuf[1] = data;
 1457                             		.loc 1 281 0
 1458 069d 3C 04 6B                		mov.B	#0x6b, 4[r0]
 282:../src/umouse_object/imu.cpp **** 	communicateNbyteRSPI0(sendBuf, recvBuf, 2);
 1459                             		.loc 1 282 0
 1460 06a0 3C 05 00                		mov.B	#0, 5[r0]
 283:../src/umouse_object/imu.cpp **** }
 1461                             		.loc 1 283 0
 1462 06a3 05 00 00 00             		bsr	__Z21communicateNbyteRSPI0PhS_h
 1463                             	.LVL171:
 1464                             	.LBE263:
 1465                             	.LBE262:
 302:../src/umouse_object/imu.cpp **** 	writeReg(MPUREG_PWR_MGMT_1,0x00);
 303:../src/umouse_object/imu.cpp **** 	waitmsec(10);
 1466                             		.loc 1 303 0
 1467 06a7 66 A1                   		mov.L	#10, r1
 1468 06a9 05 00 00 00             		bsr	__Z8waitmsecm
 1469                             	.LVL172:
 1470                             	.LBB264:
 1471                             	.LBB265:
 283:../src/umouse_object/imu.cpp **** }
 1472                             		.loc 1 283 0
 1473 06ad EF 02                   		mov.L	r0, r2
 1474 06af 66 23                   		mov	#2, r3
 1475 06b1 66 41                   		mov.L	#4, r1
 1476 06b3 4B 01                   		add	r0, r1
 281:../src/umouse_object/imu.cpp **** 	sendBuf[1] = data;
 1477                             		.loc 1 281 0
 1478 06b5 3C 04 6C                		mov.B	#0x6c, 4[r0]
 282:../src/umouse_object/imu.cpp **** 	communicateNbyteRSPI0(sendBuf, recvBuf, 2);
 1479                             		.loc 1 282 0
 1480 06b8 3C 05 00                		mov.B	#0, 5[r0]
 283:../src/umouse_object/imu.cpp **** }
 1481                             		.loc 1 283 0
 1482 06bb 05 00 00 00             		bsr	__Z21communicateNbyteRSPI0PhS_h
 1483                             	.LVL173:
 1484                             	.LBE265:
 1485                             	.LBE264:
 304:../src/umouse_object/imu.cpp **** 	writeReg(MPUREG_PWR_MGMT_2,0x00);
 305:../src/umouse_object/imu.cpp **** 	waitmsec(10);
 1486                             		.loc 1 305 0
 1487 06bf 66 A1                   		mov.L	#10, r1
 1488 06c1 05 00 00 00             		bsr	__Z8waitmsecm
 1489                             	.LVL174:
 1490                             	.LBB266:
 1491                             	.LBB267:
 283:../src/umouse_object/imu.cpp **** }
 1492                             		.loc 1 283 0
 1493 06c5 EF 02                   		mov.L	r0, r2
 1494 06c7 66 23                   		mov	#2, r3
 1495 06c9 66 41                   		mov.L	#4, r1
 1496 06cb 4B 01                   		add	r0, r1
 281:../src/umouse_object/imu.cpp **** 	sendBuf[1] = data;
 1497                             		.loc 1 281 0
 1498 06cd 3C 04 1B                		mov.B	#27, 4[r0]
 282:../src/umouse_object/imu.cpp **** 	communicateNbyteRSPI0(sendBuf, recvBuf, 2);
 1499                             		.loc 1 282 0
 1500 06d0 3C 05 18                		mov.B	#24, 5[r0]
 283:../src/umouse_object/imu.cpp **** }
 1501                             		.loc 1 283 0
 1502 06d3 05 00 00 00             		bsr	__Z21communicateNbyteRSPI0PhS_h
 1503                             	.LVL175:
 1504                             	.LBE267:
 1505                             	.LBE266:
 306:../src/umouse_object/imu.cpp **** 
 307:../src/umouse_object/imu.cpp **** 	//55 INT Pin / Bypass Enable Configuration
 308:../src/umouse_object/imu.cpp **** 	//writeReg(0x37, 0x02);
 309:../src/umouse_object/imu.cpp **** 	//waitmsec(10);
 310:../src/umouse_object/imu.cpp **** 
 311:../src/umouse_object/imu.cpp **** 	//Register 26 – Configuration
 312:../src/umouse_object/imu.cpp **** 	//communicateNbyteRSPI1(0x1A, 0x01);
 313:../src/umouse_object/imu.cpp **** 	//waitmsec(10);
 314:../src/umouse_object/imu.cpp **** 
 315:../src/umouse_object/imu.cpp **** 	//range gyro
 316:../src/umouse_object/imu.cpp **** 	writeReg(0x1B, 0x18);
 317:../src/umouse_object/imu.cpp **** 	waitmsec(10);
 1506                             		.loc 1 317 0
 1507 06d7 66 A1                   		mov.L	#10, r1
 1508 06d9 05 00 00 00             		bsr	__Z8waitmsecm
 1509                             	.LVL176:
 1510                             	.LBB268:
 1511                             	.LBB269:
 283:../src/umouse_object/imu.cpp **** }
 1512                             		.loc 1 283 0
 1513 06dd EF 02                   		mov.L	r0, r2
 1514 06df 66 23                   		mov	#2, r3
 1515 06e1 66 41                   		mov.L	#4, r1
 1516 06e3 4B 01                   		add	r0, r1
 281:../src/umouse_object/imu.cpp **** 	sendBuf[1] = data;
 1517                             		.loc 1 281 0
 1518 06e5 3C 04 1C                		mov.B	#28, 4[r0]
 282:../src/umouse_object/imu.cpp **** 	communicateNbyteRSPI0(sendBuf, recvBuf, 2);
 1519                             		.loc 1 282 0
 1520 06e8 3C 05 18                		mov.B	#24, 5[r0]
 283:../src/umouse_object/imu.cpp **** }
 1521                             		.loc 1 283 0
 1522 06eb 05 00 00 00             		bsr	__Z21communicateNbyteRSPI0PhS_h
 1523                             	.LVL177:
 1524                             	.LBE269:
 1525                             	.LBE268:
 318:../src/umouse_object/imu.cpp **** 
 319:../src/umouse_object/imu.cpp **** 	//range acc
 320:../src/umouse_object/imu.cpp **** 	writeReg(0x1C, 0x18);
 321:../src/umouse_object/imu.cpp **** 	waitmsec(10);
 1526                             		.loc 1 321 0
 1527 06ef 66 A1                   		mov.L	#10, r1
 1528 06f1 05 00 00 00             		bsr	__Z8waitmsecm
 1529                             	.LVL178:
 322:../src/umouse_object/imu.cpp **** 
 323:../src/umouse_object/imu.cpp **** 	uint8_t dummy1,dummy2;
 324:../src/umouse_object/imu.cpp **** 	setEnableRSPI0(1);
 1530                             		.loc 1 324 0
 1531 06f5 66 11                   		mov	#1, r1
 1532 06f7 05 00 00 00             		bsr	__Z14setEnableRSPI0h
 1533                             	.LVL179:
 325:../src/umouse_object/imu.cpp **** 	dummy1 = communicate8bitRSPI0(READ_FLAG|0x1c);
 1534                             		.loc 1 325 0
 1535 06fb FB 16 9C                		mov	#0xffffff9c, r1
 1536 06fe 05 00 00 00             		bsr	__Z20communicate8bitRSPI0h
 1537                             	.LVL180:
 326:../src/umouse_object/imu.cpp **** 	dummy2 = communicate8bitRSPI0(0x00);
 1538                             		.loc 1 326 0
 1539 0702 66 01                   		mov	#0, r1
 1540 0704 05 00 00 00             		bsr	__Z20communicate8bitRSPI0h
 1541                             	.LVL181:
 327:../src/umouse_object/imu.cpp **** 	setEnableRSPI0(0);
 1542                             		.loc 1 327 0
 1543 0708 66 01                   		mov	#0, r1
 1544 070a 05 00 00 00             		bsr	__Z14setEnableRSPI0h
 1545                             	.LVL182:
 328:../src/umouse_object/imu.cpp **** 	//myprintf3("0x1c: %x %x \n\n",dummy1, dummy2);
 329:../src/umouse_object/imu.cpp **** 	waitmsec(10);
 1546                             		.loc 1 329 0
 1547 070e 66 A1                   		mov.L	#10, r1
 1548 0710 05 00 00 00             		bsr	__Z8waitmsecm
 1549                             	.LVL183:
 1550                             	.LBE259:
 330:../src/umouse_object/imu.cpp **** 	//書き込み時と読み出し時でSPIの通信速度が異なる
 331:../src/umouse_object/imu.cpp **** 	//RSPI0.SPBR = 1;
 332:../src/umouse_object/imu.cpp **** 
 333:../src/umouse_object/imu.cpp **** }
 1551                             		.loc 1 333 0
 1552 0714 67 02                   		rtsd	#8
 1553                             	.LFE549:
 1555                             		.global	__ZN9Icm20608G6updateEv
 1557                             	__ZN9Icm20608G6updateEv:
 1558                             	.LFB550:
 334:../src/umouse_object/imu.cpp **** 
 335:../src/umouse_object/imu.cpp **** void Icm20608G::update(){
 1559                             		.loc 1 335 0
 1560                             	.LVL184:
 1561 0716 6E 6D                   		pushm	r6-r13
 1562                             	.LCFI16:
 1563 0718 71 00 F0                		add	#-16, r0
 1564                             	.LCFI17:
 1565                             		.loc 1 335 0
 1566 071b EF 17                   		mov.L	r1, r7
 1567                             	.LVL185:
 1568                             	.LBB270:
 1569                             	.LBB271:
 1570                             	.LBB272:
 292:../src/umouse_object/imu.cpp **** 	return recvBuf[1];
 1571                             		.loc 1 292 0
 1572 071d EF 02                   		mov.L	r0, r2
 1573 071f 66 41                   		mov.L	#4, r1
 1574                             	.LVL186:
 1575 0721 4B 01                   		add	r0, r1
 1576 0723 66 23                   		mov	#2, r3
 290:../src/umouse_object/imu.cpp **** 	sendBuf[1] = 0x00;
 1577                             		.loc 1 290 0
 1578 0725 F9 04 04 BB             		mov.B	#0xffffffbb, 4[r0]
 291:../src/umouse_object/imu.cpp **** 	communicateNbyteRSPI0(sendBuf, recvBuf, 2);
 1579                             		.loc 1 291 0
 1580 0729 3C 05 00                		mov.B	#0, 5[r0]
 292:../src/umouse_object/imu.cpp **** 	return recvBuf[1];
 1581                             		.loc 1 292 0
 1582 072c 05 00 00 00             		bsr	__Z21communicateNbyteRSPI0PhS_h
 1583                             	.LVL187:
 1584                             	.LBE272:
 1585                             	.LBE271:
 1586                             	.LBB274:
 1587                             	.LBB275:
 1588 0730 66 41                   		mov.L	#4, r1
 1589 0732 4B 01                   		add	r0, r1
 1590 0734 EF 02                   		mov.L	r0, r2
 1591 0736 66 23                   		mov	#2, r3
 1592                             	.LBE275:
 1593                             	.LBE274:
 1594                             	.LBB278:
 1595                             	.LBB273:
 293:../src/umouse_object/imu.cpp **** }
 1596                             		.loc 1 293 0
 1597 0738 CD 08 01                		mov.B	1[r0], r8
 1598                             	.LVL188:
 1599                             	.LBE273:
 1600                             	.LBE278:
 1601                             	.LBB279:
 1602                             	.LBB276:
 290:../src/umouse_object/imu.cpp **** 	sendBuf[1] = 0x00;
 1603                             		.loc 1 290 0
 1604 073b F9 04 04 BC             		mov.B	#0xffffffbc, 4[r0]
 291:../src/umouse_object/imu.cpp **** 	communicateNbyteRSPI0(sendBuf, recvBuf, 2);
 1605                             		.loc 1 291 0
 1606 073f 3C 05 00                		mov.B	#0, 5[r0]
 292:../src/umouse_object/imu.cpp **** 	return recvBuf[1];
 1607                             		.loc 1 292 0
 1608 0742 05 00 00 00             		bsr	__Z21communicateNbyteRSPI0PhS_h
 1609                             	.LVL189:
 1610                             	.LBE276:
 1611                             	.LBE279:
 1612                             	.LBB280:
 1613                             	.LBB281:
 1614 0746 66 41                   		mov.L	#4, r1
 1615 0748 4B 01                   		add	r0, r1
 1616 074a EF 02                   		mov.L	r0, r2
 1617 074c 66 23                   		mov	#2, r3
 1618                             	.LBE281:
 1619                             	.LBE280:
 1620                             	.LBB284:
 1621                             	.LBB277:
 293:../src/umouse_object/imu.cpp **** }
 1622                             		.loc 1 293 0
 1623 074e 88 0E                   		mov.B	1[r0], r6
 1624                             	.LVL190:
 1625                             	.LBE277:
 1626                             	.LBE284:
 1627                             	.LBB285:
 1628                             	.LBB282:
 290:../src/umouse_object/imu.cpp **** 	sendBuf[1] = 0x00;
 1629                             		.loc 1 290 0
 1630 0750 F9 04 04 BD             		mov.B	#0xffffffbd, 4[r0]
 291:../src/umouse_object/imu.cpp **** 	communicateNbyteRSPI0(sendBuf, recvBuf, 2);
 1631                             		.loc 1 291 0
 1632 0754 3C 05 00                		mov.B	#0, 5[r0]
 292:../src/umouse_object/imu.cpp **** 	return recvBuf[1];
 1633                             		.loc 1 292 0
 1634 0757 05 00 00 00             		bsr	__Z21communicateNbyteRSPI0PhS_h
 1635                             	.LVL191:
 1636                             	.LBE282:
 1637                             	.LBE285:
 1638                             	.LBB286:
 1639                             	.LBB287:
 1640 075b 66 41                   		mov.L	#4, r1
 1641 075d 4B 01                   		add	r0, r1
 1642 075f EF 02                   		mov.L	r0, r2
 1643 0761 66 23                   		mov	#2, r3
 1644                             	.LBE287:
 1645                             	.LBE286:
 1646                             	.LBB290:
 1647                             	.LBB283:
 293:../src/umouse_object/imu.cpp **** }
 1648                             		.loc 1 293 0
 1649 0763 CD 0D 01                		mov.B	1[r0], r13
 1650                             	.LVL192:
 1651                             	.LBE283:
 1652                             	.LBE290:
 1653                             	.LBB291:
 1654                             	.LBB288:
 290:../src/umouse_object/imu.cpp **** 	sendBuf[1] = 0x00;
 1655                             		.loc 1 290 0
 1656 0766 F9 04 04 BE             		mov.B	#0xffffffbe, 4[r0]
 291:../src/umouse_object/imu.cpp **** 	communicateNbyteRSPI0(sendBuf, recvBuf, 2);
 1657                             		.loc 1 291 0
 1658 076a 3C 05 00                		mov.B	#0, 5[r0]
 292:../src/umouse_object/imu.cpp **** 	return recvBuf[1];
 1659                             		.loc 1 292 0
 1660 076d 05 00 00 00             		bsr	__Z21communicateNbyteRSPI0PhS_h
 1661                             	.LVL193:
 1662                             	.LBE288:
 1663                             	.LBE291:
 1664                             	.LBB292:
 1665                             	.LBB293:
 1666 0771 66 41                   		mov.L	#4, r1
 1667 0773 4B 01                   		add	r0, r1
 1668 0775 EF 02                   		mov.L	r0, r2
 1669 0777 66 23                   		mov	#2, r3
 1670                             	.LBE293:
 1671                             	.LBE292:
 1672                             	.LBB296:
 1673                             	.LBB289:
 293:../src/umouse_object/imu.cpp **** }
 1674                             		.loc 1 293 0
 1675 0779 CD 09 01                		mov.B	1[r0], r9
 1676                             	.LVL194:
 1677                             	.LBE289:
 1678                             	.LBE296:
 1679                             	.LBB297:
 1680                             	.LBB294:
 290:../src/umouse_object/imu.cpp **** 	sendBuf[1] = 0x00;
 1681                             		.loc 1 290 0
 1682 077c F9 04 04 BF             		mov.B	#0xffffffbf, 4[r0]
 291:../src/umouse_object/imu.cpp **** 	communicateNbyteRSPI0(sendBuf, recvBuf, 2);
 1683                             		.loc 1 291 0
 1684 0780 3C 05 00                		mov.B	#0, 5[r0]
 292:../src/umouse_object/imu.cpp **** 	return recvBuf[1];
 1685                             		.loc 1 292 0
 1686 0783 05 00 00 00             		bsr	__Z21communicateNbyteRSPI0PhS_h
 1687                             	.LVL195:
 1688                             	.LBE294:
 1689                             	.LBE297:
 1690                             	.LBB298:
 1691                             	.LBB299:
 1692 0787 66 41                   		mov.L	#4, r1
 1693 0789 4B 01                   		add	r0, r1
 1694 078b EF 02                   		mov.L	r0, r2
 1695 078d 66 23                   		mov	#2, r3
 1696                             	.LBE299:
 1697                             	.LBE298:
 1698                             	.LBB302:
 1699                             	.LBB295:
 293:../src/umouse_object/imu.cpp **** }
 1700                             		.loc 1 293 0
 1701 078f CD 0B 01                		mov.B	1[r0], r11
 1702                             	.LVL196:
 1703                             	.LBE295:
 1704                             	.LBE302:
 1705                             	.LBB303:
 1706                             	.LBB300:
 290:../src/umouse_object/imu.cpp **** 	sendBuf[1] = 0x00;
 1707                             		.loc 1 290 0
 1708 0792 F9 04 04 C0             		mov.B	#-64, 4[r0]
 291:../src/umouse_object/imu.cpp **** 	communicateNbyteRSPI0(sendBuf, recvBuf, 2);
 1709                             		.loc 1 291 0
 1710 0796 3C 05 00                		mov.B	#0, 5[r0]
 292:../src/umouse_object/imu.cpp **** 	return recvBuf[1];
 1711                             		.loc 1 292 0
 1712 0799 05 00 00 00             		bsr	__Z21communicateNbyteRSPI0PhS_h
 1713                             	.LVL197:
 1714                             	.LBE300:
 1715                             	.LBE303:
 1716                             	.LBB304:
 1717                             	.LBB305:
 1718 079d 66 41                   		mov.L	#4, r1
 1719 079f 4B 01                   		add	r0, r1
 1720 07a1 EF 02                   		mov.L	r0, r2
 1721 07a3 66 23                   		mov	#2, r3
 1722                             	.LBE305:
 1723                             	.LBE304:
 1724                             	.LBB308:
 1725                             	.LBB301:
 293:../src/umouse_object/imu.cpp **** }
 1726                             		.loc 1 293 0
 1727 07a5 CD 0C 01                		mov.B	1[r0], r12
 1728                             	.LVL198:
 1729                             	.LBE301:
 1730                             	.LBE308:
 1731                             	.LBB309:
 1732                             	.LBB306:
 290:../src/umouse_object/imu.cpp **** 	sendBuf[1] = 0x00;
 1733                             		.loc 1 290 0
 1734 07a8 F9 04 04 C1             		mov.B	#-63, 4[r0]
 291:../src/umouse_object/imu.cpp **** 	communicateNbyteRSPI0(sendBuf, recvBuf, 2);
 1735                             		.loc 1 291 0
 1736 07ac 3C 05 00                		mov.B	#0, 5[r0]
 292:../src/umouse_object/imu.cpp **** 	return recvBuf[1];
 1737                             		.loc 1 292 0
 1738 07af 05 00 00 00             		bsr	__Z21communicateNbyteRSPI0PhS_h
 1739                             	.LVL199:
 1740                             	.LBE306:
 1741                             	.LBE309:
 1742                             	.LBB310:
 1743                             	.LBB311:
 1744 07b3 66 41                   		mov.L	#4, r1
 1745 07b5 4B 01                   		add	r0, r1
 1746 07b7 EF 02                   		mov.L	r0, r2
 1747 07b9 66 23                   		mov	#2, r3
 1748                             	.LBE311:
 1749                             	.LBE310:
 1750                             	.LBB314:
 1751                             	.LBB307:
 293:../src/umouse_object/imu.cpp **** }
 1752                             		.loc 1 293 0
 1753 07bb C5 00 01 08             		mov.B	1[r0], 8[r0]
 1754                             	.LVL200:
 1755                             	.LBE307:
 1756                             	.LBE314:
 1757                             	.LBB315:
 1758                             	.LBB312:
 290:../src/umouse_object/imu.cpp **** 	sendBuf[1] = 0x00;
 1759                             		.loc 1 290 0
 1760 07bf F9 04 04 C2             		mov.B	#-62, 4[r0]
 291:../src/umouse_object/imu.cpp **** 	communicateNbyteRSPI0(sendBuf, recvBuf, 2);
 1761                             		.loc 1 291 0
 1762 07c3 3C 05 00                		mov.B	#0, 5[r0]
 292:../src/umouse_object/imu.cpp **** 	return recvBuf[1];
 1763                             		.loc 1 292 0
 1764 07c6 05 00 00 00             		bsr	__Z21communicateNbyteRSPI0PhS_h
 1765                             	.LVL201:
 1766                             	.LBE312:
 1767                             	.LBE315:
 1768                             	.LBB316:
 1769                             	.LBB317:
 1770 07ca 66 41                   		mov.L	#4, r1
 1771 07cc 4B 01                   		add	r0, r1
 1772 07ce EF 02                   		mov.L	r0, r2
 1773 07d0 66 23                   		mov	#2, r3
 1774                             	.LBE317:
 1775                             	.LBE316:
 1776                             	.LBB320:
 1777                             	.LBB313:
 293:../src/umouse_object/imu.cpp **** }
 1778                             		.loc 1 293 0
 1779 07d2 C5 00 01 09             		mov.B	1[r0], 9[r0]
 1780                             	.LVL202:
 1781                             	.LBE313:
 1782                             	.LBE320:
 1783                             	.LBB321:
 1784                             	.LBB318:
 290:../src/umouse_object/imu.cpp **** 	sendBuf[1] = 0x00;
 1785                             		.loc 1 290 0
 1786 07d6 F9 04 04 C3             		mov.B	#-61, 4[r0]
 291:../src/umouse_object/imu.cpp **** 	communicateNbyteRSPI0(sendBuf, recvBuf, 2);
 1787                             		.loc 1 291 0
 1788 07da 3C 05 00                		mov.B	#0, 5[r0]
 292:../src/umouse_object/imu.cpp **** 	return recvBuf[1];
 1789                             		.loc 1 292 0
 1790 07dd 05 00 00 00             		bsr	__Z21communicateNbyteRSPI0PhS_h
 1791                             	.LVL203:
 1792                             	.LBE318:
 1793                             	.LBE321:
 1794                             	.LBB322:
 1795                             	.LBB323:
 1796 07e1 66 41                   		mov.L	#4, r1
 1797 07e3 4B 01                   		add	r0, r1
 1798 07e5 EF 02                   		mov.L	r0, r2
 1799 07e7 66 23                   		mov	#2, r3
 1800                             	.LBE323:
 1801                             	.LBE322:
 1802                             	.LBB326:
 1803                             	.LBB319:
 293:../src/umouse_object/imu.cpp **** }
 1804                             		.loc 1 293 0
 1805 07e9 C5 00 01 0A             		mov.B	1[r0], 10[r0]
 1806                             	.LVL204:
 1807                             	.LBE319:
 1808                             	.LBE326:
 1809                             	.LBB327:
 1810                             	.LBB324:
 290:../src/umouse_object/imu.cpp **** 	sendBuf[1] = 0x00;
 1811                             		.loc 1 290 0
 1812 07ed F9 04 04 C4             		mov.B	#-60, 4[r0]
 291:../src/umouse_object/imu.cpp **** 	communicateNbyteRSPI0(sendBuf, recvBuf, 2);
 1813                             		.loc 1 291 0
 1814 07f1 3C 05 00                		mov.B	#0, 5[r0]
 292:../src/umouse_object/imu.cpp **** 	return recvBuf[1];
 1815                             		.loc 1 292 0
 1816 07f4 05 00 00 00             		bsr	__Z21communicateNbyteRSPI0PhS_h
 1817                             	.LVL205:
 1818                             	.LBE324:
 1819                             	.LBE327:
 1820                             	.LBB328:
 1821                             	.LBB329:
 1822 07f8 66 41                   		mov.L	#4, r1
 1823 07fa 4B 01                   		add	r0, r1
 1824 07fc EF 02                   		mov.L	r0, r2
 1825 07fe 66 23                   		mov	#2, r3
 1826                             	.LBE329:
 1827                             	.LBE328:
 1828                             	.LBB332:
 1829                             	.LBB325:
 293:../src/umouse_object/imu.cpp **** }
 1830                             		.loc 1 293 0
 1831 0800 C5 00 01 0B             		mov.B	1[r0], 11[r0]
 1832                             	.LVL206:
 1833                             	.LBE325:
 1834                             	.LBE332:
 1835                             	.LBB333:
 1836                             	.LBB330:
 290:../src/umouse_object/imu.cpp **** 	sendBuf[1] = 0x00;
 1837                             		.loc 1 290 0
 1838 0804 F9 04 04 C5             		mov.B	#-59, 4[r0]
 291:../src/umouse_object/imu.cpp **** 	communicateNbyteRSPI0(sendBuf, recvBuf, 2);
 1839                             		.loc 1 291 0
 1840 0808 3C 05 00                		mov.B	#0, 5[r0]
 292:../src/umouse_object/imu.cpp **** 	return recvBuf[1];
 1841                             		.loc 1 292 0
 1842 080b 05 00 00 00             		bsr	__Z21communicateNbyteRSPI0PhS_h
 1843                             	.LVL207:
 1844                             	.LBE330:
 1845                             	.LBE333:
 1846                             	.LBB334:
 1847                             	.LBB335:
 1848 080f 66 41                   		mov.L	#4, r1
 1849 0811 4B 01                   		add	r0, r1
 1850 0813 EF 02                   		mov.L	r0, r2
 1851 0815 66 23                   		mov	#2, r3
 1852                             	.LBE335:
 1853                             	.LBE334:
 1854                             	.LBB338:
 1855                             	.LBB331:
 293:../src/umouse_object/imu.cpp **** }
 1856                             		.loc 1 293 0
 1857 0817 C5 00 01 0C             		mov.B	1[r0], 12[r0]
 1858                             	.LVL208:
 1859                             	.LBE331:
 1860                             	.LBE338:
 1861                             	.LBB339:
 1862                             	.LBB336:
 290:../src/umouse_object/imu.cpp **** 	sendBuf[1] = 0x00;
 1863                             		.loc 1 290 0
 1864 081b F9 04 04 C6             		mov.B	#-58, 4[r0]
 291:../src/umouse_object/imu.cpp **** 	communicateNbyteRSPI0(sendBuf, recvBuf, 2);
 1865                             		.loc 1 291 0
 1866 081f 3C 05 00                		mov.B	#0, 5[r0]
 292:../src/umouse_object/imu.cpp **** 	return recvBuf[1];
 1867                             		.loc 1 292 0
 1868 0822 05 00 00 00             		bsr	__Z21communicateNbyteRSPI0PhS_h
 1869                             	.LVL209:
 1870                             	.LBE336:
 1871                             	.LBE339:
 1872                             	.LBB340:
 1873                             	.LBB341:
 1874 0826 66 41                   		mov.L	#4, r1
 1875 0828 4B 01                   		add	r0, r1
 1876 082a EF 02                   		mov.L	r0, r2
 1877 082c 66 23                   		mov	#2, r3
 1878                             	.LBE341:
 1879                             	.LBE340:
 1880                             	.LBB344:
 1881                             	.LBB337:
 293:../src/umouse_object/imu.cpp **** }
 1882                             		.loc 1 293 0
 1883 082e C5 00 01 0D             		mov.B	1[r0], 13[r0]
 1884                             	.LVL210:
 1885                             	.LBE337:
 1886                             	.LBE344:
 1887                             	.LBB345:
 1888                             	.LBB342:
 290:../src/umouse_object/imu.cpp **** 	sendBuf[1] = 0x00;
 1889                             		.loc 1 290 0
 1890 0832 F9 04 04 C7             		mov.B	#-57, 4[r0]
 291:../src/umouse_object/imu.cpp **** 	communicateNbyteRSPI0(sendBuf, recvBuf, 2);
 1891                             		.loc 1 291 0
 1892 0836 3C 05 00                		mov.B	#0, 5[r0]
 292:../src/umouse_object/imu.cpp **** 	return recvBuf[1];
 1893                             		.loc 1 292 0
 1894 0839 05 00 00 00             		bsr	__Z21communicateNbyteRSPI0PhS_h
 1895                             	.LVL211:
 1896                             	.LBE342:
 1897                             	.LBE345:
 1898                             	.LBB346:
 1899                             	.LBB347:
 1900 083d 66 23                   		mov	#2, r3
 1901 083f 66 41                   		mov.L	#4, r1
 1902 0841 4B 01                   		add	r0, r1
 1903 0843 EF 02                   		mov.L	r0, r2
 1904                             	.LBE347:
 1905                             	.LBE346:
 1906                             	.LBB350:
 1907                             	.LBB343:
 293:../src/umouse_object/imu.cpp **** }
 1908                             		.loc 1 293 0
 1909 0845 CD 0A 01                		mov.B	1[r0], r10
 1910                             	.LVL212:
 1911                             	.LBE343:
 1912                             	.LBE350:
 1913                             	.LBB351:
 1914                             	.LBB348:
 290:../src/umouse_object/imu.cpp **** 	sendBuf[1] = 0x00;
 1915                             		.loc 1 290 0
 1916 0848 F9 04 04 C8             		mov.B	#-56, 4[r0]
 291:../src/umouse_object/imu.cpp **** 	communicateNbyteRSPI0(sendBuf, recvBuf, 2);
 1917                             		.loc 1 291 0
 1918 084c 3C 05 00                		mov.B	#0, 5[r0]
 292:../src/umouse_object/imu.cpp **** 	return recvBuf[1];
 1919                             		.loc 1 292 0
 1920 084f 05 00 00 00             		bsr	__Z21communicateNbyteRSPI0PhS_h
 1921                             	.LVL213:
 1922                             	.LBE348:
 1923                             	.LBE351:
 336:../src/umouse_object/imu.cpp **** 
 337:../src/umouse_object/imu.cpp **** 	uint8_t accel_xout_h = readReg(0x3b);
 338:../src/umouse_object/imu.cpp **** 	uint8_t accel_xout_l = readReg(0x3c);
 339:../src/umouse_object/imu.cpp **** 
 340:../src/umouse_object/imu.cpp **** 	uint8_t accel_yout_h = readReg(0x3d);
 341:../src/umouse_object/imu.cpp **** 	uint8_t accel_yout_l = readReg(0x3e);
 342:../src/umouse_object/imu.cpp **** 
 343:../src/umouse_object/imu.cpp **** 	uint8_t accel_zout_h = readReg(0x3f);
 344:../src/umouse_object/imu.cpp **** 	uint8_t accel_zout_l = readReg(0x40);
 345:../src/umouse_object/imu.cpp **** 
 346:../src/umouse_object/imu.cpp **** 	uint8_t temp_out_h   = readReg(0x41);
 347:../src/umouse_object/imu.cpp **** 	uint8_t temp_out_l   = readReg(0x42);
 348:../src/umouse_object/imu.cpp **** 
 349:../src/umouse_object/imu.cpp **** 	uint8_t gyro_xout_h  = readReg(0x43);
 350:../src/umouse_object/imu.cpp **** 	uint8_t gyro_xout_l  = readReg(0x44);
 351:../src/umouse_object/imu.cpp **** 
 352:../src/umouse_object/imu.cpp **** 	uint8_t gyro_yout_h  = readReg(0x45);
 353:../src/umouse_object/imu.cpp **** 	uint8_t gyro_yout_l  = readReg(0x46);
 354:../src/umouse_object/imu.cpp **** 	uint8_t gyro_zout_h  = readReg(0x47);
 355:../src/umouse_object/imu.cpp **** 	uint8_t gyro_zout_l  = readReg(0x48);
 356:../src/umouse_object/imu.cpp **** 	acc_raw[0] = - concatenate2Byte_int(accel_xout_h, accel_xout_l);
 1924                             		.loc 1 356 0
 1925 0853 CF 62                   		mov.B	r6, r2
 1926 0855 CF 81                   		mov.B	r8, r1
 1927                             	.LBB352:
 1928                             	.LBB349:
 293:../src/umouse_object/imu.cpp **** }
 1929                             		.loc 1 293 0
 1930 0857 CD 08 01                		mov.B	1[r0], r8
 1931                             	.LVL214:
 1932                             	.LBE349:
 1933                             	.LBE352:
 1934                             		.loc 1 356 0
 1935 085a 05 00 00 00             		bsr	__Z20concatenate2Byte_inthh
 1936                             	.LVL215:
 1937 085e 7E 11                   		neg	r1
 357:../src/umouse_object/imu.cpp **** 	acc_raw[1] = - concatenate2Byte_int(accel_yout_h, accel_yout_l);
 1938                             		.loc 1 357 0
 1939 0860 CF 92                   		mov.B	r9, r2
 356:../src/umouse_object/imu.cpp **** 	acc_raw[1] = - concatenate2Byte_int(accel_yout_h, accel_yout_l);
 1940                             		.loc 1 356 0
 1941 0862 90 F9                   		mov.W	r1, 6[r7]
 1942                             		.loc 1 357 0
 1943 0864 CF D1                   		mov.B	r13, r1
 1944 0866 05 00 00 00             		bsr	__Z20concatenate2Byte_inthh
 1945                             	.LVL216:
 1946 086a 7E 11                   		neg	r1
 358:../src/umouse_object/imu.cpp **** 	acc_raw[2] = - concatenate2Byte_int(accel_zout_h, accel_zout_l);
 1947                             		.loc 1 358 0
 1948 086c CF C2                   		mov.B	r12, r2
 357:../src/umouse_object/imu.cpp **** 	acc_raw[1] = - concatenate2Byte_int(accel_yout_h, accel_yout_l);
 1949                             		.loc 1 357 0
 1950 086e 91 71                   		mov.W	r1, 8[r7]
 1951                             		.loc 1 358 0
 1952 0870 CF B1                   		mov.B	r11, r1
 1953 0872 05 00 00 00             		bsr	__Z20concatenate2Byte_inthh
 1954                             	.LVL217:
 1955 0876 7E 11                   		neg	r1
 359:../src/umouse_object/imu.cpp **** 
 360:../src/umouse_object/imu.cpp **** 	omega_raw[0] = concatenate2Byte_int(gyro_xout_h, gyro_xout_l);
 1956                             		.loc 1 360 0
 1957 0878 8A 8A                   		mov.B	11[r0], r2
 358:../src/umouse_object/imu.cpp **** 	acc_raw[2] = - concatenate2Byte_int(accel_zout_h, accel_zout_l);
 1958                             		.loc 1 358 0
 1959 087a 91 79                   		mov.W	r1, 10[r7]
 1960                             		.loc 1 360 0
 1961 087c 8A 81                   		mov.B	10[r0], r1
 1962 087e 05 00 00 00             		bsr	__Z20concatenate2Byte_inthh
 1963                             	.LVL218:
 361:../src/umouse_object/imu.cpp **** 	omega_raw[1] = concatenate2Byte_int(gyro_yout_h, gyro_yout_l);
 1964                             		.loc 1 361 0
 1965 0882 8B 0A                   		mov.B	13[r0], r2
 360:../src/umouse_object/imu.cpp **** 	omega_raw[1] = concatenate2Byte_int(gyro_yout_h, gyro_yout_l);
 1966                             		.loc 1 360 0
 1967 0884 D3 71                   		mov.W	r1, [r7]
 1968                             		.loc 1 361 0
 1969 0886 8B 01                   		mov.B	12[r0], r1
 1970 0888 05 00 00 00             		bsr	__Z20concatenate2Byte_inthh
 1971                             	.LVL219:
 362:../src/umouse_object/imu.cpp **** 	omega_raw[2] = concatenate2Byte_int(gyro_zout_h, gyro_zout_l);
 1972                             		.loc 1 362 0
 1973 088c CF 82                   		mov.B	r8, r2
 361:../src/umouse_object/imu.cpp **** 	omega_raw[1] = concatenate2Byte_int(gyro_yout_h, gyro_yout_l);
 1974                             		.loc 1 361 0
 1975 088e 90 79                   		mov.W	r1, 2[r7]
 1976                             		.loc 1 362 0
 1977 0890 CF A1                   		mov.B	r10, r1
 1978 0892 05 00 00 00             		bsr	__Z20concatenate2Byte_inthh
 1979                             	.LVL220:
 1980 0896 90 F1                   		mov.W	r1, 4[r7]
 363:../src/umouse_object/imu.cpp **** 
 364:../src/umouse_object/imu.cpp **** 
 365:../src/umouse_object/imu.cpp **** 	//mag_row[];
 366:../src/umouse_object/imu.cpp **** 	temp_raw = concatenate2Byte_int(temp_out_h, temp_out_l);
 1981                             		.loc 1 366 0
 1982 0898 8A 01                   		mov.B	8[r0], r1
 1983 089a 8A 0A                   		mov.B	9[r0], r2
 1984 089c 05 00 00 00             		bsr	__Z20concatenate2Byte_inthh
 1985                             	.LVL221:
 1986 08a0 91 F1                   		mov.W	r1, 12[r7]
 1987                             	.LVL222:
 1988                             	.LBB353:
 367:../src/umouse_object/imu.cpp **** 	for(int i=0;i<3;i++){
 368:../src/umouse_object/imu.cpp **** 		omega_c[i] = omega_raw[i] - omega_ref[i];
 1989                             		.loc 1 368 0
 1990 08a2 DC 7B                   		mov.W	[r7], r11
 1991                             	.LVL223:
 1992 08a4 DD 7A 07                		mov.W	14[r7], r10
 1993                             	.LVL224:
 1994 08a7 FF 0A AB                		sub	r10, r11, r10
 1995 08aa D7 7A 0D                		mov.W	r10, 26[r7]
 369:../src/umouse_object/imu.cpp **** 		omega_f[i] = omega_c[i] *MPU9250G_2000dps;
 1996                             		.loc 1 369 0
 1997 08ad DD 7A 0D                		mov.W	26[r7], r10
 1998 08b0 FC 47 AA                		itof	r10, r10
 1999 08b3 FD 72 3A 90 C1 79 3D    		fmul	#0x3d79c190, r10
 2000 08ba E7 7A 0B                		mov.L	r10, 44[r7]
 2001                             	.LVL225:
 368:../src/umouse_object/imu.cpp **** 		omega_f[i] = omega_c[i] *MPU9250G_2000dps;
 2002                             		.loc 1 368 0
 2003 08bd DD 7B 01                		mov.W	2[r7], r11
 2004 08c0 DD 7A 08                		mov.W	16[r7], r10
 2005 08c3 FF 0A AB                		sub	r10, r11, r10
 2006 08c6 D7 7A 0E                		mov.W	r10, 28[r7]
 2007                             		.loc 1 369 0
 2008 08c9 DD 7A 0E                		mov.W	28[r7], r10
 2009 08cc FC 47 AA                		itof	r10, r10
 2010 08cf FD 72 3A 90 C1 79 3D    		fmul	#0x3d79c190, r10
 2011 08d6 E7 7A 0C                		mov.L	r10, 48[r7]
 2012                             	.LVL226:
 368:../src/umouse_object/imu.cpp **** 		omega_f[i] = omega_c[i] *MPU9250G_2000dps;
 2013                             		.loc 1 368 0
 2014 08d9 DD 7B 02                		mov.W	4[r7], r11
 2015 08dc DD 7A 09                		mov.W	18[r7], r10
 2016 08df FF 0A AB                		sub	r10, r11, r10
 2017 08e2 D7 7A 0F                		mov.W	r10, 30[r7]
 2018                             		.loc 1 369 0
 2019 08e5 DD 7A 0F                		mov.W	30[r7], r10
 2020 08e8 FC 47 AA                		itof	r10, r10
 2021 08eb FD 72 3A 90 C1 79 3D    		fmul	#0x3d79c190, r10
 2022 08f2 E7 7A 0D                		mov.L	r10, 52[r7]
 2023                             	.LVL227:
 2024                             	.LBE353:
 2025                             	.LBE270:
 370:../src/umouse_object/imu.cpp **** 	}
 371:../src/umouse_object/imu.cpp **** }
 2026                             		.loc 1 371 0
 2027 08f5 3F 6D 0C                		rtsd	#48, r6-r13
 2028                             	.LFE550:
 2030                             		.section	.rodata.str1.1
 2031                             	.LC2:
 2032 0055 25 64 7C 20 63 61 6C 69 		.string	"%d| calibrating... %d, %d, %d\n"
 2032      62 72 61 74 69 6E 67 2E 
 2032      2E 2E 20 25 64 2C 20 25 
 2032      64 2C 20 25 64 0A 00 
 2033                             	.LC3:
 2034 0074 3D 3D 3D 3D 3D 69 63 6D 		.string	"=====icm20608g=====\n gyro offset %d, %d, %d\n"
 2034      32 30 36 30 38 67 3D 3D 
 2034      3D 3D 3D 0A 20 67 79 72 
 2034      6F 20 6F 66 66 73 65 74 
 2034      20 25 64 2C 20 25 64 2C 
 2035                             		.section P,"ax"
 2036                             		.global	__ZN9Icm20608G16calibOmegaOffsetEv
 2038                             	__ZN9Icm20608G16calibOmegaOffsetEv:
 2039                             	.LFB551:
 372:../src/umouse_object/imu.cpp **** 
 373:../src/umouse_object/imu.cpp **** 
 374:../src/umouse_object/imu.cpp **** 
 375:../src/umouse_object/imu.cpp **** 
 376:../src/umouse_object/imu.cpp **** /**
 377:../src/umouse_object/imu.cpp ****  * ジャイロオフセット設定用関数<br>
 378:../src/umouse_object/imu.cpp ****  * 静止状態でNUM_REF回のサンプルを取り, そのデータの上位25%と下位25%の値
 379:../src/umouse_object/imu.cpp ****  * クイックソートによって取り除く残りの50%で平均値を求めオフセットと
 380:../src/umouse_object/imu.cpp ****  *
 381:../src/umouse_object/imu.cpp ****  */
 382:../src/umouse_object/imu.cpp **** void  Icm20608G::calibOmegaOffset()
 383:../src/umouse_object/imu.cpp **** {
 2040                             		.loc 1 383 0
 2041                             	.LVL228:
 2042 08f8 6E 6C                   		pushm	r6-r12
 2043                             	.LCFI18:
 2044 08fa 72 00 8C F6             		add	#0xfffff68c, r0
 2045                             	.LCFI19:
 2046                             	.LVL229:
 2047                             		.loc 1 383 0
 2048 08fe EF 1A                   		mov.L	r1, r10
 2049                             	.LBB354:
 2050                             	.LBB355:
 384:../src/umouse_object/imu.cpp **** 	uint32_t i = 0;
 385:../src/umouse_object/imu.cpp **** 	uint32_t ref_num = 400;
 386:../src/umouse_object/imu.cpp **** 
 387:../src/umouse_object/imu.cpp **** 	int16_t omega_x[400];
 388:../src/umouse_object/imu.cpp **** 	int16_t omega_y[400];
 389:../src/umouse_object/imu.cpp **** 	int16_t omega_z[400];
 390:../src/umouse_object/imu.cpp **** 
 391:../src/umouse_object/imu.cpp **** 	float omega_x_sum = 0.0;
 392:../src/umouse_object/imu.cpp **** 	float omega_y_sum = 0.0;
 393:../src/umouse_object/imu.cpp **** 	float omega_z_sum = 0.0;
 394:../src/umouse_object/imu.cpp **** 
 395:../src/umouse_object/imu.cpp **** 	for(uint32_t i=0;i<3;i++)
 396:../src/umouse_object/imu.cpp **** 	{
 397:../src/umouse_object/imu.cpp **** 		omega_ref[i] = 0;
 2051                             		.loc 1 397 0
 2052 0900 3D 17 00                		mov.W	#0, 14[r1]
 2053                             	.LVL230:
 2054 0903 3D 18 00                		mov.W	#0, 16[r1]
 2055                             	.LVL231:
 2056 0906 3D 19 00                		mov.W	#0, 18[r1]
 2057                             	.LVL232:
 2058 0909 72 0C 54 06             		add	#0x654, r0, r12
 2059 090d 72 0B 34 03             		add	#0x334, r0, r11
 2060 0911 75 46 14                		mov.L	#20, r6
 2061 0914 4B 06                   		add	r0, r6
 2062 0916 66 07                   		mov.L	#0, r7
 2063                             	.LVL233:
 2064                             		.balign 8,3,5
 2065                             	.L44:
 2066                             	.LBE355:
 2067                             	.LBB356:
 398:../src/umouse_object/imu.cpp **** 	}
 399:../src/umouse_object/imu.cpp **** 
 400:../src/umouse_object/imu.cpp **** 	for(uint32_t i=0;i<ref_num;i++)
 401:../src/umouse_object/imu.cpp **** 	{
 402:../src/umouse_object/imu.cpp **** //		update();
 403:../src/umouse_object/imu.cpp **** 		omega_x[i] = omega_raw[0];
 2068                             		.loc 1 403 0
 2069 0918 DC A3                   		mov.W	[r10], r3
 404:../src/umouse_object/imu.cpp **** 		omega_y[i] = omega_raw[1];
 2070                             		.loc 1 404 0
 2071 091a DD A4 01                		mov.W	2[r10], r4
 405:../src/umouse_object/imu.cpp **** 		omega_z[i] = omega_raw[2];
 2072                             		.loc 1 405 0
 2073 091d DD AE 02                		mov.W	4[r10], r14
 403:../src/umouse_object/imu.cpp **** 		omega_y[i] = omega_raw[1];
 2074                             		.loc 1 403 0
 2075 0920 D3 C3                   		mov.W	r3, [r12]
 404:../src/umouse_object/imu.cpp **** 		omega_y[i] = omega_raw[1];
 2076                             		.loc 1 404 0
 2077 0922 D3 B4                   		mov.W	r4, [r11]
 2078                             		.loc 1 405 0
 2079 0924 D3 6E                   		mov.W	r14, [r6]
 406:../src/umouse_object/imu.cpp **** 		waitmsec(5);
 2080                             		.loc 1 406 0
 2081 0926 66 51                   		mov.L	#5, r1
 2082 0928 05 00 00 00             		bsr	__Z8waitmsecm
 2083                             	.LVL234:
 407:../src/umouse_object/imu.cpp **** 		myprintf3("%d| calibrating... %d, %d, %d\n",i,omega_x[i],omega_y[i],omega_z[i] );
 2084                             		.loc 1 407 0
 2085 092c A0 0F                   		mov.L	r7, 4[r0]
 2086 092e F8 02 55 00 00 00       		mov.L	#.LC2, [r0]
 2087 0934 FD 29 CE                		mov.W	[r12+], r14
 400:../src/umouse_object/imu.cpp **** 	{
 2088                             		.loc 1 400 0
 2089 0937 62 17                   		add	#1, r7
 2090                             	.LVL235:
 2091                             		.loc 1 407 0
 2092 0939 E7 0E 02                		mov.L	r14, 8[r0]
 2093 093c FD 29 BE                		mov.W	[r11+], r14
 2094 093f E7 0E 03                		mov.L	r14, 12[r0]
 2095 0942 FD 29 6E                		mov.W	[r6+], r14
 2096 0945 E7 0E 04                		mov.L	r14, 16[r0]
 2097 0948 05 00 00 00             		bsr	__Z9myprintf3PKcz
 2098                             	.LVL236:
 400:../src/umouse_object/imu.cpp **** 	{
 2099                             		.loc 1 400 0
 2100 094c 76 07 90 01             		cmp	#0x190, r7
 2101 0950 21 C8                   		bne	.L44
 2102                             	.LBE356:
 408:../src/umouse_object/imu.cpp **** 		//myprintf3("%d\n",i);
 409:../src/umouse_object/imu.cpp **** 	}
 410:../src/umouse_object/imu.cpp **** 	quickSort_int16(omega_x,0 ,ref_num -1);
 2103                             		.loc 1 410 0
 2104 0952 72 01 54 06             		add	#0x654, r0, r1
 2105 0956 66 02                   		mov.L	#0, r2
 2106 0958 FB 3A 8F 01             		mov.L	#0x18f, r3
 2107 095c 05 00 00 00             		bsr	__Z15quickSort_int16Psmm
 2108                             	.LVL237:
 411:../src/umouse_object/imu.cpp **** 	quickSort_int16(omega_y,0 ,ref_num -1);
 2109                             		.loc 1 411 0
 2110 0960 66 02                   		mov.L	#0, r2
 2111 0962 FB 3A 8F 01             		mov.L	#0x18f, r3
 2112 0966 72 01 34 03             		add	#0x334, r0, r1
 2113 096a 05 00 00 00             		bsr	__Z15quickSort_int16Psmm
 2114                             	.LVL238:
 412:../src/umouse_object/imu.cpp **** 	quickSort_int16(omega_z,0 ,ref_num -1);
 2115                             		.loc 1 412 0
 2116 096e 75 41 14                		mov.L	#20, r1
 2117 0971 4B 01                   		add	r0, r1
 2118 0973 66 02                   		mov.L	#0, r2
 2119 0975 FB 3A 8F 01             		mov.L	#0x18f, r3
 2120 0979 05 00 00 00             		bsr	__Z15quickSort_int16Psmm
 2121                             	.LVL239:
 2122 097d 66 0B                   		mov.L	#0x0, r11
 2123 097f 72 07 1C 07             		add	#0x71c, r0, r7
 2124                             	.LVL240:
 2125 0983 72 03 FC 03             		add	#0x3fc, r0, r3
 2126 0987 72 04 DC 00             		add	#0xdc, r0, r4
 2127 098b 72 05 AE 08             		add	#0x8ae, r0, r5
 2128 098f EF BC                   		mov.L	r11, r12
 2129 0991 EF BE                   		mov.L	r11, r14
 2130                             	.LVL241:
 2131 0993 77 10 01 00 00          		.balign 8,3,5
 2132                             	.L46:
 413:../src/umouse_object/imu.cpp **** 
 414:../src/umouse_object/imu.cpp **** 	for(i=ref_num/4;i<(ref_num*3/4 +1) ;i++)
 415:../src/umouse_object/imu.cpp **** 	{
 416:../src/umouse_object/imu.cpp **** 		omega_x_sum += (float)(omega_x[i]);
 2133                             		.loc 1 416 0 discriminator 2
 2134 0998 FD 29 76                		mov.W	[r7+], r6
 417:../src/umouse_object/imu.cpp **** 		omega_y_sum += (float)(omega_y[i]);
 2135                             		.loc 1 417 0 discriminator 2
 2136 099b FD 29 31                		mov.W	[r3+], r1
 418:../src/umouse_object/imu.cpp **** 		omega_z_sum += (float)(omega_z[i]);
 2137                             		.loc 1 418 0 discriminator 2
 2138 099e FD 29 42                		mov.W	[r4+], r2
 416:../src/umouse_object/imu.cpp **** 		omega_y_sum += (float)(omega_y[i]);
 2139                             		.loc 1 416 0 discriminator 2
 2140 09a1 FC 47 66                		itof	r6, r6
 417:../src/umouse_object/imu.cpp **** 		omega_y_sum += (float)(omega_y[i]);
 2141                             		.loc 1 417 0 discriminator 2
 2142 09a4 FC 47 11                		itof	r1, r1
 2143                             		.loc 1 418 0 discriminator 2
 2144 09a7 FC 47 22                		itof	r2, r2
 416:../src/umouse_object/imu.cpp **** 		omega_y_sum += (float)(omega_y[i]);
 2145                             		.loc 1 416 0 discriminator 2
 2146 09aa FC 8B 6E                		fadd	r6, r14
 2147                             	.LVL242:
 417:../src/umouse_object/imu.cpp **** 		omega_y_sum += (float)(omega_y[i]);
 2148                             		.loc 1 417 0 discriminator 2
 2149 09ad FC 8B 1C                		fadd	r1, r12
 2150                             	.LVL243:
 2151                             		.loc 1 418 0 discriminator 2
 2152 09b0 FC 8B 2B                		fadd	r2, r11
 2153                             	.LVL244:
 414:../src/umouse_object/imu.cpp **** 	{
 2154                             		.loc 1 414 0 discriminator 2
 2155 09b3 47 57                   		cmp	r5, r7
 2156 09b5 21 E3                   		bne	.L46
 419:../src/umouse_object/imu.cpp **** 	}
 420:../src/umouse_object/imu.cpp **** 	omega_ref[0] = (int16_t)(2.0*omega_x_sum/(float)ref_num);
 2157                             		.loc 1 420 0
 2158 09b7 FC 8B EE                		fadd	r14, r14
 2159                             	.LVL245:
 2160 09ba FD 72 4E 00 00 C8 43    		fdiv	#0x43c80000, r14
 421:../src/umouse_object/imu.cpp **** 	omega_ref[1] = (int16_t)(2.0*omega_y_sum/(float)ref_num);
 2161                             		.loc 1 421 0
 2162 09c1 FC 8B CC                		fadd	r12, r12
 2163                             	.LVL246:
 420:../src/umouse_object/imu.cpp **** 	omega_ref[1] = (int16_t)(2.0*omega_y_sum/(float)ref_num);
 2164                             		.loc 1 420 0
 2165 09c4 FC 97 EE                		ftoi	r14, r14
 2166                             		.loc 1 421 0
 2167 09c7 FD 72 4C 00 00 C8 43    		fdiv	#0x43c80000, r12
 422:../src/umouse_object/imu.cpp **** 	omega_ref[2] = (int16_t)(2.0*omega_z_sum/(float)ref_num);
 2168                             		.loc 1 422 0
 2169 09ce FC 8B BB                		fadd	r11, r11
 2170                             	.LVL247:
 420:../src/umouse_object/imu.cpp **** 	omega_ref[1] = (int16_t)(2.0*omega_y_sum/(float)ref_num);
 2171                             		.loc 1 420 0
 2172 09d1 D7 AE 07                		mov.W	r14, 14[r10]
 421:../src/umouse_object/imu.cpp **** 	omega_ref[1] = (int16_t)(2.0*omega_y_sum/(float)ref_num);
 2173                             		.loc 1 421 0
 2174 09d4 FC 97 CC                		ftoi	r12, r12
 2175                             		.loc 1 422 0
 2176 09d7 FD 72 4B 00 00 C8 43    		fdiv	#0x43c80000, r11
 421:../src/umouse_object/imu.cpp **** 	omega_ref[1] = (int16_t)(2.0*omega_y_sum/(float)ref_num);
 2177                             		.loc 1 421 0
 2178 09de D7 AC 08                		mov.W	r12, 16[r10]
 2179                             		.loc 1 422 0
 2180 09e1 FC 97 BB                		ftoi	r11, r11
 2181 09e4 D7 AB 09                		mov.W	r11, 18[r10]
 423:../src/umouse_object/imu.cpp **** 
 424:../src/umouse_object/imu.cpp **** 	//writeEEPROMOffsetOmegaInt(&omega_offset_vec[0]);
 425:../src/umouse_object/imu.cpp **** 	myprintf3("=====icm20608g=====\n gyro offset %d, %d, %d\n",omega_ref[0],omega_ref[1],omega_ref[2] 
 2182                             		.loc 1 425 0
 2183 09e7 DD AB 07                		mov.W	14[r10], r11
 2184 09ea DD AC 08                		mov.W	16[r10], r12
 2185 09ed DD A7 09                		mov.W	18[r10], r7
 2186 09f0 DF BB                   		mov.W	r11, r11
 2187 09f2 DF CA                   		mov.W	r12, r10
 2188                             	.LVL248:
 2189 09f4 DF 77                   		mov.W	r7, r7
 2190 09f6 F8 02 74 00 00 00       		mov.L	#.LC3, [r0]
 2191 09fc E7 0B 01                		mov.L	r11, 4[r0]
 2192 09ff E7 0A 02                		mov.L	r10, 8[r0]
 2193 0a02 A0 8F                   		mov.L	r7, 12[r0]
 2194 0a04 05 00 00 00             		bsr	__Z9myprintf3PKcz
 2195                             	.LVL249:
 2196                             	.LBE354:
 426:../src/umouse_object/imu.cpp **** }
 2197                             		.loc 1 426 0
 2198 0a08 72 00 74 09             		add	#0x974, r0
 2199 0a0c 3F 6C 07                		rtsd	#28, r6-r12
 2200                             	.LFE551:
 2486                             	.Letext0:
 2487                             		.file 2 "c:\\progra~2\\gccfor~2.201\\rx-elf\\rx-elf\\rx-elf\\include\\machine\\_default_types.h"
 2488                             		.file 3 "c:\\progra~2\\gccfor~2.201\\rx-elf\\rx-elf\\rx-elf\\include\\stdint.h"
 2489                             		.file 4 "C:\\Users\\ryota\\e2_studio\\workspace\\umouse\\src\\umouse_object/imu.hpp"
 2490                             		.file 5 "C:\\Users\\ryota\\e2_studio\\workspace\\umouse\\src\\other/iodefine.h"
 2491                             		.file 6 "c:\\progra~2\\gccfor~2.201\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\4.8.0.201602-gnurx\\rx-
 2492                             		.file 7 "c:\\progra~2\\gccfor~2.201\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\4.8.0.201602-gnurx\\ext
 2493                             		.file 8 "c:\\progra~2\\gccfor~2.201\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\4.8.0.201602-gnurx\\bit
 2494                             		.file 9 "c:\\progra~2\\gccfor~2.201\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\4.8.0.201602-gnurx\\deb
 2495                             		.file 10 "C:\\Users\\ryota\\e2_studio\\workspace\\umouse\\src\\peripheral/spi.h"
 2496                             		.file 11 "C:\\Users\\ryota\\e2_studio\\workspace\\umouse\\src\\peripheral/timer.h"
 2497                             		.file 12 "C:\\Users\\ryota\\e2_studio\\workspace\\umouse\\src\\utility/myUtil.h"
 2498                             		.file 13 "C:\\Users\\ryota\\e2_studio\\workspace\\umouse\\src\\peripheral/uart.hpp"
 2499                             		.file 14 "<built-in>"
 2500                             		.file 15 "c:\\progra~2\\gccfor~2.201\\rx-elf\\rx-elf\\rx-elf\\include\\c++\\4.8.0.201602-gnurx\\bi
